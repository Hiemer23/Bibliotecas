

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Mar 27 09:16:15 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 05/05/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F46K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataBANK0
    83  001F4E                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for _message
    87  001F4E  42                 	db	66
    88  001F4F  65                 	db	101
    89  001F50  6D                 	db	109
    90  001F51  20                 	db	32
    91  001F52  56                 	db	86
    92  001F53  69                 	db	105
    93  001F54  6E                 	db	110
    94  001F55  64                 	db	100
    95  001F56  6F                 	db	111
    96  001F57  20                 	db	32
    97  001F58  35                 	db	53
    98  001F59  37                 	db	55
    99  001F5A  20                 	db	32
   100  001F5B  31                 	db	49
   101  001F5C  32                 	db	50
   102  001F5D  33                 	db	51
   103  001F5E  00                 	db	0
   104  001F5F  4C                 	db	76
   105  001F60  43                 	db	67
   106  001F61  44                 	db	68
   107  001F62  20                 	db	32
   108  001F63  61                 	db	97
   109  001F64  6F                 	db	111
   110  001F65  20                 	db	32
   111  001F66  56                 	db	86
   112  001F67  69                 	db	105
   113  001F68  6E                 	db	110
   114  001F69  64                 	db	100
   115  001F6A  6F                 	db	111
   116  001F6B  20                 	db	32
   117  001F6C  42                 	db	66
   118  001F6D  65                 	db	101
   119  001F6E  6D                 	db	109
   120  001F6F  00                 	db	0
   121                           
   122                           ;initializer for _status_LCD_startup
   123  001F70  0001               	dw	1
   124  0000                     _TMR0	set	4054
   125  0000                     _ADRESL	set	4035
   126  0000                     _ADRESH	set	4036
   127  0000                     _ADCON0bits	set	4034
   128  0000                     _ADCON2	set	4032
   129  0000                     _ADCON1	set	4033
   130  0000                     _ADCON0	set	4034
   131  0000                     _OSCCON	set	4051
   132  0000                     _LATC	set	3979
   133  0000                     _LATB	set	3978
   134  0000                     _TRISA	set	3986
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _T0CON	set	4053
   138  0000                     _INTCONbits	set	4082
   139  0000                     _LATB0	set	31824
   140  0000                     _LATB1	set	31825
   141  0000                     _LATB2	set	31826
   142  0000                     _LATB3	set	31827
   143  0000                     _LATB4	set	31828
   144  0000                     _LATB5	set	31829
   145  0000                     _LATB6	set	31830
   146  0000                     _LATB7	set	31831
   147  0000                     _LATC4	set	31836
   148  0000                     _LATC5	set	31837
   149  0000                     _GIE	set	32663
   150  0000                     _PEIE	set	32662
   151  0000                     _TMR0IE	set	32661
   152                           
   153                           	psect	smallconst
   154  001000                     __psmallconst:
   155                           	callstack 0
   156  001000  00                 	db	0
   157  001001                     STR_1:
   158  001001  54                 	db	84	;'T'
   159  001002  65                 	db	101	;'e'
   160  001003  6D                 	db	109	;'m'
   161  001004  70                 	db	112	;'p'
   162  001005  6F                 	db	111	;'o'
   163  001006  3A                 	db	58	;':'
   164  001007  20                 	db	32
   165  001008  25                 	db	37
   166  001009  64                 	db	100	;'d'
   167  00100A  00                 	db	0
   168  00100B                     STR_3:
   169  00100B  41                 	db	65	;'A'
   170  00100C  44                 	db	68	;'D'
   171  00100D  3A                 	db	58	;':'
   172  00100E  20                 	db	32
   173  00100F  25                 	db	37
   174  001010  64                 	db	100	;'d'
   175  001011  00                 	db	0
   176  001012  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  001E40                     __pcinit:
   182                           	callstack 0
   183  001E40                     start_initialization:
   184                           	callstack 0
   185  001E40                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Initialize objects allocated to BANK0 (36 bytes)
   189                           ; load TBLPTR registers with __pidataBANK0
   190  001E40  0E4E               	movlw	low __pidataBANK0
   191  001E42  6EF6               	movwf	tblptrl,c
   192  001E44  0E1F               	movlw	high __pidataBANK0
   193  001E46  6EF7               	movwf	tblptrh,c
   194  001E48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   195  001E4A  6EF8               	movwf	tblptru,c
   196  001E4C  EE00  F08E         	lfsr	0,__pdataBANK0
   197  001E50  EE10 F024          	lfsr	1,36
   198  001E54                     copy_data0:
   199  001E54  0009               	tblrd		*+
   200  001E56  CFF5 FFEE          	movff	tablat,postinc0
   201  001E5A  50E5               	movf	postdec1,w,c
   202  001E5C  50E1               	movf	fsr1l,w,c
   203  001E5E  E1FA               	bnz	copy_data0
   204                           
   205                           ; Clear objects allocated to BANK0 (46 bytes)
   206  001E60  EE00  F060         	lfsr	0,__pbssBANK0
   207  001E64  0E2E               	movlw	46
   208  001E66                     clear_0:
   209  001E66  6AEE               	clrf	postinc0,c
   210  001E68  06E8               	decf	wreg,f,c
   211  001E6A  E1FD               	bnz	clear_0
   212                           
   213                           ; Clear objects allocated to COMRAM (1 bytes)
   214  001E6C  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   215  001E6E                     end_of_initialization:
   216                           	callstack 0
   217  001E6E                     __end_of__initialization:
   218                           	callstack 0
   219  001E6E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220  001E70  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221  001E72  0E00               	movlw	low (__Lsmallconst shr (0+16))
   222  001E74  6EF8               	movwf	tblptru,c
   223  001E76  0E10               	movlw	high __Lsmallconst
   224  001E78  6EF7               	movwf	tblptrh,c
   225  001E7A  0100               	movlb	0
   226  001E7C  EFD7  F00C         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229  00005E                     __pbssCOMRAM:
   230                           	callstack 0
   231  00005E                     _linha_LCD:
   232                           	callstack 0
   233  00005E                     	ds	1
   234                           
   235                           	psect	bssBANK0
   236  000060                     __pbssBANK0:
   237                           	callstack 0
   238  000060                     _nout:
   239                           	callstack 0
   240  000060                     	ds	2
   241  000062                     _width:
   242                           	callstack 0
   243  000062                     	ds	2
   244  000064                     _prec:
   245                           	callstack 0
   246  000064                     	ds	2
   247  000066                     _flags:
   248                           	callstack 0
   249  000066                     	ds	2
   250  000068                     _contador:
   251                           	callstack 0
   252  000068                     	ds	2
   253  00006A                     _counter_display:
   254                           	callstack 0
   255  00006A                     	ds	2
   256  00006C                     _position_String:
   257                           	callstack 0
   258  00006C                     	ds	2
   259  00006E                     _dbuf:
   260                           	callstack 0
   261  00006E                     	ds	32
   262                           
   263                           	psect	dataBANK0
   264  00008E                     __pdataBANK0:
   265                           	callstack 0
   266  00008E                     _message:
   267                           	callstack 0
   268  00008E                     	ds	34
   269  0000B0                     _status_LCD_startup:
   270                           	callstack 0
   271  0000B0                     	ds	2
   272                           
   273                           	psect	cstackBANK0
   274  0000B2                     __pcstackBANK0:
   275                           	callstack 0
   276  0000B2                     sprintf@ap:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x0
   280  0000B2                     	ds	2
   281  0000B4                     sprintf@f:
   282                           	callstack 0
   283                           
   284                           ; 6 bytes @ 0x2
   285  0000B4                     	ds	6
   286  0000BA                     main@timer:
   287                           	callstack 0
   288                           
   289                           ; 17 bytes @ 0x8
   290  0000BA                     	ds	17
   291  0000CB                     main@ad:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x19
   295  0000CB                     	ds	2
   296                           
   297                           	psect	cstackCOMRAM
   298  000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300  000001                     ??_clear_Display:
   301  000001                     ??_Write_caracter:
   302  000001                     ?_ADC_Read:
   303                           	callstack 0
   304  000001                     ?_strlen:
   305                           	callstack 0
   306  000001                     ?___aodiv:
   307                           	callstack 0
   308  000001                     ?___aomod:
   309                           	callstack 0
   310  000001                     Set_Line@line:
   311                           	callstack 0
   312  000001                     change_Message@new_Text:
   313                           	callstack 0
   314  000001                     fputc@c:
   315                           	callstack 0
   316  000001                     strlen@s:
   317                           	callstack 0
   318  000001                     ___aodiv@dividend:
   319                           	callstack 0
   320  000001                     ___aomod@dividend:
   321                           	callstack 0
   322                           
   323                           ; 8 bytes @ 0x0
   324  000001                     	ds	1
   325  000002                     ??_initialize_LCD:
   326                           
   327                           ; 1 bytes @ 0x1
   328  000002                     	ds	1
   329  000003                     ??_change_Message:
   330  000003                     ??_ADC_Read:
   331  000003                     Write_caracter@c:
   332                           	callstack 0
   333  000003                     fputc@fp:
   334                           	callstack 0
   335  000003                     strlen@a:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339  000003                     	ds	1
   340  000004                     ??_Write_Display:
   341                           
   342                           ; 1 bytes @ 0x3
   343  000004                     	ds	1
   344  000005                     ??_fputc:
   345  000005                     ADC_Read@digital:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x4
   349  000005                     	ds	2
   350  000007                     change_Message@line:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x6
   354  000007                     	ds	1
   355  000008                     change_Message@i:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x7
   359  000008                     	ds	1
   360  000009                     ___aodiv@divisor:
   361                           	callstack 0
   362  000009                     ___aomod@divisor:
   363                           	callstack 0
   364                           
   365                           ; 8 bytes @ 0x8
   366  000009                     	ds	1
   367  00000A                     fputs@s:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x9
   371  00000A                     	ds	2
   372  00000C                     fputs@fp:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xB
   376  00000C                     	ds	2
   377  00000E                     fputs@c:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xD
   381  00000E                     	ds	1
   382  00000F                     fputs@i:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00000F                     	ds	2
   387  000011                     ?_pad:
   388                           	callstack 0
   389  000011                     ___aodiv@counter:
   390                           	callstack 0
   391  000011                     ___aomod@counter:
   392                           	callstack 0
   393  000011                     pad@fp:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x10
   397  000011                     	ds	1
   398  000012                     ___aodiv@sign:
   399                           	callstack 0
   400  000012                     ___aomod@sign:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x11
   404  000012                     	ds	1
   405  000013                     ?_abs:
   406                           	callstack 0
   407  000013                     pad@buf:
   408                           	callstack 0
   409  000013                     abs@a:
   410                           	callstack 0
   411  000013                     ___aodiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 8 bytes @ 0x12
   415  000013                     	ds	2
   416  000015                     ??_abs:
   417  000015                     pad@p:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x14
   421  000015                     	ds	2
   422  000017                     ??_pad:
   423                           
   424                           ; 1 bytes @ 0x16
   425  000017                     	ds	1
   426  000018                     pad@i:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x17
   430  000018                     	ds	2
   431  00001A                     pad@w:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x19
   435  00001A                     	ds	2
   436  00001C                     ?_dtoa:
   437                           	callstack 0
   438  00001C                     dtoa@fp:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x1B
   442  00001C                     	ds	2
   443  00001E                     dtoa@d:
   444                           	callstack 0
   445                           
   446                           ; 8 bytes @ 0x1D
   447  00001E                     	ds	8
   448  000026                     ??_dtoa:
   449                           
   450                           ; 1 bytes @ 0x25
   451  000026                     	ds	8
   452  00002E                     _dtoa$819:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x2D
   456  00002E                     	ds	2
   457  000030                     dtoa@p:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x2F
   461  000030                     	ds	2
   462  000032                     dtoa@w:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x31
   466  000032                     	ds	2
   467  000034                     dtoa@s:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x33
   471  000034                     	ds	2
   472  000036                     dtoa@n:
   473                           	callstack 0
   474                           
   475                           ; 8 bytes @ 0x35
   476  000036                     	ds	8
   477  00003E                     dtoa@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x3D
   481  00003E                     	ds	2
   482  000040                     ?_vfpfcnvrt:
   483                           	callstack 0
   484  000040                     vfpfcnvrt@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x3F
   488  000040                     	ds	2
   489  000042                     vfpfcnvrt@fmt:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x41
   493  000042                     	ds	2
   494  000044                     vfpfcnvrt@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x43
   498  000044                     	ds	2
   499  000046                     ??_vfpfcnvrt:
   500                           
   501                           ; 1 bytes @ 0x45
   502  000046                     	ds	2
   503  000048                     vfpfcnvrt@ll:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x47
   507  000048                     	ds	8
   508  000050                     ?_vfprintf:
   509                           	callstack 0
   510  000050                     vfprintf@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x4F
   514  000050                     	ds	2
   515  000052                     vfprintf@fmt:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x51
   519  000052                     	ds	2
   520  000054                     vfprintf@ap:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x53
   524  000054                     	ds	2
   525  000056                     vfprintf@cfmt:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x55
   529  000056                     	ds	2
   530  000058                     ?_sprintf:
   531                           	callstack 0
   532  000058                     sprintf@s:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x57
   536  000058                     	ds	2
   537  00005A                     sprintf@fmt:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x59
   541  00005A                     	ds	4
   542  00005E                     
   543                           ; 1 bytes @ 0x5D
   544 ;;
   545 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   546 ;;
   547 ;; *************** function _main *****************
   548 ;; Defined at:
   549 ;;		line 34 in file "main.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  timer          17    8[BANK0 ] unsigned char [17]
   554 ;;  ad              2   25[BANK0 ] int 
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;Total ram usage:       19 bytes
   569 ;; Hardware stack levels required when called: 9
   570 ;; This function calls:
   571 ;;		_ADC_Read
   572 ;;		_Init_Timers
   573 ;;		_Write_Display
   574 ;;		_change_Message
   575 ;;		_initialize_LCD
   576 ;;		_sprintf
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  0019AE                     __ptext0:
   584                           	callstack 0
   585  0019AE                     _main:
   586                           	callstack 22
   587  0019AE                     
   588                           ;main.c: 37:     TRISB = 0x00;
   589  0019AE  0E00               	movlw	0
   590  0019B0  6E93               	movwf	147,c	;volatile
   591                           
   592                           ;main.c: 38:     TRISC = 0x00;
   593  0019B2  0E00               	movlw	0
   594  0019B4  6E94               	movwf	148,c	;volatile
   595                           
   596                           ;main.c: 39:     TRISA = 0x01;
   597  0019B6  0E01               	movlw	1
   598  0019B8  6E92               	movwf	146,c	;volatile
   599                           
   600                           ;main.c: 41:     LATB = 0x00;
   601  0019BA  0E00               	movlw	0
   602  0019BC  6E8A               	movwf	138,c	;volatile
   603                           
   604                           ;main.c: 42:     LATC = 0x00;
   605  0019BE  0E00               	movlw	0
   606  0019C0  6E8B               	movwf	139,c	;volatile
   607                           
   608                           ;main.c: 44:     OSCCON = 0b11111100;
   609  0019C2  0EFC               	movlw	252
   610  0019C4  6ED3               	movwf	211,c	;volatile
   611  0019C6                     
   612                           ;main.c: 45:     Init_Timers();
   613  0019C6  ECFD  F00F         	call	_Init_Timers	;wreg free
   614  0019CA                     
   615                           ;main.c: 47:     TMR0 = 6;
   616  0019CA  0E00               	movlw	0
   617  0019CC  6ED7               	movwf	215,c	;volatile
   618  0019CE  0E06               	movlw	6
   619  0019D0  6ED6               	movwf	214,c	;volatile
   620  0019D2                     
   621                           ;main.c: 50:     ADCON0 = 0b00000001;
   622  0019D2  0E01               	movlw	1
   623  0019D4  6EC2               	movwf	194,c	;volatile
   624  0019D6                     
   625                           ;main.c: 51:     ADCON1 = 0b00000;
   626  0019D6  0E00               	movlw	0
   627  0019D8  6EC1               	movwf	193,c	;volatile
   628  0019DA                     
   629                           ;main.c: 52:     ADCON2 = 0b10011101;
   630  0019DA  0E9D               	movlw	157
   631  0019DC  6EC0               	movwf	192,c	;volatile
   632  0019DE                     
   633                           ;main.c: 55:     initialize_LCD();
   634  0019DE  EC86  F00E         	call	_initialize_LCD	;wreg free
   635  0019E2                     
   636                           ;main.c: 56:     char timer[17];;main.c: 57:     sprintf(timer, "Tempo: %d", contador);
   637  0019E2  0EBA               	movlw	low main@timer
   638  0019E4  6E58               	movwf	sprintf@s^0,c
   639  0019E6  0E00               	movlw	high main@timer
   640  0019E8  6E59               	movwf	(sprintf@s+1)^0,c
   641  0019EA  0E01               	movlw	low STR_1
   642  0019EC  6E5A               	movwf	sprintf@fmt^0,c
   643  0019EE  0E10               	movlw	high STR_1
   644  0019F0  6E5B               	movwf	(sprintf@fmt+1)^0,c
   645  0019F2  C068  F05C         	movff	_contador,?_sprintf+4
   646  0019F6  C069  F05D         	movff	_contador+1,?_sprintf+5
   647  0019FA  ECB3  F00E         	call	_sprintf	;wreg free
   648  0019FE                     
   649                           ;main.c: 58:     change_Message(0, timer);
   650  0019FE  0EBA               	movlw	low main@timer
   651  001A00  6E01               	movwf	change_Message@new_Text^0,c
   652  001A02  0E00               	movlw	high main@timer
   653  001A04  6E02               	movwf	(change_Message@new_Text+1)^0,c
   654  001A06  0E00               	movlw	0
   655  001A08  EC54  F00C         	call	_change_Message
   656  001A0C                     l1904:
   657                           
   658                           ;main.c: 61:         if (counter_display >= 5) {
   659  001A0C  0100               	movlb	0	; () banked
   660  001A0E  BF6B               	btfsc	(_counter_display+1)& (0+255),7,b
   661  001A10  EF13  F00D         	goto	u1321
   662  001A14  516B               	movf	(_counter_display+1)& (0+255),w,b
   663  001A16  E109               	bnz	u1320
   664  001A18  0E05               	movlw	5
   665  001A1A  5D6A               	subwf	_counter_display& (0+255),w,b
   666  001A1C  A0D8               	btfss	status,0,c
   667  001A1E  EF13  F00D         	goto	u1321
   668  001A22  EF15  F00D         	goto	u1320
   669  001A26                     u1321:
   670  001A26  EF06  F00D         	goto	l1904
   671  001A2A                     u1320:
   672  001A2A                     
   673                           ; BSR set to: 0
   674                           ;main.c: 62:             Write_Display();
   675  001A2A  EC1B  F00E         	call	_Write_Display	;wreg free
   676  001A2E                     
   677                           ;main.c: 63:             counter_display = 0;
   678  001A2E  0E00               	movlw	0
   679  001A30  0100               	movlb	0	; () banked
   680  001A32  6F6B               	movwf	(_counter_display+1)& (0+255),b
   681  001A34  0E00               	movlw	0
   682  001A36  6F6A               	movwf	_counter_display& (0+255),b
   683  001A38                     
   684                           ; BSR set to: 0
   685                           ;main.c: 65:             ad = ADC_Read();
   686  001A38  EC7B  F00F         	call	_ADC_Read	;wreg free
   687  001A3C  C001  F0CB         	movff	?_ADC_Read,main@ad
   688  001A40  C002  F0CC         	movff	?_ADC_Read+1,main@ad+1
   689  001A44                     
   690                           ;main.c: 66:             *timer = '\0';
   691  001A44  0E00               	movlw	0
   692  001A46  0100               	movlb	0	; () banked
   693  001A48  6FBA               	movwf	main@timer& (0+255),b
   694  001A4A                     
   695                           ; BSR set to: 0
   696                           ;main.c: 67:             sprintf(timer, "Tempo: %d", contador);
   697  001A4A  0EBA               	movlw	low main@timer
   698  001A4C  6E58               	movwf	sprintf@s^0,c
   699  001A4E  0E00               	movlw	high main@timer
   700  001A50  6E59               	movwf	(sprintf@s+1)^0,c
   701  001A52  0E01               	movlw	low STR_1
   702  001A54  6E5A               	movwf	sprintf@fmt^0,c
   703  001A56  0E10               	movlw	high STR_1
   704  001A58  6E5B               	movwf	(sprintf@fmt+1)^0,c
   705  001A5A  C068  F05C         	movff	_contador,?_sprintf+4
   706  001A5E  C069  F05D         	movff	_contador+1,?_sprintf+5
   707  001A62  ECB3  F00E         	call	_sprintf	;wreg free
   708  001A66                     
   709                           ;main.c: 68:             change_Message(1, timer);
   710  001A66  0EBA               	movlw	low main@timer
   711  001A68  6E01               	movwf	change_Message@new_Text^0,c
   712  001A6A  0E00               	movlw	high main@timer
   713  001A6C  6E02               	movwf	(change_Message@new_Text+1)^0,c
   714  001A6E  0E01               	movlw	1
   715  001A70  EC54  F00C         	call	_change_Message
   716  001A74                     
   717                           ;main.c: 69:             sprintf(timer, "AD: %d", ad);
   718  001A74  0EBA               	movlw	low main@timer
   719  001A76  6E58               	movwf	sprintf@s^0,c
   720  001A78  0E00               	movlw	high main@timer
   721  001A7A  6E59               	movwf	(sprintf@s+1)^0,c
   722  001A7C  0E0B               	movlw	low STR_3
   723  001A7E  6E5A               	movwf	sprintf@fmt^0,c
   724  001A80  0E10               	movlw	high STR_3
   725  001A82  6E5B               	movwf	(sprintf@fmt+1)^0,c
   726  001A84  C0CB  F05C         	movff	main@ad,?_sprintf+4
   727  001A88  C0CC  F05D         	movff	main@ad+1,?_sprintf+5
   728  001A8C  ECB3  F00E         	call	_sprintf	;wreg free
   729  001A90                     
   730                           ;main.c: 70:             change_Message(0, timer);
   731  001A90  0EBA               	movlw	low main@timer
   732  001A92  6E01               	movwf	change_Message@new_Text^0,c
   733  001A94  0E00               	movlw	high main@timer
   734  001A96  6E02               	movwf	(change_Message@new_Text+1)^0,c
   735  001A98  0E00               	movlw	0
   736  001A9A  EC54  F00C         	call	_change_Message
   737  001A9E  EF06  F00D         	goto	l1904
   738  001AA2  EF1F  F000         	goto	start
   739  001AA6                     __end_of_main:
   740                           	callstack 0
   741                           
   742 ;; *************** function _sprintf *****************
   743 ;; Defined at:
   744 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  s               2   87[COMRAM] PTR unsigned char 
   747 ;;		 -> main@timer(17), 
   748 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   749 ;;		 -> STR_3(7), STR_2(10), STR_1(10), 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  f               6    2[BANK0 ] struct _IO_FILE
   752 ;;  ap              2    0[BANK0 ] PTR void [1]
   753 ;;		 -> ?_sprintf(2), 
   754 ;;  ret             2    0        int 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2   87[COMRAM] int 
   757 ;; Registers used:
   758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   764 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   767 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;Total ram usage:       14 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 8
   771 ;; This function calls:
   772 ;;		_vfprintf
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text1
   779  001D66                     __ptext1:
   780                           	callstack 0
   781  001D66                     _sprintf:
   782                           	callstack 22
   783  001D66  0E5C               	movlw	low (?_sprintf+4)
   784  001D68  0100               	movlb	0	; () banked
   785  001D6A  6FB2               	movwf	sprintf@ap& (0+255),b
   786  001D6C  0E00               	movlw	high (?_sprintf+4)
   787  001D6E  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
   788  001D70  C058  F0B4         	movff	sprintf@s,sprintf@f
   789  001D74  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
   790  001D78                     
   791                           ; BSR set to: 0
   792  001D78  0E00               	movlw	0
   793  001D7A  6FB7               	movwf	(sprintf@f+3)& (0+255),b
   794  001D7C  0E00               	movlw	0
   795  001D7E  6FB6               	movwf	(sprintf@f+2)& (0+255),b
   796  001D80                     
   797                           ; BSR set to: 0
   798  001D80  0E00               	movlw	0
   799  001D82  6FB9               	movwf	(sprintf@f+5)& (0+255),b
   800  001D84  0E00               	movlw	0
   801  001D86  6FB8               	movwf	(sprintf@f+4)& (0+255),b
   802  001D88                     
   803                           ; BSR set to: 0
   804  001D88  0EB4               	movlw	low sprintf@f
   805  001D8A  6E50               	movwf	vfprintf@fp^0,c
   806  001D8C  0E00               	movlw	high sprintf@f
   807  001D8E  6E51               	movwf	(vfprintf@fp+1)^0,c
   808  001D90  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   809  001D94  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   810  001D98  0EB2               	movlw	low sprintf@ap
   811  001D9A  6E54               	movwf	vfprintf@ap^0,c
   812  001D9C  0E00               	movlw	high sprintf@ap
   813  001D9E  6E55               	movwf	(vfprintf@ap+1)^0,c
   814  001DA0  EC55  F00E         	call	_vfprintf	;wreg free
   815  001DA4  0100               	movlb	0	; () banked
   816  001DA6  51B6               	movf	(sprintf@f+2)& (0+255),w,b
   817  001DA8  2458               	addwf	sprintf@s^0,w,c
   818  001DAA  6ED9               	movwf	fsr2l,c
   819  001DAC  51B7               	movf	(sprintf@f+3)& (0+255),w,b
   820  001DAE  2059               	addwfc	(sprintf@s+1)^0,w,c
   821  001DB0  6EDA               	movwf	fsr2h,c
   822  001DB2  0E00               	movlw	0
   823  001DB4  6EDF               	movwf	indf2,c
   824  001DB6                     
   825                           ; BSR set to: 0
   826  001DB6  0012               	return		;funcret
   827  001DB8                     __end_of_sprintf:
   828                           	callstack 0
   829                           
   830 ;; *************** function _vfprintf *****************
   831 ;; Defined at:
   832 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   835 ;;		 -> sprintf@f(6), 
   836 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   837 ;;		 -> STR_3(7), STR_2(10), STR_1(10), 
   838 ;;  ap              2   83[COMRAM] PTR PTR void 
   839 ;;		 -> sprintf@ap(2), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   842 ;;		 -> STR_3(7), STR_2(10), STR_1(10), 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  2   79[COMRAM] int 
   845 ;; Registers used:
   846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;Total ram usage:        8 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; Hardware stack levels required when called: 7
   859 ;; This function calls:
   860 ;;		_vfpfcnvrt
   861 ;; This function is called by:
   862 ;;		_sprintf
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text2
   867  001CAA                     __ptext2:
   868                           	callstack 0
   869  001CAA                     _vfprintf:
   870                           	callstack 22
   871  001CAA                     
   872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   873  001CAA  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   874  001CAE  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   875  001CB2                     
   876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   877  001CB2  0E00               	movlw	0
   878  001CB4  0100               	movlb	0	; () banked
   879  001CB6  6F61               	movwf	(_nout+1)& (0+255),b
   880  001CB8  0E00               	movlw	0
   881  001CBA  6F60               	movwf	_nout& (0+255),b
   882                           
   883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   884  001CBC  EF73  F00E         	goto	l1788
   885  001CC0                     l1786:
   886                           
   887                           ; BSR set to: 0
   888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   889  001CC0  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   890  001CC4  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   891  001CC8  0E56               	movlw	low vfprintf@cfmt
   892  001CCA  6E42               	movwf	vfpfcnvrt@fmt^0,c
   893  001CCC  0E00               	movlw	high vfprintf@cfmt
   894  001CCE  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   895  001CD0  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   896  001CD4  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   897  001CD8  EC7B  F009         	call	_vfpfcnvrt	;wreg free
   898  001CDC  5040               	movf	?_vfpfcnvrt^0,w,c
   899  001CDE  0100               	movlb	0	; () banked
   900  001CE0  2760               	addwf	_nout& (0+255),f,b
   901  001CE2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   902  001CE4  2361               	addwfc	(_nout+1)& (0+255),f,b
   903  001CE6                     l1788:
   904                           
   905                           ; BSR set to: 0
   906                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   907  001CE6  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   908  001CEA  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   909  001CEE                     	if	0	;tblptru may be non-zero
   910  001CEE                     	endif
   911  001CEE                     	if	0	;tblptru may be non-zero
   912  001CEE                     	endif
   913  001CEE  0008               	tblrd		*
   914  001CF0  50F5               	movf	tablat,w,c
   915  001CF2  0900               	iorlw	0
   916  001CF4  A4D8               	btfss	status,2,c
   917  001CF6  EF7F  F00E         	goto	u1221
   918  001CFA  EF81  F00E         	goto	u1220
   919  001CFE                     u1221:
   920  001CFE  EF60  F00E         	goto	l1786
   921  001D02                     u1220:
   922  001D02                     
   923                           ; BSR set to: 0
   924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   925  001D02  C060  F050         	movff	_nout,?_vfprintf
   926  001D06  C061  F051         	movff	_nout+1,?_vfprintf+1
   927  001D0A                     
   928                           ; BSR set to: 0
   929  001D0A  0012               	return		;funcret
   930  001D0C                     __end_of_vfprintf:
   931                           	callstack 0
   932                           
   933 ;; *************** function _vfpfcnvrt *****************
   934 ;; Defined at:
   935 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   938 ;;		 -> sprintf@f(6), 
   939 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   940 ;;		 -> vfprintf@cfmt(2), 
   941 ;;  ap              2   67[COMRAM] PTR PTR void 
   942 ;;		 -> sprintf@ap(2), 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;  ll              8   71[COMRAM] long long 
   945 ;;  llu             8    0        unsigned long long 
   946 ;;  f               4    0        unsigned long long 
   947 ;;  vp              3    0        PTR void 
   948 ;;  ct              3    0        unsigned char [3]
   949 ;;  cp              3    0        PTR unsigned char 
   950 ;;  i               2    0        int 
   951 ;;  done            2    0        int 
   952 ;;  c               1    0        unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  2   63[COMRAM] int 
   955 ;; Registers used:
   956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:       16 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 6
   969 ;; This function calls:
   970 ;;		_dtoa
   971 ;;		_fputc
   972 ;; This function is called by:
   973 ;;		_vfprintf
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text3
   978  0012F6                     __ptext3:
   979                           	callstack 0
   980  0012F6                     _vfpfcnvrt:
   981                           	callstack 22
   982  0012F6                     
   983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   984  0012F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   985  0012FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   986  0012FE  CFDE FFF6          	movff	postinc2,tblptrl
   987  001302  CFDD FFF7          	movff	postdec2,tblptrh
   988  001306                     	if	0	;tblptru may be non-zero
   989  001306                     	endif
   990  001306                     	if	0	;tblptru may be non-zero
   991  001306                     	endif
   992  001306  0008               	tblrd		*
   993  001308  50F5               	movf	tablat,w,c
   994  00130A  0A25               	xorlw	37
   995  00130C  A4D8               	btfss	status,2,c
   996  00130E  EF8B  F009         	goto	u1061
   997  001312  EF8D  F009         	goto	u1060
   998  001316                     u1061:
   999  001316  EF39  F00A         	goto	l1710
  1000  00131A                     u1060:
  1001  00131A                     
  1002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1003  00131A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1004  00131E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1005  001322  2ADE               	incf	postinc2,f,c
  1006  001324  0E00               	movlw	0
  1007  001326  22DD               	addwfc	postdec2,f,c
  1008  001328                     
  1009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1010  001328  0E00               	movlw	0
  1011  00132A  0100               	movlb	0	; () banked
  1012  00132C  6F63               	movwf	(_width+1)& (0+255),b
  1013  00132E  0E00               	movlw	0
  1014  001330  6F62               	movwf	_width& (0+255),b
  1015  001332  C062  F066         	movff	_width,_flags
  1016  001336  C063  F067         	movff	_width+1,_flags+1
  1017  00133A                     
  1018                           ; BSR set to: 0
  1019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1020  00133A  6964               	setf	_prec& (0+255),b
  1021  00133C  6965               	setf	(_prec+1)& (0+255),b
  1022  00133E                     
  1023                           ; BSR set to: 0
  1024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1025  00133E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1026  001342  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1027  001346  CFDE FFF6          	movff	postinc2,tblptrl
  1028  00134A  CFDD FFF7          	movff	postdec2,tblptrh
  1029  00134E                     	if	0	;tblptru may be non-zero
  1030  00134E                     	endif
  1031  00134E                     	if	0	;tblptru may be non-zero
  1032  00134E                     	endif
  1033  00134E  0008               	tblrd		*
  1034  001350  50F5               	movf	tablat,w,c
  1035  001352  0A64               	xorlw	100
  1036  001354  B4D8               	btfsc	status,2,c
  1037  001356  EFAF  F009         	goto	u1071
  1038  00135A  EFB1  F009         	goto	u1070
  1039  00135E                     u1071:
  1040  00135E  EFC3  F009         	goto	l1688
  1041  001362                     u1070:
  1042  001362                     
  1043                           ; BSR set to: 0
  1044  001362  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1045  001366  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1046  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  1047  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  1048  001372                     	if	0	;tblptru may be non-zero
  1049  001372                     	endif
  1050  001372                     	if	0	;tblptru may be non-zero
  1051  001372                     	endif
  1052  001372  0008               	tblrd		*
  1053  001374  50F5               	movf	tablat,w,c
  1054  001376  0A69               	xorlw	105
  1055  001378  A4D8               	btfss	status,2,c
  1056  00137A  EFC1  F009         	goto	u1081
  1057  00137E  EFC3  F009         	goto	u1080
  1058  001382                     u1081:
  1059  001382  EF03  F00A         	goto	l1694
  1060  001386                     u1080:
  1061  001386                     l1688:
  1062                           
  1063                           ; BSR set to: 0
  1064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1065  001386  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1066  00138A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1067  00138E  2ADE               	incf	postinc2,f,c
  1068  001390  0E00               	movlw	0
  1069  001392  22DD               	addwfc	postdec2,f,c
  1070                           
  1071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1072  001394  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1073  001398  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1074  00139C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1075  0013A0  0E02               	movlw	2
  1076  0013A2  26DE               	addwf	postinc2,f,c
  1077  0013A4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1078  0013A8  0E00               	movlw	0
  1079  0013AA  22DD               	addwfc	postdec2,f,c
  1080  0013AC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1081  0013B0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1082  0013B4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1083  0013B8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1084  0013BC  0E00               	movlw	0
  1085  0013BE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1086  0013C0  0EFF               	movlw	-1
  1087  0013C2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1088  0013C4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1089  0013C6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1090  0013C8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1091  0013CA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1092  0013CC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1093  0013CE                     
  1094                           ; BSR set to: 0
  1095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1096  0013CE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1097  0013D2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1098  0013D6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1099  0013DA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1100  0013DE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1101  0013E2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1102  0013E6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1103  0013EA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1104  0013EE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1105  0013F2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1106  0013F6  EC0A  F008         	call	_dtoa	;wreg free
  1107  0013FA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1108  0013FE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1109  001402  EF54  F00A         	goto	l973
  1110  001406                     l1694:
  1111                           
  1112                           ; BSR set to: 0
  1113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1114  001406  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1115  00140A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1116  00140E  CFDE FFF6          	movff	postinc2,tblptrl
  1117  001412  CFDD FFF7          	movff	postdec2,tblptrh
  1118  001416                     	if	0	;tblptru may be non-zero
  1119  001416                     	endif
  1120  001416                     	if	0	;tblptru may be non-zero
  1121  001416                     	endif
  1122  001416  0008               	tblrd		*
  1123  001418  50F5               	movf	tablat,w,c
  1124  00141A  0A25               	xorlw	37
  1125  00141C  A4D8               	btfss	status,2,c
  1126  00141E  EF13  F00A         	goto	u1091
  1127  001422  EF15  F00A         	goto	u1090
  1128  001426                     u1091:
  1129  001426  EF2C  F00A         	goto	l1704
  1130  00142A                     u1090:
  1131  00142A                     
  1132                           ; BSR set to: 0
  1133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1134  00142A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1135  00142E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1136  001432  2ADE               	incf	postinc2,f,c
  1137  001434  0E00               	movlw	0
  1138  001436  22DD               	addwfc	postdec2,f,c
  1139  001438                     
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1142  001438  0E00               	movlw	0
  1143  00143A  6E02               	movwf	(fputc@c+1)^0,c
  1144  00143C  0E25               	movlw	37
  1145  00143E  6E01               	movwf	fputc@c^0,c
  1146  001440  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1147  001444  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1148  001448  EC53  F00D         	call	_fputc	;wreg free
  1149  00144C                     l1700:
  1150                           
  1151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1152  00144C  0E00               	movlw	0
  1153  00144E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1154  001450  0E01               	movlw	1
  1155  001452  6E40               	movwf	?_vfpfcnvrt^0,c
  1156  001454  EF54  F00A         	goto	l973
  1157  001458                     l1704:
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1161  001458  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1162  00145C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1163  001460  2ADE               	incf	postinc2,f,c
  1164  001462  0E00               	movlw	0
  1165  001464  22DD               	addwfc	postdec2,f,c
  1166  001466                     
  1167                           ; BSR set to: 0
  1168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1169  001466  0E00               	movlw	0
  1170  001468  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1171  00146A  0E00               	movlw	0
  1172  00146C  6E40               	movwf	?_vfpfcnvrt^0,c
  1173  00146E  EF54  F00A         	goto	l973
  1174  001472                     l1710:
  1175                           
  1176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1177  001472  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1178  001476  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1179  00147A  CFDE FFF6          	movff	postinc2,tblptrl
  1180  00147E  CFDD FFF7          	movff	postdec2,tblptrh
  1181  001482                     	if	0	;tblptru may be non-zero
  1182  001482                     	endif
  1183  001482                     	if	0	;tblptru may be non-zero
  1184  001482                     	endif
  1185  001482  0008               	tblrd		*
  1186  001484  50F5               	movf	tablat,w,c
  1187  001486  6E01               	movwf	fputc@c^0,c
  1188  001488  6A02               	clrf	(fputc@c+1)^0,c
  1189  00148A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1190  00148E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1191  001492  EC53  F00D         	call	_fputc	;wreg free
  1192  001496                     
  1193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1194  001496  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1195  00149A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1196  00149E  2ADE               	incf	postinc2,f,c
  1197  0014A0  0E00               	movlw	0
  1198  0014A2  22DD               	addwfc	postdec2,f,c
  1199  0014A4  EF26  F00A         	goto	l1700
  1200  0014A8                     l973:
  1201  0014A8  0012               	return		;funcret
  1202  0014AA                     __end_of_vfpfcnvrt:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _dtoa *****************
  1206 ;; Defined at:
  1207 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1210 ;;		 -> sprintf@f(6), 
  1211 ;;  d               8   29[COMRAM] long long 
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  n               8   53[COMRAM] long long 
  1214 ;;  i               2   61[COMRAM] int 
  1215 ;;  s               2   51[COMRAM] int 
  1216 ;;  w               2   49[COMRAM] int 
  1217 ;;  p               2   47[COMRAM] int 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  2   27[COMRAM] int 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1227 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1228 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;Total ram usage:       36 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 5
  1234 ;; This function calls:
  1235 ;;		___aodiv
  1236 ;;		___aomod
  1237 ;;		_abs
  1238 ;;		_pad
  1239 ;; This function is called by:
  1240 ;;		_vfpfcnvrt
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text4
  1245  001014                     __ptext4:
  1246                           	callstack 0
  1247  001014                     _dtoa:
  1248                           	callstack 22
  1249  001014                     
  1250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1251  001014  C01E  F036         	movff	dtoa@d,dtoa@n
  1252  001018  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1253  00101C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1254  001020  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1255  001024  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1256  001028  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1257  00102C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1258  001030  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1259  001034                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1261  001034  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1262  001036  EF1F  F008         	goto	u911
  1263  00103A  EF22  F008         	goto	u910
  1264  00103E                     u911:
  1265  00103E  0E01               	movlw	1
  1266  001040  EF23  F008         	goto	u920
  1267  001044                     u910:
  1268  001044  0E00               	movlw	0
  1269  001046                     u920:
  1270  001046  6E34               	movwf	dtoa@s^0,c
  1271  001048  6A35               	clrf	(dtoa@s+1)^0,c
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1274  00104A  5034               	movf	dtoa@s^0,w,c
  1275  00104C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1276  00104E  B4D8               	btfsc	status,2,c
  1277  001050  EF2C  F008         	goto	u931
  1278  001054  EF2E  F008         	goto	u930
  1279  001058                     u931:
  1280  001058  EF3E  F008         	goto	l1614
  1281  00105C                     u930:
  1282  00105C                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1284  00105C  1E3D               	comf	(dtoa@n+7)^0,f,c
  1285  00105E  1E3C               	comf	(dtoa@n+6)^0,f,c
  1286  001060  1E3B               	comf	(dtoa@n+5)^0,f,c
  1287  001062  1E3A               	comf	(dtoa@n+4)^0,f,c
  1288  001064  1E39               	comf	(dtoa@n+3)^0,f,c
  1289  001066  1E38               	comf	(dtoa@n+2)^0,f,c
  1290  001068  1E37               	comf	(dtoa@n+1)^0,f,c
  1291  00106A  6C36               	negf	dtoa@n^0,c
  1292  00106C  0E00               	movlw	0
  1293  00106E  2237               	addwfc	(dtoa@n+1)^0,f,c
  1294  001070  2238               	addwfc	(dtoa@n+2)^0,f,c
  1295  001072  2239               	addwfc	(dtoa@n+3)^0,f,c
  1296  001074  223A               	addwfc	(dtoa@n+4)^0,f,c
  1297  001076  223B               	addwfc	(dtoa@n+5)^0,f,c
  1298  001078  223C               	addwfc	(dtoa@n+6)^0,f,c
  1299  00107A  223D               	addwfc	(dtoa@n+7)^0,f,c
  1300  00107C                     l1614:
  1301                           
  1302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1303  00107C  0100               	movlb	0	; () banked
  1304  00107E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1305  001080  EF44  F008         	goto	u941
  1306  001084  EF46  F008         	goto	u940
  1307  001088                     u941:
  1308  001088  EF47  F008         	goto	l1618
  1309  00108C                     u940:
  1310  00108C                     
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1313  00108C  9366               	bcf	_flags& (0+255),1,b
  1314  00108E                     l1618:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1318  00108E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1319  001090  EF54  F008         	goto	u950
  1320  001094  5165               	movf	(_prec+1)& (0+255),w,b
  1321  001096  E106               	bnz	u951
  1322  001098  0564               	decf	_prec& (0+255),w,b
  1323  00109A  B0D8               	btfsc	status,0,c
  1324  00109C  EF52  F008         	goto	u951
  1325  0010A0  EF54  F008         	goto	u950
  1326  0010A4                     u951:
  1327  0010A4  EF5A  F008         	goto	l946
  1328  0010A8                     u950:
  1329  0010A8                     
  1330                           ; BSR set to: 0
  1331  0010A8  0E00               	movlw	0
  1332  0010AA  6E31               	movwf	(dtoa@p+1)^0,c
  1333  0010AC  0E01               	movlw	1
  1334  0010AE  6E30               	movwf	dtoa@p^0,c
  1335  0010B0  EF5E  F008         	goto	l948
  1336  0010B4                     l946:
  1337                           
  1338                           ; BSR set to: 0
  1339  0010B4  C064  F030         	movff	_prec,dtoa@p
  1340  0010B8  C065  F031         	movff	_prec+1,dtoa@p+1
  1341  0010BC                     l948:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1345  0010BC  C062  F032         	movff	_width,dtoa@w
  1346  0010C0  C063  F033         	movff	_width+1,dtoa@w+1
  1347  0010C4                     
  1348                           ; BSR set to: 0
  1349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1350  0010C4  5034               	movf	dtoa@s^0,w,c
  1351  0010C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1352  0010C8  A4D8               	btfss	status,2,c
  1353  0010CA  EF69  F008         	goto	u961
  1354  0010CE  EF6B  F008         	goto	u960
  1355  0010D2                     u961:
  1356  0010D2  EF72  F008         	goto	l1626
  1357  0010D6                     u960:
  1358  0010D6                     
  1359                           ; BSR set to: 0
  1360  0010D6  A566               	btfss	_flags& (0+255),2,b
  1361  0010D8  EF70  F008         	goto	u971
  1362  0010DC  EF72  F008         	goto	u970
  1363  0010E0                     u971:
  1364  0010E0  EF75  F008         	goto	l1628
  1365  0010E4                     u970:
  1366  0010E4                     l1626:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1370  0010E4  0632               	decf	dtoa@w^0,f,c
  1371  0010E6  A0D8               	btfss	status,0,c
  1372  0010E8  0633               	decf	(dtoa@w+1)^0,f,c
  1373  0010EA                     l1628:
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1377  0010EA  0E00               	movlw	0
  1378  0010EC  6E3F               	movwf	(dtoa@i+1)^0,c
  1379  0010EE  0E1F               	movlw	31
  1380  0010F0  6E3E               	movwf	dtoa@i^0,c
  1381  0010F2                     
  1382                           ; BSR set to: 0
  1383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1384  0010F2  0E00               	movlw	0
  1385  0010F4  6F8D               	movwf	(_dbuf+31)& (0+255),b
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1388  0010F6  EFF9  F008         	goto	l1642
  1389  0010FA                     l1632:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1392  0010FA  063E               	decf	dtoa@i^0,f,c
  1393  0010FC  A0D8               	btfss	status,0,c
  1394  0010FE  063F               	decf	(dtoa@i+1)^0,f,c
  1395  001100                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1397  001100  0E6E               	movlw	low _dbuf
  1398  001102  243E               	addwf	dtoa@i^0,w,c
  1399  001104  6ED9               	movwf	fsr2l,c
  1400  001106  0E00               	movlw	high _dbuf
  1401  001108  203F               	addwfc	(dtoa@i+1)^0,w,c
  1402  00110A  6EDA               	movwf	fsr2h,c
  1403  00110C  C036  F001         	movff	dtoa@n,___aomod@dividend
  1404  001110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1405  001114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1406  001118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1407  00111C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1408  001120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1409  001124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1410  001128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1411  00112C  0E0A               	movlw	10
  1412  00112E  6E09               	movwf	___aomod@divisor^0,c
  1413  001130  0E00               	movlw	0
  1414  001132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1415  001134  0E00               	movlw	0
  1416  001136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1417  001138  0E00               	movlw	0
  1418  00113A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1419  00113C  0E00               	movlw	0
  1420  00113E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1421  001140  0E00               	movlw	0
  1422  001142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1423  001144  0E00               	movlw	0
  1424  001146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1425  001148  0E00               	movlw	0
  1426  00114A  6E10               	movwf	(___aomod@divisor+7)^0,c
  1427  00114C  EC19  F00B         	call	___aomod	;wreg free
  1428  001150  C001  F026         	movff	?___aomod,??_dtoa
  1429  001154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1430  001158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1431  00115C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1432  001160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1433  001164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1434  001168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1435  00116C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1436  001170  C026  F013         	movff	??_dtoa,abs@a
  1437  001174  C028  F014         	movff	??_dtoa+2,abs@a+1
  1438  001178  EC40  F00F         	call	_abs	;wreg free
  1439  00117C  5013               	movf	?_abs^0,w,c
  1440  00117E  0F30               	addlw	48
  1441  001180  6EDF               	movwf	indf2,c
  1442  001182                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1444  001182  0630               	decf	dtoa@p^0,f,c
  1445  001184  A0D8               	btfss	status,0,c
  1446  001186  0631               	decf	(dtoa@p+1)^0,f,c
  1447  001188                     
  1448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1449  001188  0632               	decf	dtoa@w^0,f,c
  1450  00118A  A0D8               	btfss	status,0,c
  1451  00118C  0633               	decf	(dtoa@w+1)^0,f,c
  1452  00118E                     
  1453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1454  00118E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1455  001192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1456  001196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1457  00119A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1458  00119E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1459  0011A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1460  0011A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1461  0011AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1462  0011AE  0E0A               	movlw	10
  1463  0011B0  6E09               	movwf	___aodiv@divisor^0,c
  1464  0011B2  0E00               	movlw	0
  1465  0011B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1466  0011B6  0E00               	movlw	0
  1467  0011B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1468  0011BA  0E00               	movlw	0
  1469  0011BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1470  0011BE  0E00               	movlw	0
  1471  0011C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1472  0011C2  0E00               	movlw	0
  1473  0011C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1474  0011C6  0E00               	movlw	0
  1475  0011C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1476  0011CA  0E00               	movlw	0
  1477  0011CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1478  0011CE  EC55  F00A         	call	___aodiv	;wreg free
  1479  0011D2  C001  F036         	movff	?___aodiv,dtoa@n
  1480  0011D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1481  0011DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1482  0011DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1483  0011E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1484  0011E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1485  0011EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1486  0011EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1487  0011F2                     l1642:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1490  0011F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1491  0011F4  EF04  F009         	goto	u981
  1492  0011F8  503F               	movf	(dtoa@i+1)^0,w,c
  1493  0011FA  E108               	bnz	u980
  1494  0011FC  043E               	decf	dtoa@i^0,w,c
  1495  0011FE  A0D8               	btfss	status,0,c
  1496  001200  EF04  F009         	goto	u981
  1497  001204  EF06  F009         	goto	u980
  1498  001208                     u981:
  1499  001208  EF37  F009         	goto	l1652
  1500  00120C                     u980:
  1501  00120C  5036               	movf	dtoa@n^0,w,c
  1502  00120E  1037               	iorwf	(dtoa@n+1)^0,w,c
  1503  001210  1038               	iorwf	(dtoa@n+2)^0,w,c
  1504  001212  1039               	iorwf	(dtoa@n+3)^0,w,c
  1505  001214  103A               	iorwf	(dtoa@n+4)^0,w,c
  1506  001216  103B               	iorwf	(dtoa@n+5)^0,w,c
  1507  001218  103C               	iorwf	(dtoa@n+6)^0,w,c
  1508  00121A  103D               	iorwf	(dtoa@n+7)^0,w,c
  1509  00121C  A4D8               	btfss	status,2,c
  1510  00121E  EF13  F009         	goto	u991
  1511  001222  EF15  F009         	goto	u990
  1512  001226                     u991:
  1513  001226  EF7D  F008         	goto	l1632
  1514  00122A                     u990:
  1515  00122A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1516  00122C  EF22  F009         	goto	u1000
  1517  001230  5031               	movf	(dtoa@p+1)^0,w,c
  1518  001232  E106               	bnz	u1001
  1519  001234  0430               	decf	dtoa@p^0,w,c
  1520  001236  B0D8               	btfsc	status,0,c
  1521  001238  EF20  F009         	goto	u1001
  1522  00123C  EF22  F009         	goto	u1000
  1523  001240                     u1001:
  1524  001240  EF7D  F008         	goto	l1632
  1525  001244                     u1000:
  1526  001244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1527  001246  EF2D  F009         	goto	u1011
  1528  00124A  5033               	movf	(dtoa@w+1)^0,w,c
  1529  00124C  E108               	bnz	u1010
  1530  00124E  0432               	decf	dtoa@w^0,w,c
  1531  001250  A0D8               	btfss	status,0,c
  1532  001252  EF2D  F009         	goto	u1011
  1533  001256  EF2F  F009         	goto	u1010
  1534  00125A                     u1011:
  1535  00125A  EF37  F009         	goto	l1652
  1536  00125E                     u1010:
  1537  00125E  0100               	movlb	0	; () banked
  1538  001260  B366               	btfsc	_flags& (0+255),1,b
  1539  001262  EF35  F009         	goto	u1021
  1540  001266  EF37  F009         	goto	u1020
  1541  00126A                     u1021:
  1542  00126A  EF7D  F008         	goto	l1632
  1543  00126E                     u1020:
  1544  00126E                     l1652:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1547  00126E  5034               	movf	dtoa@s^0,w,c
  1548  001270  1035               	iorwf	(dtoa@s+1)^0,w,c
  1549  001272  A4D8               	btfss	status,2,c
  1550  001274  EF3E  F009         	goto	u1031
  1551  001278  EF40  F009         	goto	u1030
  1552  00127C                     u1031:
  1553  00127C  EF48  F009         	goto	l1656
  1554  001280                     u1030:
  1555  001280  0100               	movlb	0	; () banked
  1556  001282  A566               	btfss	_flags& (0+255),2,b
  1557  001284  EF46  F009         	goto	u1041
  1558  001288  EF48  F009         	goto	u1040
  1559  00128C                     u1041:
  1560  00128C  EF66  F009         	goto	l1666
  1561  001290                     u1040:
  1562  001290                     l1656:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1565  001290  063E               	decf	dtoa@i^0,f,c
  1566  001292  A0D8               	btfss	status,0,c
  1567  001294  063F               	decf	(dtoa@i+1)^0,f,c
  1568  001296                     
  1569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1570  001296  5034               	movf	dtoa@s^0,w,c
  1571  001298  1035               	iorwf	(dtoa@s+1)^0,w,c
  1572  00129A  A4D8               	btfss	status,2,c
  1573  00129C  EF52  F009         	goto	u1051
  1574  0012A0  EF54  F009         	goto	u1050
  1575  0012A4                     u1051:
  1576  0012A4  EF5A  F009         	goto	l1662
  1577  0012A8                     u1050:
  1578  0012A8  0E00               	movlw	0
  1579  0012AA  6E2F               	movwf	(_dtoa$819+1)^0,c
  1580  0012AC  0E2B               	movlw	43
  1581  0012AE  6E2E               	movwf	_dtoa$819^0,c
  1582  0012B0  EF5E  F009         	goto	l1664
  1583  0012B4                     l1662:
  1584  0012B4  0E00               	movlw	0
  1585  0012B6  6E2F               	movwf	(_dtoa$819+1)^0,c
  1586  0012B8  0E2D               	movlw	45
  1587  0012BA  6E2E               	movwf	_dtoa$819^0,c
  1588  0012BC                     l1664:
  1589  0012BC  0E6E               	movlw	low _dbuf
  1590  0012BE  243E               	addwf	dtoa@i^0,w,c
  1591  0012C0  6ED9               	movwf	fsr2l,c
  1592  0012C2  0E00               	movlw	high _dbuf
  1593  0012C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  1594  0012C6  6EDA               	movwf	fsr2h,c
  1595  0012C8  C02E  FFDF         	movff	_dtoa$819,indf2
  1596  0012CC                     l1666:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1599  0012CC  C01C  F011         	movff	dtoa@fp,pad@fp
  1600  0012D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1601  0012D4  0E6E               	movlw	low _dbuf
  1602  0012D6  243E               	addwf	dtoa@i^0,w,c
  1603  0012D8  6E13               	movwf	pad@buf^0,c
  1604  0012DA  0E00               	movlw	high _dbuf
  1605  0012DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1606  0012DE  6E14               	movwf	(pad@buf+1)^0,c
  1607  0012E0  C032  F015         	movff	dtoa@w,pad@p
  1608  0012E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  1609  0012E8  ECB8  F00D         	call	_pad	;wreg free
  1610  0012EC  C011  F01C         	movff	?_pad,?_dtoa
  1611  0012F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1612  0012F4  0012               	return		;funcret
  1613  0012F6                     __end_of_dtoa:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _pad *****************
  1617 ;; Defined at:
  1618 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1621 ;;		 -> sprintf@f(6), 
  1622 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1623 ;;		 -> dbuf(32), 
  1624 ;;  p               2   20[COMRAM] int 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  w               2   25[COMRAM] int 
  1627 ;;  i               2   23[COMRAM] int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2   16[COMRAM] int 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1637 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;Total ram usage:       11 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; Hardware stack levels required when called: 4
  1644 ;; This function calls:
  1645 ;;		_fputc
  1646 ;;		_fputs
  1647 ;;		_strlen
  1648 ;; This function is called by:
  1649 ;;		_dtoa
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text5
  1654  001B70                     __ptext5:
  1655                           	callstack 0
  1656  001B70                     _pad:
  1657                           	callstack 22
  1658  001B70                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1660  001B70  0100               	movlb	0	; () banked
  1661  001B72  A166               	btfss	_flags& (0+255),0,b
  1662  001B74  EFBE  F00D         	goto	u861
  1663  001B78  EFC0  F00D         	goto	u860
  1664  001B7C                     u861:
  1665  001B7C  EFCA  F00D         	goto	l1586
  1666  001B80                     u860:
  1667  001B80                     
  1668                           ; BSR set to: 0
  1669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1670  001B80  C013  F00A         	movff	pad@buf,fputs@s
  1671  001B84  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1672  001B88  C011  F00C         	movff	pad@fp,fputs@fp
  1673  001B8C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1674  001B90  ECDC  F00E         	call	_fputs	;wreg free
  1675  001B94                     l1586:
  1676                           
  1677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1678  001B94  BE16               	btfsc	(pad@p+1)^0,7,c
  1679  001B96  EFCF  F00D         	goto	u871
  1680  001B9A  EFD1  F00D         	goto	u870
  1681  001B9E                     u871:
  1682  001B9E  EFD7  F00D         	goto	l1590
  1683  001BA2                     u870:
  1684  001BA2  C015  F01A         	movff	pad@p,pad@w
  1685  001BA6  C016  F01B         	movff	pad@p+1,pad@w+1
  1686  001BAA  EFDB  F00D         	goto	l935
  1687  001BAE                     l1590:
  1688  001BAE  0E00               	movlw	0
  1689  001BB0  6E1B               	movwf	(pad@w+1)^0,c
  1690  001BB2  0E00               	movlw	0
  1691  001BB4  6E1A               	movwf	pad@w^0,c
  1692  001BB6                     l935:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1695  001BB6  0E00               	movlw	0
  1696  001BB8  6E19               	movwf	(pad@i+1)^0,c
  1697  001BBA  0E00               	movlw	0
  1698  001BBC  6E18               	movwf	pad@i^0,c
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1701  001BBE  EFED  F00D         	goto	l1596
  1702  001BC2                     l1592:
  1703                           
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1705  001BC2  0E00               	movlw	0
  1706  001BC4  6E02               	movwf	(fputc@c+1)^0,c
  1707  001BC6  0E20               	movlw	32
  1708  001BC8  6E01               	movwf	fputc@c^0,c
  1709  001BCA  C011  F003         	movff	pad@fp,fputc@fp
  1710  001BCE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1711  001BD2  EC53  F00D         	call	_fputc	;wreg free
  1712  001BD6                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1714  001BD6  4A18               	infsnz	pad@i^0,f,c
  1715  001BD8  2A19               	incf	(pad@i+1)^0,f,c
  1716  001BDA                     l1596:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1719  001BDA  501A               	movf	pad@w^0,w,c
  1720  001BDC  5C18               	subwf	pad@i^0,w,c
  1721  001BDE  5019               	movf	(pad@i+1)^0,w,c
  1722  001BE0  0A80               	xorlw	128
  1723  001BE2  6E17               	movwf	??_pad^0,c
  1724  001BE4  501B               	movf	(pad@w+1)^0,w,c
  1725  001BE6  0A80               	xorlw	128
  1726  001BE8  5817               	subwfb	??_pad^0,w,c
  1727  001BEA  A0D8               	btfss	status,0,c
  1728  001BEC  EFFA  F00D         	goto	u881
  1729  001BF0  EFFC  F00D         	goto	u880
  1730  001BF4                     u881:
  1731  001BF4  EFE1  F00D         	goto	l1592
  1732  001BF8                     u880:
  1733  001BF8                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1735  001BF8  0100               	movlb	0	; () banked
  1736  001BFA  B166               	btfsc	_flags& (0+255),0,b
  1737  001BFC  EF02  F00E         	goto	u891
  1738  001C00  EF04  F00E         	goto	u890
  1739  001C04                     u891:
  1740  001C04  EF0E  F00E         	goto	l1600
  1741  001C08                     u890:
  1742  001C08                     
  1743                           ; BSR set to: 0
  1744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1745  001C08  C013  F00A         	movff	pad@buf,fputs@s
  1746  001C0C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1747  001C10  C011  F00C         	movff	pad@fp,fputs@fp
  1748  001C14  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1749  001C18  ECDC  F00E         	call	_fputs	;wreg free
  1750  001C1C                     l1600:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1753  001C1C  C013  F001         	movff	pad@buf,strlen@s
  1754  001C20  C014  F002         	movff	pad@buf+1,strlen@s+1
  1755  001C24  EC60  F00F         	call	_strlen	;wreg free
  1756  001C28  501A               	movf	pad@w^0,w,c
  1757  001C2A  2401               	addwf	?_strlen^0,w,c
  1758  001C2C  6E11               	movwf	?_pad^0,c
  1759  001C2E  501B               	movf	(pad@w+1)^0,w,c
  1760  001C30  2002               	addwfc	(?_strlen+1)^0,w,c
  1761  001C32  6E12               	movwf	(?_pad+1)^0,c
  1762  001C34  0012               	return		;funcret
  1763  001C36                     __end_of_pad:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _strlen *****************
  1767 ;; Defined at:
  1768 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1771 ;;		 -> dbuf(32), 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1774 ;;		 -> dbuf(32), 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2    0[COMRAM] unsigned int 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_pad
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799  001EC0                     __ptext6:
  1800                           	callstack 0
  1801  001EC0                     _strlen:
  1802                           	callstack 24
  1803  001EC0  C001  F003         	movff	strlen@s,strlen@a
  1804  001EC4  C002  F004         	movff	strlen@s+1,strlen@a+1
  1805  001EC8  EF68  F00F         	goto	l1496
  1806  001ECC                     l1494:
  1807  001ECC  4A01               	infsnz	strlen@s^0,f,c
  1808  001ECE  2A02               	incf	(strlen@s+1)^0,f,c
  1809  001ED0                     l1496:
  1810  001ED0  C001  FFD9         	movff	strlen@s,fsr2l
  1811  001ED4  C002  FFDA         	movff	strlen@s+1,fsr2h
  1812  001ED8  50DF               	movf	indf2,w,c
  1813  001EDA  A4D8               	btfss	status,2,c
  1814  001EDC  EF72  F00F         	goto	u721
  1815  001EE0  EF74  F00F         	goto	u720
  1816  001EE4                     u721:
  1817  001EE4  EF66  F00F         	goto	l1494
  1818  001EE8                     u720:
  1819  001EE8  5003               	movf	strlen@a^0,w,c
  1820  001EEA  5C01               	subwf	strlen@s^0,w,c
  1821  001EEC  6E01               	movwf	?_strlen^0,c
  1822  001EEE  5004               	movf	(strlen@a+1)^0,w,c
  1823  001EF0  5802               	subwfb	(strlen@s+1)^0,w,c
  1824  001EF2  6E02               	movwf	(?_strlen+1)^0,c
  1825  001EF4  0012               	return		;funcret
  1826  001EF6                     __end_of_strlen:
  1827                           	callstack 0
  1828                           
  1829 ;; *************** function _fputs *****************
  1830 ;; Defined at:
  1831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1834 ;;		 -> dbuf(32), 
  1835 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1836 ;;		 -> sprintf@f(6), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  i               2   14[COMRAM] int 
  1839 ;;  c               1   13[COMRAM] unsigned char 
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    9[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;Total ram usage:        7 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 3
  1856 ;; This function calls:
  1857 ;;		_fputc
  1858 ;; This function is called by:
  1859 ;;		_pad
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text7
  1864  001DB8                     __ptext7:
  1865                           	callstack 0
  1866  001DB8                     _fputs:
  1867                           	callstack 22
  1868  001DB8  0E00               	movlw	0
  1869  001DBA  6E10               	movwf	(fputs@i+1)^0,c
  1870  001DBC  0E00               	movlw	0
  1871  001DBE  6E0F               	movwf	fputs@i^0,c
  1872  001DC0  EFED  F00E         	goto	l1490
  1873  001DC4                     l1486:
  1874  001DC4  C00E  F001         	movff	fputs@c,fputc@c
  1875  001DC8  6A02               	clrf	(fputc@c+1)^0,c
  1876  001DCA  C00C  F003         	movff	fputs@fp,fputc@fp
  1877  001DCE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1878  001DD2  EC53  F00D         	call	_fputc	;wreg free
  1879  001DD6  4A0F               	infsnz	fputs@i^0,f,c
  1880  001DD8  2A10               	incf	(fputs@i+1)^0,f,c
  1881  001DDA                     l1490:
  1882  001DDA  500F               	movf	fputs@i^0,w,c
  1883  001DDC  240A               	addwf	fputs@s^0,w,c
  1884  001DDE  6ED9               	movwf	fsr2l,c
  1885  001DE0  5010               	movf	(fputs@i+1)^0,w,c
  1886  001DE2  200B               	addwfc	(fputs@s+1)^0,w,c
  1887  001DE4  6EDA               	movwf	fsr2h,c
  1888  001DE6  50DF               	movf	indf2,w,c
  1889  001DE8  6E0E               	movwf	fputs@c^0,c
  1890  001DEA  500E               	movf	fputs@c^0,w,c
  1891  001DEC  A4D8               	btfss	status,2,c
  1892  001DEE  EFFB  F00E         	goto	u711
  1893  001DF2  EFFD  F00E         	goto	u710
  1894  001DF6                     u711:
  1895  001DF6  EFE2  F00E         	goto	l1486
  1896  001DFA                     u710:
  1897  001DFA  0012               	return		;funcret
  1898  001DFC                     __end_of_fputs:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _fputc *****************
  1902 ;; Defined at:
  1903 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  c               2    0[COMRAM] int 
  1906 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1907 ;;		 -> sprintf@f(6), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2    0[COMRAM] int 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;Total ram usage:        9 bytes
  1924 ;; Hardware stack levels used: 1
  1925 ;; Hardware stack levels required when called: 2
  1926 ;; This function calls:
  1927 ;;		_putch
  1928 ;; This function is called by:
  1929 ;;		_pad
  1930 ;;		_vfpfcnvrt
  1931 ;;		_fputs
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text8
  1936  001AA6                     __ptext8:
  1937                           	callstack 0
  1938  001AA6                     _fputc:
  1939                           	callstack 25
  1940  001AA6  5003               	movf	fputc@fp^0,w,c
  1941  001AA8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1942  001AAA  B4D8               	btfsc	status,2,c
  1943  001AAC  EF5A  F00D         	goto	u671
  1944  001AB0  EF5C  F00D         	goto	u670
  1945  001AB4                     u671:
  1946  001AB4  EF65  F00D         	goto	l1474
  1947  001AB8                     u670:
  1948  001AB8  5003               	movf	fputc@fp^0,w,c
  1949  001ABA  1004               	iorwf	(fputc@fp+1)^0,w,c
  1950  001ABC  A4D8               	btfss	status,2,c
  1951  001ABE  EF63  F00D         	goto	u681
  1952  001AC2  EF65  F00D         	goto	u680
  1953  001AC6                     u681:
  1954  001AC6  EF6A  F00D         	goto	l1476
  1955  001ACA                     u680:
  1956  001ACA                     l1474:
  1957  001ACA  5001               	movf	fputc@c^0,w,c
  1958  001ACC  EC03  F010         	call	_putch
  1959  001AD0  EFB7  F00D         	goto	l999
  1960  001AD4                     l1476:
  1961  001AD4  EE20 F004          	lfsr	2,4
  1962  001AD8  5003               	movf	fputc@fp^0,w,c
  1963  001ADA  26D9               	addwf	fsr2l,f,c
  1964  001ADC  5004               	movf	(fputc@fp+1)^0,w,c
  1965  001ADE  22DA               	addwfc	fsr2h,f,c
  1966  001AE0  50DE               	movf	postinc2,w,c
  1967  001AE2  10DE               	iorwf	postinc2,w,c
  1968  001AE4  B4D8               	btfsc	status,2,c
  1969  001AE6  EF77  F00D         	goto	u691
  1970  001AEA  EF79  F00D         	goto	u690
  1971  001AEE                     u691:
  1972  001AEE  EF94  F00D         	goto	l1480
  1973  001AF2                     u690:
  1974  001AF2  EE20 F004          	lfsr	2,4
  1975  001AF6  5003               	movf	fputc@fp^0,w,c
  1976  001AF8  26D9               	addwf	fsr2l,f,c
  1977  001AFA  5004               	movf	(fputc@fp+1)^0,w,c
  1978  001AFC  22DA               	addwfc	fsr2h,f,c
  1979  001AFE  EE10 F002          	lfsr	1,2
  1980  001B02  5003               	movf	fputc@fp^0,w,c
  1981  001B04  26E1               	addwf	fsr1l,f,c
  1982  001B06  5004               	movf	(fputc@fp+1)^0,w,c
  1983  001B08  22E2               	addwfc	fsr1h,f,c
  1984  001B0A  50DE               	movf	postinc2,w,c
  1985  001B0C  5CE6               	subwf	postinc1,w,c
  1986  001B0E  50E6               	movf	postinc1,w,c
  1987  001B10  0A80               	xorlw	128
  1988  001B12  6E09               	movwf	(??_fputc+4)^0,c
  1989  001B14  50DE               	movf	postinc2,w,c
  1990  001B16  0A80               	xorlw	128
  1991  001B18  5809               	subwfb	(??_fputc+4)^0,w,c
  1992  001B1A  B0D8               	btfsc	status,0,c
  1993  001B1C  EF92  F00D         	goto	u701
  1994  001B20  EF94  F00D         	goto	u700
  1995  001B24                     u701:
  1996  001B24  EFB7  F00D         	goto	l999
  1997  001B28                     u700:
  1998  001B28                     l1480:
  1999  001B28  EE20 F002          	lfsr	2,2
  2000  001B2C  5003               	movf	fputc@fp^0,w,c
  2001  001B2E  26D9               	addwf	fsr2l,f,c
  2002  001B30  5004               	movf	(fputc@fp+1)^0,w,c
  2003  001B32  22DA               	addwfc	fsr2h,f,c
  2004  001B34  CFDE F005          	movff	postinc2,??_fputc
  2005  001B38  CFDD F006          	movff	postdec2,??_fputc+1
  2006  001B3C  C003  FFD9         	movff	fputc@fp,fsr2l
  2007  001B40  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2008  001B44  CFDE F007          	movff	postinc2,??_fputc+2
  2009  001B48  CFDD F008          	movff	postdec2,??_fputc+3
  2010  001B4C  5005               	movf	??_fputc^0,w,c
  2011  001B4E  2407               	addwf	(??_fputc+2)^0,w,c
  2012  001B50  6ED9               	movwf	fsr2l,c
  2013  001B52  5006               	movf	(??_fputc+1)^0,w,c
  2014  001B54  2008               	addwfc	(??_fputc+3)^0,w,c
  2015  001B56  6EDA               	movwf	fsr2h,c
  2016  001B58  C001  FFDF         	movff	fputc@c,indf2
  2017  001B5C  EE20 F002          	lfsr	2,2
  2018  001B60  5003               	movf	fputc@fp^0,w,c
  2019  001B62  26D9               	addwf	fsr2l,f,c
  2020  001B64  5004               	movf	(fputc@fp+1)^0,w,c
  2021  001B66  22DA               	addwfc	fsr2h,f,c
  2022  001B68  2ADE               	incf	postinc2,f,c
  2023  001B6A  0E00               	movlw	0
  2024  001B6C  22DD               	addwfc	postdec2,f,c
  2025  001B6E                     l999:
  2026  001B6E  0012               	return		;funcret
  2027  001B70                     __end_of_fputc:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _putch *****************
  2031 ;; Defined at:
  2032 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  c               1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  c               1    0[COMRAM] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_fputc
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text9
  2061  002006                     __ptext9:
  2062                           	callstack 0
  2063  002006                     _putch:
  2064                           	callstack 25
  2065  002006  0012               	return		;funcret
  2066  002008                     __end_of_putch:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _abs *****************
  2070 ;; Defined at:
  2071 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  a               2   18[COMRAM] int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2   18[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_dtoa
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text10
  2100  001E80                     __ptext10:
  2101                           	callstack 0
  2102  001E80                     _abs:
  2103                           	callstack 25
  2104  001E80  BE14               	btfsc	(abs@a+1)^0,7,c
  2105  001E82  EF4D  F00F         	goto	u900
  2106  001E86  5014               	movf	(abs@a+1)^0,w,c
  2107  001E88  E106               	bnz	u901
  2108  001E8A  0413               	decf	abs@a^0,w,c
  2109  001E8C  B0D8               	btfsc	status,0,c
  2110  001E8E  EF4B  F00F         	goto	u901
  2111  001E92  EF4D  F00F         	goto	u900
  2112  001E96                     u901:
  2113  001E96  EF5B  F00F         	goto	l984
  2114  001E9A                     u900:
  2115  001E9A  C013  F015         	movff	abs@a,??_abs
  2116  001E9E  C014  F016         	movff	abs@a+1,??_abs+1
  2117  001EA2  1E15               	comf	??_abs^0,f,c
  2118  001EA4  1E16               	comf	(??_abs+1)^0,f,c
  2119  001EA6  4A15               	infsnz	??_abs^0,f,c
  2120  001EA8  2A16               	incf	(??_abs+1)^0,f,c
  2121  001EAA  C015  F013         	movff	??_abs,?_abs
  2122  001EAE  C016  F014         	movff	??_abs+1,?_abs+1
  2123  001EB2  EF5F  F00F         	goto	l987
  2124  001EB6                     l984:
  2125  001EB6  C013  F013         	movff	abs@a,?_abs
  2126  001EBA  C014  F014         	movff	abs@a+1,?_abs+1
  2127  001EBE                     l987:
  2128  001EBE  0012               	return		;funcret
  2129  001EC0                     __end_of_abs:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function ___aomod *****************
  2133 ;; Defined at:
  2134 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  dividend        8    0[COMRAM] long long 
  2137 ;;  divisor         8    8[COMRAM] long long 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  sign            1   17[COMRAM] unsigned char 
  2140 ;;  counter         1   16[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  8    0[COMRAM] long long 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2150 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;Total ram usage:       18 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_dtoa
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text11
  2165  001632                     __ptext11:
  2166                           	callstack 0
  2167  001632                     ___aomod:
  2168                           	callstack 25
  2169  001632  0E00               	movlw	0
  2170  001634  6E12               	movwf	___aomod@sign^0,c
  2171  001636  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2172  001638  EF22  F00B         	goto	u800
  2173  00163C  EF20  F00B         	goto	u801
  2174  001640                     u801:
  2175  001640  EF34  F00B         	goto	l1554
  2176  001644                     u800:
  2177  001644  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2178  001646  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2179  001648  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2180  00164A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2181  00164C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2182  00164E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2183  001650  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2184  001652  6C01               	negf	___aomod@dividend^0,c
  2185  001654  0E00               	movlw	0
  2186  001656  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2187  001658  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2188  00165A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2189  00165C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2190  00165E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2191  001660  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2192  001662  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2193  001664  0E01               	movlw	1
  2194  001666  6E12               	movwf	___aomod@sign^0,c
  2195  001668                     l1554:
  2196  001668  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2197  00166A  EF3B  F00B         	goto	u810
  2198  00166E  EF39  F00B         	goto	u811
  2199  001672                     u811:
  2200  001672  EF4B  F00B         	goto	l1558
  2201  001676                     u810:
  2202  001676  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2203  001678  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2204  00167A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2205  00167C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2206  00167E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2207  001680  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2208  001682  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2209  001684  6C09               	negf	___aomod@divisor^0,c
  2210  001686  0E00               	movlw	0
  2211  001688  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2212  00168A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2213  00168C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2214  00168E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2215  001690  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2216  001692  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2217  001694  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2218  001696                     l1558:
  2219  001696  5009               	movf	___aomod@divisor^0,w,c
  2220  001698  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2221  00169A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2222  00169C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2223  00169E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2224  0016A0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2225  0016A2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2226  0016A4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2227  0016A6  B4D8               	btfsc	status,2,c
  2228  0016A8  EF58  F00B         	goto	u821
  2229  0016AC  EF5A  F00B         	goto	u820
  2230  0016B0                     u821:
  2231  0016B0  EFA2  F00B         	goto	l1574
  2232  0016B4                     u820:
  2233  0016B4  0E01               	movlw	1
  2234  0016B6  6E11               	movwf	___aomod@counter^0,c
  2235  0016B8  EF68  F00B         	goto	l1564
  2236  0016BC                     l1562:
  2237  0016BC  90D8               	bcf	status,0,c
  2238  0016BE  3609               	rlcf	___aomod@divisor^0,f,c
  2239  0016C0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2240  0016C2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2241  0016C4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2242  0016C6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2243  0016C8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2244  0016CA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2245  0016CC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2246  0016CE  2A11               	incf	___aomod@counter^0,f,c
  2247  0016D0                     l1564:
  2248  0016D0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2249  0016D2  EF6D  F00B         	goto	u831
  2250  0016D6  EF6F  F00B         	goto	u830
  2251  0016DA                     u831:
  2252  0016DA  EF5E  F00B         	goto	l1562
  2253  0016DE                     u830:
  2254  0016DE                     l1566:
  2255  0016DE  5009               	movf	___aomod@divisor^0,w,c
  2256  0016E0  5C01               	subwf	___aomod@dividend^0,w,c
  2257  0016E2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2258  0016E4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2259  0016E6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2260  0016E8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2261  0016EA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2262  0016EC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2263  0016EE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2264  0016F0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2265  0016F2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2266  0016F4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2267  0016F6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2268  0016F8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2269  0016FA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2270  0016FC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2271  0016FE  A0D8               	btfss	status,0,c
  2272  001700  EF84  F00B         	goto	u841
  2273  001704  EF86  F00B         	goto	u840
  2274  001708                     u841:
  2275  001708  EF96  F00B         	goto	l1570
  2276  00170C                     u840:
  2277  00170C  5009               	movf	___aomod@divisor^0,w,c
  2278  00170E  5E01               	subwf	___aomod@dividend^0,f,c
  2279  001710  500A               	movf	(___aomod@divisor+1)^0,w,c
  2280  001712  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2281  001714  500B               	movf	(___aomod@divisor+2)^0,w,c
  2282  001716  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2283  001718  500C               	movf	(___aomod@divisor+3)^0,w,c
  2284  00171A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2285  00171C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2286  00171E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2287  001720  500E               	movf	(___aomod@divisor+5)^0,w,c
  2288  001722  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2289  001724  500F               	movf	(___aomod@divisor+6)^0,w,c
  2290  001726  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2291  001728  5010               	movf	(___aomod@divisor+7)^0,w,c
  2292  00172A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2293  00172C                     l1570:
  2294  00172C  90D8               	bcf	status,0,c
  2295  00172E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2296  001730  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2297  001732  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2298  001734  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2299  001736  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2300  001738  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2301  00173A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2302  00173C  3209               	rrcf	___aomod@divisor^0,f,c
  2303  00173E  2E11               	decfsz	___aomod@counter^0,f,c
  2304  001740  EF6F  F00B         	goto	l1566
  2305  001744                     l1574:
  2306  001744  5012               	movf	___aomod@sign^0,w,c
  2307  001746  B4D8               	btfsc	status,2,c
  2308  001748  EFA8  F00B         	goto	u851
  2309  00174C  EFAA  F00B         	goto	u850
  2310  001750                     u851:
  2311  001750  EFBA  F00B         	goto	l1578
  2312  001754                     u850:
  2313  001754  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2314  001756  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2315  001758  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2316  00175A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2317  00175C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2318  00175E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2319  001760  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2320  001762  6C01               	negf	___aomod@dividend^0,c
  2321  001764  0E00               	movlw	0
  2322  001766  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2323  001768  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2324  00176A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2325  00176C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2326  00176E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2327  001770  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2328  001772  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2329  001774                     l1578:
  2330  001774  C001  F001         	movff	___aomod@dividend,?___aomod
  2331  001778  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2332  00177C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2333  001780  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2334  001784  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2335  001788  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2336  00178C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2337  001790  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2338  001794  0012               	return		;funcret
  2339  001796                     __end_of___aomod:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___aodiv *****************
  2343 ;; Defined at:
  2344 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  dividend        8    0[COMRAM] long long 
  2347 ;;  divisor         8    8[COMRAM] long long 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  quotient        8   18[COMRAM] long long 
  2350 ;;  sign            1   17[COMRAM] unsigned char 
  2351 ;;  counter         1   16[COMRAM] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  8    0[COMRAM] long long 
  2354 ;; Registers used:
  2355 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2361 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;Total ram usage:       26 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_dtoa
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text12
  2376  0014AA                     __ptext12:
  2377                           	callstack 0
  2378  0014AA                     ___aodiv:
  2379                           	callstack 25
  2380  0014AA  0E00               	movlw	0
  2381  0014AC  6E12               	movwf	___aodiv@sign^0,c
  2382  0014AE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2383  0014B0  EF5E  F00A         	goto	u730
  2384  0014B4  EF5C  F00A         	goto	u731
  2385  0014B8                     u731:
  2386  0014B8  EF70  F00A         	goto	l1510
  2387  0014BC                     u730:
  2388  0014BC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2389  0014BE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2390  0014C0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2391  0014C2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2392  0014C4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2393  0014C6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2394  0014C8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2395  0014CA  6C09               	negf	___aodiv@divisor^0,c
  2396  0014CC  0E00               	movlw	0
  2397  0014CE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2398  0014D0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2399  0014D2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2400  0014D4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2401  0014D6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2402  0014D8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2403  0014DA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2404  0014DC  0E01               	movlw	1
  2405  0014DE  6E12               	movwf	___aodiv@sign^0,c
  2406  0014E0                     l1510:
  2407  0014E0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2408  0014E2  EF77  F00A         	goto	u740
  2409  0014E6  EF75  F00A         	goto	u741
  2410  0014EA                     u741:
  2411  0014EA  EF89  F00A         	goto	l1516
  2412  0014EE                     u740:
  2413  0014EE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2414  0014F0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2415  0014F2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2416  0014F4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2417  0014F6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2418  0014F8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2419  0014FA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2420  0014FC  6C01               	negf	___aodiv@dividend^0,c
  2421  0014FE  0E00               	movlw	0
  2422  001500  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2423  001502  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2424  001504  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2425  001506  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2426  001508  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2427  00150A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2428  00150C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2429  00150E  0E01               	movlw	1
  2430  001510  1A12               	xorwf	___aodiv@sign^0,f,c
  2431  001512                     l1516:
  2432  001512  EE20  F013         	lfsr	2,___aodiv@quotient
  2433  001516  0E07               	movlw	7
  2434  001518                     u751:
  2435  001518  6ADE               	clrf	postinc2,c
  2436  00151A  06E8               	decf	wreg,f,c
  2437  00151C  E2FD               	bc	u751
  2438  00151E  5009               	movf	___aodiv@divisor^0,w,c
  2439  001520  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2440  001522  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2441  001524  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2442  001526  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2443  001528  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2444  00152A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2445  00152C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2446  00152E  B4D8               	btfsc	status,2,c
  2447  001530  EF9C  F00A         	goto	u761
  2448  001534  EF9E  F00A         	goto	u760
  2449  001538                     u761:
  2450  001538  EFF0  F00A         	goto	l1538
  2451  00153C                     u760:
  2452  00153C  0E01               	movlw	1
  2453  00153E  6E11               	movwf	___aodiv@counter^0,c
  2454  001540  EFAC  F00A         	goto	l1524
  2455  001544                     l1522:
  2456  001544  90D8               	bcf	status,0,c
  2457  001546  3609               	rlcf	___aodiv@divisor^0,f,c
  2458  001548  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2459  00154A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2460  00154C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2461  00154E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2462  001550  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2463  001552  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2464  001554  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2465  001556  2A11               	incf	___aodiv@counter^0,f,c
  2466  001558                     l1524:
  2467  001558  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2468  00155A  EFB1  F00A         	goto	u771
  2469  00155E  EFB3  F00A         	goto	u770
  2470  001562                     u771:
  2471  001562  EFA2  F00A         	goto	l1522
  2472  001566                     u770:
  2473  001566                     l1526:
  2474  001566  90D8               	bcf	status,0,c
  2475  001568  3613               	rlcf	___aodiv@quotient^0,f,c
  2476  00156A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2477  00156C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2478  00156E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2479  001570  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2480  001572  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2481  001574  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2482  001576  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2483  001578  5009               	movf	___aodiv@divisor^0,w,c
  2484  00157A  5C01               	subwf	___aodiv@dividend^0,w,c
  2485  00157C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2486  00157E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2487  001580  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2488  001582  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2489  001584  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2490  001586  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2491  001588  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2492  00158A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2493  00158C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2494  00158E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2495  001590  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2496  001592  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2497  001594  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2498  001596  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2499  001598  A0D8               	btfss	status,0,c
  2500  00159A  EFD1  F00A         	goto	u781
  2501  00159E  EFD3  F00A         	goto	u780
  2502  0015A2                     u781:
  2503  0015A2  EFE4  F00A         	goto	l1534
  2504  0015A6                     u780:
  2505  0015A6  5009               	movf	___aodiv@divisor^0,w,c
  2506  0015A8  5E01               	subwf	___aodiv@dividend^0,f,c
  2507  0015AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2508  0015AC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2509  0015AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2510  0015B0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2511  0015B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2512  0015B4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2513  0015B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2514  0015B8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2515  0015BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2516  0015BC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2517  0015BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2518  0015C0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2519  0015C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2520  0015C4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2521  0015C6  8013               	bsf	___aodiv@quotient^0,0,c
  2522  0015C8                     l1534:
  2523  0015C8  90D8               	bcf	status,0,c
  2524  0015CA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2525  0015CC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2526  0015CE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2527  0015D0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2528  0015D2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2529  0015D4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2530  0015D6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2531  0015D8  3209               	rrcf	___aodiv@divisor^0,f,c
  2532  0015DA  2E11               	decfsz	___aodiv@counter^0,f,c
  2533  0015DC  EFB3  F00A         	goto	l1526
  2534  0015E0                     l1538:
  2535  0015E0  5012               	movf	___aodiv@sign^0,w,c
  2536  0015E2  B4D8               	btfsc	status,2,c
  2537  0015E4  EFF6  F00A         	goto	u791
  2538  0015E8  EFF8  F00A         	goto	u790
  2539  0015EC                     u791:
  2540  0015EC  EF08  F00B         	goto	l1542
  2541  0015F0                     u790:
  2542  0015F0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2543  0015F2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2544  0015F4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2545  0015F6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2546  0015F8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2547  0015FA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2548  0015FC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2549  0015FE  6C13               	negf	___aodiv@quotient^0,c
  2550  001600  0E00               	movlw	0
  2551  001602  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2552  001604  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2553  001606  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2554  001608  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2555  00160A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2556  00160C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2557  00160E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2558  001610                     l1542:
  2559  001610  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2560  001614  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2561  001618  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2562  00161C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2563  001620  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2564  001624  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2565  001628  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2566  00162C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2567  001630  0012               	return		;funcret
  2568  001632                     __end_of___aodiv:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _initialize_LCD *****************
  2572 ;; Defined at:
  2573 ;;		line 10 in file "LCD_16x2.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;Total ram usage:        2 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 3
  2594 ;; This function calls:
  2595 ;;		_clear_Display
  2596 ;;		_display_Off
  2597 ;;		_display_On
  2598 ;;		_entry_mode_Set
  2599 ;;		_function_Set
  2600 ;; This function is called by:
  2601 ;;		_main
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           	psect	text13
  2606  001D0C                     __ptext13:
  2607                           	callstack 0
  2608  001D0C                     _initialize_LCD:
  2609                           	callstack 27
  2610  001D0C                     
  2611                           ;LCD_16x2.c: 11:     _delay((unsigned long)((16)*(16000000/4000.0)));
  2612  001D0C  0E54               	movlw	84
  2613  001D0E  6E02               	movwf	??_initialize_LCD^0,c
  2614  001D10  0E1C               	movlw	28
  2615  001D12                     u1337:
  2616  001D12  2EE8               	decfsz	wreg,f,c
  2617  001D14  D7FE               	bra	u1337
  2618  001D16  2E02               	decfsz	??_initialize_LCD^0,f,c
  2619  001D18  D7FC               	bra	u1337
  2620  001D1A  D000               	nop2	
  2621  001D1C                     
  2622                           ;LCD_16x2.c: 12:     function_Set();
  2623  001D1C  ECB9  F00F         	call	_function_Set	;wreg free
  2624  001D20                     
  2625                           ;LCD_16x2.c: 13:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2626  001D20  0E1A               	movlw	26
  2627  001D22  6E02               	movwf	??_initialize_LCD^0,c
  2628  001D24  0EF8               	movlw	248
  2629  001D26                     u1347:
  2630  001D26  2EE8               	decfsz	wreg,f,c
  2631  001D28  D7FE               	bra	u1347
  2632  001D2A  2E02               	decfsz	??_initialize_LCD^0,f,c
  2633  001D2C  D7FC               	bra	u1347
  2634  001D2E  D000               	nop2	
  2635                           
  2636                           ;LCD_16x2.c: 14:     function_Set();
  2637  001D30  ECB9  F00F         	call	_function_Set	;wreg free
  2638  001D34                     
  2639                           ;LCD_16x2.c: 15:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2640  001D34  0E03               	movlw	3
  2641  001D36  6E03               	movwf	(??_initialize_LCD+1)^0,c
  2642  001D38  0E08               	movlw	8
  2643  001D3A  6E02               	movwf	??_initialize_LCD^0,c
  2644  001D3C  0E77               	movlw	119
  2645  001D3E                     u1357:
  2646  001D3E  2EE8               	decfsz	wreg,f,c
  2647  001D40  D7FE               	bra	u1357
  2648  001D42  2E02               	decfsz	??_initialize_LCD^0,f,c
  2649  001D44  D7FC               	bra	u1357
  2650  001D46  2E03               	decfsz	(??_initialize_LCD+1)^0,f,c
  2651  001D48  D7FA               	bra	u1357
  2652  001D4A  F000               	nop	
  2653  001D4C                     
  2654                           ;LCD_16x2.c: 16:     function_Set();
  2655  001D4C  ECB9  F00F         	call	_function_Set	;wreg free
  2656  001D50                     
  2657                           ;LCD_16x2.c: 17:     function_Set();
  2658  001D50  ECB9  F00F         	call	_function_Set	;wreg free
  2659  001D54                     
  2660                           ;LCD_16x2.c: 18:     display_Off();
  2661  001D54  ECDD  F00F         	call	_display_Off	;wreg free
  2662  001D58                     
  2663                           ;LCD_16x2.c: 19:     clear_Display();
  2664  001D58  EC94  F00F         	call	_clear_Display	;wreg free
  2665  001D5C                     
  2666                           ;LCD_16x2.c: 20:     entry_mode_Set();
  2667  001D5C  ECC5  F00F         	call	_entry_mode_Set	;wreg free
  2668  001D60                     
  2669                           ;LCD_16x2.c: 21:     display_On();
  2670  001D60  ECD1  F00F         	call	_display_On	;wreg free
  2671  001D64  0012               	return		;funcret
  2672  001D66                     __end_of_initialize_LCD:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _function_Set *****************
  2676 ;; Defined at:
  2677 ;;		line 24 in file "LCD_16x2.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 2
  2698 ;; This function calls:
  2699 ;;		_register_EN
  2700 ;; This function is called by:
  2701 ;;		_initialize_LCD
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text14
  2706  001F72                     __ptext14:
  2707                           	callstack 0
  2708  001F72                     _function_Set:
  2709                           	callstack 27
  2710  001F72                     
  2711                           ;LCD_16x2.c: 25:     (LATC4=0);
  2712  001F72  988B               	bcf	3979,4,c	;volatile
  2713                           
  2714                           ;LCD_16x2.c: 26:     (LATB7=0);
  2715  001F74  9E8A               	bcf	3978,7,c	;volatile
  2716                           
  2717                           ;LCD_16x2.c: 27:     (LATB6=0);
  2718  001F76  9C8A               	bcf	3978,6,c	;volatile
  2719                           
  2720                           ;LCD_16x2.c: 28:     (LATB5=1);
  2721  001F78  8A8A               	bsf	3978,5,c	;volatile
  2722                           
  2723                           ;LCD_16x2.c: 29:     (LATB4=1);
  2724  001F7A  888A               	bsf	3978,4,c	;volatile
  2725                           
  2726                           ;LCD_16x2.c: 30:     (LATB3=1);
  2727  001F7C  868A               	bsf	3978,3,c	;volatile
  2728                           
  2729                           ;LCD_16x2.c: 31:     (LATB2=0);
  2730  001F7E  948A               	bcf	3978,2,c	;volatile
  2731                           
  2732                           ;LCD_16x2.c: 32:     (LATB1=0);
  2733  001F80  928A               	bcf	3978,1,c	;volatile
  2734                           
  2735                           ;LCD_16x2.c: 33:     (LATB0=0);
  2736  001F82  908A               	bcf	3978,0,c	;volatile
  2737  001F84                     
  2738                           ;LCD_16x2.c: 34:     register_EN();
  2739  001F84  ECF4  F00F         	call	_register_EN	;wreg free
  2740  001F88  0012               	return		;funcret
  2741  001F8A                     __end_of_function_Set:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function _entry_mode_Set *****************
  2745 ;; Defined at:
  2746 ;;		line 77 in file "LCD_16x2.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 2
  2767 ;; This function calls:
  2768 ;;		_register_EN
  2769 ;; This function is called by:
  2770 ;;		_initialize_LCD
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text15
  2775  001F8A                     __ptext15:
  2776                           	callstack 0
  2777  001F8A                     _entry_mode_Set:
  2778                           	callstack 27
  2779  001F8A                     
  2780                           ;LCD_16x2.c: 78:     (LATC4=0);
  2781  001F8A  988B               	bcf	3979,4,c	;volatile
  2782                           
  2783                           ;LCD_16x2.c: 79:     (LATB7=0);
  2784  001F8C  9E8A               	bcf	3978,7,c	;volatile
  2785                           
  2786                           ;LCD_16x2.c: 80:     (LATB6=0);
  2787  001F8E  9C8A               	bcf	3978,6,c	;volatile
  2788                           
  2789                           ;LCD_16x2.c: 81:     (LATB5=0);
  2790  001F90  9A8A               	bcf	3978,5,c	;volatile
  2791                           
  2792                           ;LCD_16x2.c: 82:     (LATB4=0);
  2793  001F92  988A               	bcf	3978,4,c	;volatile
  2794                           
  2795                           ;LCD_16x2.c: 83:     (LATB3=0);
  2796  001F94  968A               	bcf	3978,3,c	;volatile
  2797                           
  2798                           ;LCD_16x2.c: 84:     (LATB2=1);
  2799  001F96  848A               	bsf	3978,2,c	;volatile
  2800                           
  2801                           ;LCD_16x2.c: 85:     (LATB1=1);
  2802  001F98  828A               	bsf	3978,1,c	;volatile
  2803                           
  2804                           ;LCD_16x2.c: 86:     (LATB0=0);
  2805  001F9A  908A               	bcf	3978,0,c	;volatile
  2806  001F9C                     
  2807                           ;LCD_16x2.c: 87:     register_EN();
  2808  001F9C  ECF4  F00F         	call	_register_EN	;wreg free
  2809  001FA0  0012               	return		;funcret
  2810  001FA2                     __end_of_entry_mode_Set:
  2811                           	callstack 0
  2812                           
  2813 ;; *************** function _display_On *****************
  2814 ;; Defined at:
  2815 ;;		line 64 in file "LCD_16x2.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; Hardware stack levels required when called: 2
  2836 ;; This function calls:
  2837 ;;		_register_EN
  2838 ;; This function is called by:
  2839 ;;		_initialize_LCD
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text16
  2844  001FA2                     __ptext16:
  2845                           	callstack 0
  2846  001FA2                     _display_On:
  2847                           	callstack 27
  2848  001FA2                     
  2849                           ;LCD_16x2.c: 65:     (LATC4=0);
  2850  001FA2  988B               	bcf	3979,4,c	;volatile
  2851                           
  2852                           ;LCD_16x2.c: 66:     (LATB7=0);
  2853  001FA4  9E8A               	bcf	3978,7,c	;volatile
  2854                           
  2855                           ;LCD_16x2.c: 67:     (LATB6=0);
  2856  001FA6  9C8A               	bcf	3978,6,c	;volatile
  2857                           
  2858                           ;LCD_16x2.c: 68:     (LATB5=0);
  2859  001FA8  9A8A               	bcf	3978,5,c	;volatile
  2860                           
  2861                           ;LCD_16x2.c: 69:     (LATB4=0);
  2862  001FAA  988A               	bcf	3978,4,c	;volatile
  2863                           
  2864                           ;LCD_16x2.c: 70:     (LATB3=1);
  2865  001FAC  868A               	bsf	3978,3,c	;volatile
  2866                           
  2867                           ;LCD_16x2.c: 71:     (LATB2=1);
  2868  001FAE  848A               	bsf	3978,2,c	;volatile
  2869                           
  2870                           ;LCD_16x2.c: 72:     (LATB1=1);
  2871  001FB0  828A               	bsf	3978,1,c	;volatile
  2872                           
  2873                           ;LCD_16x2.c: 73:     (LATB0=1);
  2874  001FB2  808A               	bsf	3978,0,c	;volatile
  2875  001FB4                     
  2876                           ;LCD_16x2.c: 74:     register_EN();
  2877  001FB4  ECF4  F00F         	call	_register_EN	;wreg free
  2878  001FB8  0012               	return		;funcret
  2879  001FBA                     __end_of_display_On:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _display_Off *****************
  2883 ;; Defined at:
  2884 ;;		line 51 in file "LCD_16x2.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;Total ram usage:        0 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		_register_EN
  2907 ;; This function is called by:
  2908 ;;		_initialize_LCD
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text17
  2913  001FBA                     __ptext17:
  2914                           	callstack 0
  2915  001FBA                     _display_Off:
  2916                           	callstack 27
  2917  001FBA                     
  2918                           ;LCD_16x2.c: 52:     (LATC4=0);
  2919  001FBA  988B               	bcf	3979,4,c	;volatile
  2920                           
  2921                           ;LCD_16x2.c: 53:     (LATB7=0);
  2922  001FBC  9E8A               	bcf	3978,7,c	;volatile
  2923                           
  2924                           ;LCD_16x2.c: 54:     (LATB6=0);
  2925  001FBE  9C8A               	bcf	3978,6,c	;volatile
  2926                           
  2927                           ;LCD_16x2.c: 55:     (LATB5=0);
  2928  001FC0  9A8A               	bcf	3978,5,c	;volatile
  2929                           
  2930                           ;LCD_16x2.c: 56:     (LATB4=0);
  2931  001FC2  988A               	bcf	3978,4,c	;volatile
  2932                           
  2933                           ;LCD_16x2.c: 57:     (LATB3=1);
  2934  001FC4  868A               	bsf	3978,3,c	;volatile
  2935                           
  2936                           ;LCD_16x2.c: 58:     (LATB2=0);
  2937  001FC6  948A               	bcf	3978,2,c	;volatile
  2938                           
  2939                           ;LCD_16x2.c: 59:     (LATB1=0);
  2940  001FC8  928A               	bcf	3978,1,c	;volatile
  2941                           
  2942                           ;LCD_16x2.c: 60:     (LATB0=0);
  2943  001FCA  908A               	bcf	3978,0,c	;volatile
  2944  001FCC                     
  2945                           ;LCD_16x2.c: 61:     register_EN();
  2946  001FCC  ECF4  F00F         	call	_register_EN	;wreg free
  2947  001FD0  0012               	return		;funcret
  2948  001FD2                     __end_of_display_Off:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _clear_Display *****************
  2952 ;; Defined at:
  2953 ;;		line 37 in file "LCD_16x2.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:        1 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 2
  2974 ;; This function calls:
  2975 ;;		_register_EN
  2976 ;; This function is called by:
  2977 ;;		_initialize_LCD
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text18
  2982  001F28                     __ptext18:
  2983                           	callstack 0
  2984  001F28                     _clear_Display:
  2985                           	callstack 27
  2986  001F28                     
  2987                           ;LCD_16x2.c: 38:     (LATC4=0);
  2988  001F28  988B               	bcf	3979,4,c	;volatile
  2989                           
  2990                           ;LCD_16x2.c: 39:     (LATB7=0);
  2991  001F2A  9E8A               	bcf	3978,7,c	;volatile
  2992                           
  2993                           ;LCD_16x2.c: 40:     (LATB6=0);
  2994  001F2C  9C8A               	bcf	3978,6,c	;volatile
  2995                           
  2996                           ;LCD_16x2.c: 41:     (LATB5=0);
  2997  001F2E  9A8A               	bcf	3978,5,c	;volatile
  2998                           
  2999                           ;LCD_16x2.c: 42:     (LATB4=0);
  3000  001F30  988A               	bcf	3978,4,c	;volatile
  3001                           
  3002                           ;LCD_16x2.c: 43:     (LATB3=0);
  3003  001F32  968A               	bcf	3978,3,c	;volatile
  3004                           
  3005                           ;LCD_16x2.c: 44:     (LATB2=0);
  3006  001F34  948A               	bcf	3978,2,c	;volatile
  3007                           
  3008                           ;LCD_16x2.c: 45:     (LATB1=0);
  3009  001F36  928A               	bcf	3978,1,c	;volatile
  3010                           
  3011                           ;LCD_16x2.c: 46:     (LATB0=1);
  3012  001F38  808A               	bsf	3978,0,c	;volatile
  3013  001F3A                     
  3014                           ;LCD_16x2.c: 47:     register_EN();
  3015  001F3A  ECF4  F00F         	call	_register_EN	;wreg free
  3016  001F3E                     
  3017                           ;LCD_16x2.c: 48:     _delay((unsigned long)((1500)*(16000000/4000000.0)));
  3018  001F3E  0E08               	movlw	8
  3019  001F40  6E01               	movwf	??_clear_Display^0,c
  3020  001F42  0ECA               	movlw	202
  3021  001F44                     u1367:
  3022  001F44  2EE8               	decfsz	wreg,f,c
  3023  001F46  D7FE               	bra	u1367
  3024  001F48  2E01               	decfsz	??_clear_Display^0,f,c
  3025  001F4A  D7FC               	bra	u1367
  3026  001F4C  0012               	return		;funcret
  3027  001F4E                     __end_of_clear_Display:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _change_Message *****************
  3031 ;; Defined at:
  3032 ;;		line 151 in file "LCD_16x2.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  line            1    wreg     unsigned char 
  3035 ;;  new_Text        2    0[COMRAM] PTR unsigned char 
  3036 ;;		 -> main@timer(17), 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  line            1    6[COMRAM] unsigned char 
  3039 ;;  i               2    7[COMRAM] int 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:        9 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text19
  3064  0018A8                     __ptext19:
  3065                           	callstack 0
  3066  0018A8                     _change_Message:
  3067                           	callstack 29
  3068                           
  3069                           ;incstack = 0
  3070                           ;change_Message@line stored from wreg
  3071  0018A8  6E07               	movwf	change_Message@line^0,c
  3072  0018AA                     
  3073                           ;LCD_16x2.c: 152:     int i = 0;
  3074  0018AA  0E00               	movlw	0
  3075  0018AC  6E09               	movwf	(change_Message@i+1)^0,c
  3076  0018AE  0E00               	movlw	0
  3077  0018B0  6E08               	movwf	change_Message@i^0,c
  3078                           
  3079                           ;LCD_16x2.c: 154:     while (new_Text[i] != '\0' && i < 16) {
  3080  0018B2  EF94  F00C         	goto	l1838
  3081  0018B6                     l1832:
  3082                           
  3083                           ;LCD_16x2.c: 156:         if (message[line][i] != new_Text[i]) {
  3084  0018B6  5008               	movf	change_Message@i^0,w,c
  3085  0018B8  2401               	addwf	change_Message@new_Text^0,w,c
  3086  0018BA  6ED9               	movwf	fsr2l,c
  3087  0018BC  5009               	movf	(change_Message@i+1)^0,w,c
  3088  0018BE  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3089  0018C0  6EDA               	movwf	fsr2h,c
  3090  0018C2  5007               	movf	change_Message@line^0,w,c
  3091  0018C4  0D11               	mullw	17
  3092  0018C6  0E8E               	movlw	low _message
  3093  0018C8  6E04               	movwf	(??_change_Message+1)^0,c
  3094  0018CA  0E00               	movlw	high _message
  3095  0018CC  6E05               	movwf	(??_change_Message+2)^0,c
  3096  0018CE  50F3               	movf	243,w,c
  3097  0018D0  2604               	addwf	(??_change_Message+1)^0,f,c
  3098  0018D2  50F4               	movf	244,w,c
  3099  0018D4  2205               	addwfc	(??_change_Message+2)^0,f,c
  3100  0018D6  5008               	movf	change_Message@i^0,w,c
  3101  0018D8  2404               	addwf	(??_change_Message+1)^0,w,c
  3102  0018DA  6EE1               	movwf	fsr1l,c
  3103  0018DC  5009               	movf	(change_Message@i+1)^0,w,c
  3104  0018DE  2005               	addwfc	(??_change_Message+2)^0,w,c
  3105  0018E0  6EE2               	movwf	fsr1h,c
  3106  0018E2  50DE               	movf	postinc2,w,c
  3107  0018E4  18E6               	xorwf	postinc1,w,c
  3108  0018E6  B4D8               	btfsc	status,2,c
  3109  0018E8  EF78  F00C         	goto	u1231
  3110  0018EC  EF7A  F00C         	goto	u1230
  3111  0018F0                     u1231:
  3112  0018F0  EF92  F00C         	goto	l1836
  3113  0018F4                     u1230:
  3114  0018F4                     
  3115                           ;LCD_16x2.c: 157:                 message[line][i] = new_Text[i];
  3116  0018F4  5008               	movf	change_Message@i^0,w,c
  3117  0018F6  2401               	addwf	change_Message@new_Text^0,w,c
  3118  0018F8  6ED9               	movwf	fsr2l,c
  3119  0018FA  5009               	movf	(change_Message@i+1)^0,w,c
  3120  0018FC  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3121  0018FE  6EDA               	movwf	fsr2h,c
  3122  001900  5007               	movf	change_Message@line^0,w,c
  3123  001902  0D11               	mullw	17
  3124  001904  0E8E               	movlw	low _message
  3125  001906  6E03               	movwf	??_change_Message^0,c
  3126  001908  0E00               	movlw	high _message
  3127  00190A  6E04               	movwf	(??_change_Message+1)^0,c
  3128  00190C  50F3               	movf	243,w,c
  3129  00190E  2603               	addwf	??_change_Message^0,f,c
  3130  001910  50F4               	movf	244,w,c
  3131  001912  2204               	addwfc	(??_change_Message+1)^0,f,c
  3132  001914  5008               	movf	change_Message@i^0,w,c
  3133  001916  2403               	addwf	??_change_Message^0,w,c
  3134  001918  6EE1               	movwf	fsr1l,c
  3135  00191A  5009               	movf	(change_Message@i+1)^0,w,c
  3136  00191C  2004               	addwfc	(??_change_Message+1)^0,w,c
  3137  00191E  6EE2               	movwf	fsr1h,c
  3138  001920  CFDF FFE7          	movff	indf2,indf1
  3139  001924                     l1836:
  3140                           
  3141                           ;LCD_16x2.c: 159:         i++;
  3142  001924  4A08               	infsnz	change_Message@i^0,f,c
  3143  001926  2A09               	incf	(change_Message@i+1)^0,f,c
  3144  001928                     l1838:
  3145                           
  3146                           ;LCD_16x2.c: 154:     while (new_Text[i] != '\0' && i < 16) {
  3147  001928  5008               	movf	change_Message@i^0,w,c
  3148  00192A  2401               	addwf	change_Message@new_Text^0,w,c
  3149  00192C  6ED9               	movwf	fsr2l,c
  3150  00192E  5009               	movf	(change_Message@i+1)^0,w,c
  3151  001930  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3152  001932  6EDA               	movwf	fsr2h,c
  3153  001934  50DF               	movf	indf2,w,c
  3154  001936  B4D8               	btfsc	status,2,c
  3155  001938  EFA0  F00C         	goto	u1241
  3156  00193C  EFA2  F00C         	goto	u1240
  3157  001940                     u1241:
  3158  001940  EFB0  F00C         	goto	l1842
  3159  001944                     u1240:
  3160  001944  BE09               	btfsc	(change_Message@i+1)^0,7,c
  3161  001946  EFAE  F00C         	goto	u1251
  3162  00194A  5009               	movf	(change_Message@i+1)^0,w,c
  3163  00194C  E109               	bnz	u1250
  3164  00194E  0E10               	movlw	16
  3165  001950  5C08               	subwf	change_Message@i^0,w,c
  3166  001952  A0D8               	btfss	status,0,c
  3167  001954  EFAE  F00C         	goto	u1251
  3168  001958  EFB0  F00C         	goto	u1250
  3169  00195C                     u1251:
  3170  00195C  EF5B  F00C         	goto	l1832
  3171  001960                     u1250:
  3172  001960                     l1842:
  3173  001960  BE09               	btfsc	(change_Message@i+1)^0,7,c
  3174  001962  EFBC  F00C         	goto	u1261
  3175  001966  5009               	movf	(change_Message@i+1)^0,w,c
  3176  001968  E109               	bnz	u1260
  3177  00196A  0E10               	movlw	16
  3178  00196C  5C08               	subwf	change_Message@i^0,w,c
  3179  00196E  A0D8               	btfss	status,0,c
  3180  001970  EFBC  F00C         	goto	u1261
  3181  001974  EFBE  F00C         	goto	u1260
  3182  001978                     u1261:
  3183  001978  EFC0  F00C         	goto	l1846
  3184  00197C                     u1260:
  3185  00197C  EFD6  F00C         	goto	l203
  3186  001980                     l1846:
  3187                           
  3188                           ;LCD_16x2.c: 162:         message[line][i] = ' ';
  3189  001980  5007               	movf	change_Message@line^0,w,c
  3190  001982  0D11               	mullw	17
  3191  001984  0E8E               	movlw	low _message
  3192  001986  6E03               	movwf	??_change_Message^0,c
  3193  001988  0E00               	movlw	high _message
  3194  00198A  6E04               	movwf	(??_change_Message+1)^0,c
  3195  00198C  50F3               	movf	243,w,c
  3196  00198E  2603               	addwf	??_change_Message^0,f,c
  3197  001990  50F4               	movf	244,w,c
  3198  001992  2204               	addwfc	(??_change_Message+1)^0,f,c
  3199  001994  5008               	movf	change_Message@i^0,w,c
  3200  001996  2403               	addwf	??_change_Message^0,w,c
  3201  001998  6ED9               	movwf	fsr2l,c
  3202  00199A  5009               	movf	(change_Message@i+1)^0,w,c
  3203  00199C  2004               	addwfc	(??_change_Message+1)^0,w,c
  3204  00199E  6EDA               	movwf	fsr2h,c
  3205  0019A0  0E20               	movlw	32
  3206  0019A2  6EDF               	movwf	indf2,c
  3207  0019A4                     
  3208                           ;LCD_16x2.c: 163:     }
  3209  0019A4  4A08               	infsnz	change_Message@i^0,f,c
  3210  0019A6  2A09               	incf	(change_Message@i+1)^0,f,c
  3211  0019A8  EFB0  F00C         	goto	l1842
  3212  0019AC                     l203:
  3213  0019AC  0012               	return		;funcret
  3214  0019AE                     __end_of_change_Message:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _Write_Display *****************
  3218 ;; Defined at:
  3219 ;;		line 90 in file "LCD_16x2.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 3
  3240 ;; This function calls:
  3241 ;;		_Set_Line
  3242 ;;		_Write_caracter
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text20
  3249  001C36                     __ptext20:
  3250                           	callstack 0
  3251  001C36                     _Write_Display:
  3252                           	callstack 27
  3253  001C36                     
  3254                           ;LCD_16x2.c: 92:     if (position_String < 16) {
  3255  001C36  0100               	movlb	0	; () banked
  3256  001C38  516D               	movf	(_position_String+1)& (0+255),w,b
  3257  001C3A  E107               	bnz	u1271
  3258  001C3C  0E10               	movlw	16
  3259  001C3E  5D6C               	subwf	_position_String& (0+255),w,b
  3260  001C40  B0D8               	btfsc	status,0,c
  3261  001C42  EF25  F00E         	goto	u1271
  3262  001C46  EF27  F00E         	goto	u1270
  3263  001C4A                     u1271:
  3264  001C4A  EF3F  F00E         	goto	l1858
  3265  001C4E                     u1270:
  3266  001C4E                     
  3267                           ; BSR set to: 0
  3268                           ;LCD_16x2.c: 93:         Write_caracter(message[linha_LCD][position_String]);
  3269  001C4E  505E               	movf	_linha_LCD^0,w,c
  3270  001C50  0D11               	mullw	17
  3271  001C52  0E8E               	movlw	low _message
  3272  001C54  6E04               	movwf	??_Write_Display^0,c
  3273  001C56  0E00               	movlw	high _message
  3274  001C58  6E05               	movwf	(??_Write_Display+1)^0,c
  3275  001C5A  50F3               	movf	243,w,c
  3276  001C5C  2604               	addwf	??_Write_Display^0,f,c
  3277  001C5E  50F4               	movf	244,w,c
  3278  001C60  2205               	addwfc	(??_Write_Display+1)^0,f,c
  3279  001C62  516C               	movf	_position_String& (0+255),w,b
  3280  001C64  2404               	addwf	??_Write_Display^0,w,c
  3281  001C66  6ED9               	movwf	fsr2l,c
  3282  001C68  516D               	movf	(_position_String+1)& (0+255),w,b
  3283  001C6A  2005               	addwfc	(??_Write_Display+1)^0,w,c
  3284  001C6C  6EDA               	movwf	fsr2h,c
  3285  001C6E  50DF               	movf	indf2,w,c
  3286  001C70  ECCB  F00B         	call	_Write_caracter
  3287  001C74                     
  3288                           ;LCD_16x2.c: 94:         position_String++;
  3289  001C74  0100               	movlb	0	; () banked
  3290  001C76  4B6C               	infsnz	_position_String& (0+255),f,b
  3291  001C78  2B6D               	incf	(_position_String+1)& (0+255),f,b
  3292                           
  3293                           ;LCD_16x2.c: 95:     } else {
  3294  001C7A  EF54  F00E         	goto	l150
  3295  001C7E                     l1858:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;LCD_16x2.c: 96:         position_String = 0;
  3299  001C7E  0E00               	movlw	0
  3300  001C80  6F6D               	movwf	(_position_String+1)& (0+255),b
  3301  001C82  0E00               	movlw	0
  3302  001C84  6F6C               	movwf	_position_String& (0+255),b
  3303                           
  3304                           ;LCD_16x2.c: 97:         (linha_LCD == 0) ? (linha_LCD = 1) : (linha_LCD = 0);
  3305  001C86  505E               	movf	_linha_LCD^0,w,c
  3306  001C88  A4D8               	btfss	status,2,c
  3307  001C8A  EF49  F00E         	goto	u1281
  3308  001C8E  EF4B  F00E         	goto	u1280
  3309  001C92                     u1281:
  3310  001C92  EF4F  F00E         	goto	l1862
  3311  001C96                     u1280:
  3312  001C96                     
  3313                           ; BSR set to: 0
  3314  001C96  0E01               	movlw	1
  3315  001C98  6E5E               	movwf	_linha_LCD^0,c
  3316  001C9A  EF51  F00E         	goto	l1864
  3317  001C9E                     l1862:
  3318                           
  3319                           ; BSR set to: 0
  3320  001C9E  0E00               	movlw	0
  3321  001CA0  6E5E               	movwf	_linha_LCD^0,c
  3322  001CA2                     l1864:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;LCD_16x2.c: 98:         Set_Line(linha_LCD);
  3326  001CA2  505E               	movf	_linha_LCD^0,w,c
  3327  001CA4  ECFE  F00E         	call	_Set_Line
  3328  001CA8                     l150:
  3329  001CA8  0012               	return		;funcret
  3330  001CAA                     __end_of_Write_Display:
  3331                           	callstack 0
  3332                           
  3333 ;; *************** function _Write_caracter *****************
  3334 ;; Defined at:
  3335 ;;		line 103 in file "LCD_16x2.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;  c               1    wreg     unsigned char 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  c               1    2[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        3 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 2
  3356 ;; This function calls:
  3357 ;;		_registra_RS
  3358 ;; This function is called by:
  3359 ;;		_Write_Display
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text21
  3364  001796                     __ptext21:
  3365                           	callstack 0
  3366  001796                     _Write_caracter:
  3367                           	callstack 27
  3368                           
  3369                           ;incstack = 0
  3370                           ;Write_caracter@c stored from wreg
  3371  001796  6E03               	movwf	Write_caracter@c^0,c
  3372  001798                     
  3373                           ;LCD_16x2.c: 104:     ((c >> 7)&(0x01)) ? (LATB7=1) : (LATB7=0);
  3374  001798  6A01               	clrf	??_Write_caracter^0,c
  3375  00179A  AE03               	btfss	Write_caracter@c^0,7,c
  3376  00179C  D001               	bra	u1105
  3377  00179E  2A01               	incf	??_Write_caracter^0,f,c
  3378  0017A0                     u1105:
  3379  0017A0  A001               	btfss	??_Write_caracter^0,0,c
  3380  0017A2  EFD5  F00B         	goto	u1111
  3381  0017A6  EFD7  F00B         	goto	u1110
  3382  0017AA                     u1111:
  3383  0017AA  EFDA  F00B         	goto	l154
  3384  0017AE                     u1110:
  3385  0017AE  8E8A               	bsf	3978,7,c	;volatile
  3386  0017B0  EFDB  F00B         	goto	l1744
  3387  0017B4                     l154:
  3388  0017B4  9E8A               	bcf	3978,7,c	;volatile
  3389  0017B6                     l1744:
  3390                           
  3391                           ;LCD_16x2.c: 105:     ((c >> 6)&(0x01)) ? (LATB6=1) : (LATB6=0);
  3392  0017B6  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3393  0017BA  0E06               	movlw	6
  3394  0017BC  6E02               	movwf	(??_Write_caracter+1)^0,c
  3395  0017BE                     u1125:
  3396  0017BE  90D8               	bcf	status,0,c
  3397  0017C0  3201               	rrcf	??_Write_caracter^0,f,c
  3398  0017C2  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3399  0017C4  EFDF  F00B         	goto	u1125
  3400  0017C8  A001               	btfss	??_Write_caracter^0,0,c
  3401  0017CA  EFE9  F00B         	goto	u1131
  3402  0017CE  EFEB  F00B         	goto	u1130
  3403  0017D2                     u1131:
  3404  0017D2  EFEE  F00B         	goto	l158
  3405  0017D6                     u1130:
  3406  0017D6  8C8A               	bsf	3978,6,c	;volatile
  3407  0017D8  EFEF  F00B         	goto	l1748
  3408  0017DC                     l158:
  3409  0017DC  9C8A               	bcf	3978,6,c	;volatile
  3410  0017DE                     l1748:
  3411                           
  3412                           ;LCD_16x2.c: 106:     ((c >> 5)&(0x01)) ? (LATB5=1) : (LATB5=0);
  3413  0017DE  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3414  0017E2  0E05               	movlw	5
  3415  0017E4  6E02               	movwf	(??_Write_caracter+1)^0,c
  3416  0017E6                     u1145:
  3417  0017E6  90D8               	bcf	status,0,c
  3418  0017E8  3201               	rrcf	??_Write_caracter^0,f,c
  3419  0017EA  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3420  0017EC  EFF3  F00B         	goto	u1145
  3421  0017F0  A001               	btfss	??_Write_caracter^0,0,c
  3422  0017F2  EFFD  F00B         	goto	u1151
  3423  0017F6  EFFF  F00B         	goto	u1150
  3424  0017FA                     u1151:
  3425  0017FA  EF02  F00C         	goto	l162
  3426  0017FE                     u1150:
  3427  0017FE  8A8A               	bsf	3978,5,c	;volatile
  3428  001800  EF03  F00C         	goto	l1752
  3429  001804                     l162:
  3430  001804  9A8A               	bcf	3978,5,c	;volatile
  3431  001806                     l1752:
  3432                           
  3433                           ;LCD_16x2.c: 107:     ((c >> 4)&(0x01)) ? (LATB4=1) : (LATB4=0);
  3434  001806  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3435  00180A  3A01               	swapf	??_Write_caracter^0,f,c
  3436  00180C  0E0F               	movlw	15
  3437  00180E  1601               	andwf	??_Write_caracter^0,f,c
  3438  001810  A001               	btfss	??_Write_caracter^0,0,c
  3439  001812  EF0D  F00C         	goto	u1161
  3440  001816  EF0F  F00C         	goto	u1160
  3441  00181A                     u1161:
  3442  00181A  EF12  F00C         	goto	l166
  3443  00181E                     u1160:
  3444  00181E  888A               	bsf	3978,4,c	;volatile
  3445  001820  EF13  F00C         	goto	l1756
  3446  001824                     l166:
  3447  001824  988A               	bcf	3978,4,c	;volatile
  3448  001826                     l1756:
  3449                           
  3450                           ;LCD_16x2.c: 108:     ((c >> 3)&(0x01)) ? (LATB3=1) : (LATB3=0);
  3451  001826  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3452  00182A  90D8               	bcf	status,0,c
  3453  00182C  3201               	rrcf	??_Write_caracter^0,f,c
  3454  00182E  90D8               	bcf	status,0,c
  3455  001830  3201               	rrcf	??_Write_caracter^0,f,c
  3456  001832  90D8               	bcf	status,0,c
  3457  001834  3201               	rrcf	??_Write_caracter^0,f,c
  3458  001836  A001               	btfss	??_Write_caracter^0,0,c
  3459  001838  EF20  F00C         	goto	u1171
  3460  00183C  EF22  F00C         	goto	u1170
  3461  001840                     u1171:
  3462  001840  EF25  F00C         	goto	l170
  3463  001844                     u1170:
  3464  001844  868A               	bsf	3978,3,c	;volatile
  3465  001846  EF26  F00C         	goto	l1760
  3466  00184A                     l170:
  3467  00184A  968A               	bcf	3978,3,c	;volatile
  3468  00184C                     l1760:
  3469                           
  3470                           ;LCD_16x2.c: 109:     ((c >> 2)&(0x01)) ? (LATB2=1) : (LATB2=0);
  3471  00184C  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3472  001850  90D8               	bcf	status,0,c
  3473  001852  3201               	rrcf	??_Write_caracter^0,f,c
  3474  001854  90D8               	bcf	status,0,c
  3475  001856  3201               	rrcf	??_Write_caracter^0,f,c
  3476  001858  A001               	btfss	??_Write_caracter^0,0,c
  3477  00185A  EF31  F00C         	goto	u1181
  3478  00185E  EF33  F00C         	goto	u1180
  3479  001862                     u1181:
  3480  001862  EF36  F00C         	goto	l174
  3481  001866                     u1180:
  3482  001866  848A               	bsf	3978,2,c	;volatile
  3483  001868  EF37  F00C         	goto	l1764
  3484  00186C                     l174:
  3485  00186C  948A               	bcf	3978,2,c	;volatile
  3486  00186E                     l1764:
  3487                           
  3488                           ;LCD_16x2.c: 110:     ((c >> 1)&(0x01)) ? (LATB1=1) : (LATB1=0);
  3489  00186E  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3490  001872  90D8               	bcf	status,0,c
  3491  001874  3201               	rrcf	??_Write_caracter^0,f,c
  3492  001876  A001               	btfss	??_Write_caracter^0,0,c
  3493  001878  EF40  F00C         	goto	u1191
  3494  00187C  EF42  F00C         	goto	u1190
  3495  001880                     u1191:
  3496  001880  EF45  F00C         	goto	l178
  3497  001884                     u1190:
  3498  001884  828A               	bsf	3978,1,c	;volatile
  3499  001886  EF46  F00C         	goto	l180
  3500  00188A                     l178:
  3501  00188A  928A               	bcf	3978,1,c	;volatile
  3502  00188C                     l180:
  3503                           
  3504                           ;LCD_16x2.c: 111:     ((c >> 0)&(0x01)) ? (LATB0=1) : (LATB0=0);
  3505  00188C  A003               	btfss	Write_caracter@c^0,0,c
  3506  00188E  EF4B  F00C         	goto	u1201
  3507  001892  EF4D  F00C         	goto	u1200
  3508  001896                     u1201:
  3509  001896  EF50  F00C         	goto	l182
  3510  00189A                     u1200:
  3511  00189A  808A               	bsf	3978,0,c	;volatile
  3512  00189C  EF51  F00C         	goto	l1770
  3513  0018A0                     l182:
  3514  0018A0  908A               	bcf	3978,0,c	;volatile
  3515  0018A2                     l1770:
  3516                           
  3517                           ;LCD_16x2.c: 112:     registra_RS();
  3518  0018A2  ECE9  F00F         	call	_registra_RS	;wreg free
  3519  0018A6  0012               	return		;funcret
  3520  0018A8                     __end_of_Write_caracter:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _registra_RS *****************
  3524 ;; Defined at:
  3525 ;;		line 115 in file "LCD_16x2.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		None
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_Write_caracter
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text22
  3554  001FD2                     __ptext22:
  3555                           	callstack 0
  3556  001FD2                     _registra_RS:
  3557                           	callstack 27
  3558  001FD2                     
  3559                           ;LCD_16x2.c: 116:     (LATC4=1);
  3560  001FD2  888B               	bsf	3979,4,c	;volatile
  3561                           
  3562                           ;LCD_16x2.c: 117:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3563  001FD4  D000               	nop2		;2 cycle nop
  3564  001FD6  D000               	nop2		;2 cycle nop
  3565                           
  3566                           ;LCD_16x2.c: 118:     (LATC5=1);
  3567  001FD8  8A8B               	bsf	3979,5,c	;volatile
  3568                           
  3569                           ;LCD_16x2.c: 119:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3570  001FDA  D000               	nop2		;2 cycle nop
  3571  001FDC  D000               	nop2		;2 cycle nop
  3572                           
  3573                           ;LCD_16x2.c: 120:     (LATC5=0);
  3574  001FDE  9A8B               	bcf	3979,5,c	;volatile
  3575                           
  3576                           ;LCD_16x2.c: 121:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3577  001FE0  D000               	nop2		;2 cycle nop
  3578  001FE2  D000               	nop2		;2 cycle nop
  3579                           
  3580                           ;LCD_16x2.c: 122:     (LATC4=0);
  3581  001FE4  988B               	bcf	3979,4,c	;volatile
  3582  001FE6  0012               	return		;funcret
  3583  001FE8                     __end_of_registra_RS:
  3584                           	callstack 0
  3585                           
  3586 ;; *************** function _Set_Line *****************
  3587 ;; Defined at:
  3588 ;;		line 125 in file "LCD_16x2.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  line            1    wreg     unsigned char 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  line            1    0[COMRAM] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used: 1
  3608 ;; Hardware stack levels required when called: 2
  3609 ;; This function calls:
  3610 ;;		_register_EN
  3611 ;; This function is called by:
  3612 ;;		_Write_Display
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text23
  3617  001DFC                     __ptext23:
  3618                           	callstack 0
  3619  001DFC                     _Set_Line:
  3620                           	callstack 27
  3621                           
  3622                           ;incstack = 0
  3623                           ;Set_Line@line stored from wreg
  3624  001DFC  6E01               	movwf	Set_Line@line^0,c
  3625  001DFE                     
  3626                           ;LCD_16x2.c: 126:     if (line == 0) {
  3627  001DFE  5001               	movf	Set_Line@line^0,w,c
  3628  001E00  A4D8               	btfss	status,2,c
  3629  001E02  EF05  F00F         	goto	u1211
  3630  001E06  EF07  F00F         	goto	u1210
  3631  001E0A                     u1211:
  3632  001E0A  EF14  F00F         	goto	l191
  3633  001E0E                     u1210:
  3634  001E0E                     
  3635                           ;LCD_16x2.c: 127:         (LATC4=0);
  3636  001E0E  988B               	bcf	3979,4,c	;volatile
  3637                           
  3638                           ;LCD_16x2.c: 128:         (LATB7=1);
  3639  001E10  8E8A               	bsf	3978,7,c	;volatile
  3640                           
  3641                           ;LCD_16x2.c: 129:         (LATB6=0);
  3642  001E12  9C8A               	bcf	3978,6,c	;volatile
  3643                           
  3644                           ;LCD_16x2.c: 130:         (LATB5=0);
  3645  001E14  9A8A               	bcf	3978,5,c	;volatile
  3646                           
  3647                           ;LCD_16x2.c: 131:         (LATB4=0);
  3648  001E16  988A               	bcf	3978,4,c	;volatile
  3649                           
  3650                           ;LCD_16x2.c: 132:         (LATB3=0);
  3651  001E18  968A               	bcf	3978,3,c	;volatile
  3652                           
  3653                           ;LCD_16x2.c: 133:         (LATB2=0);
  3654  001E1A  948A               	bcf	3978,2,c	;volatile
  3655                           
  3656                           ;LCD_16x2.c: 134:         (LATB1=0);
  3657  001E1C  928A               	bcf	3978,1,c	;volatile
  3658                           
  3659                           ;LCD_16x2.c: 135:         (LATB0=0);
  3660  001E1E  908A               	bcf	3978,0,c	;volatile
  3661  001E20                     l1776:
  3662                           
  3663                           ;LCD_16x2.c: 136:         register_EN();
  3664  001E20  ECF4  F00F         	call	_register_EN	;wreg free
  3665  001E24  EF1F  F00F         	goto	l192
  3666  001E28                     l191:
  3667                           
  3668                           ;LCD_16x2.c: 139:     (LATC4=0);
  3669  001E28  988B               	bcf	3979,4,c	;volatile
  3670                           
  3671                           ;LCD_16x2.c: 140:     (LATB7=1);
  3672  001E2A  8E8A               	bsf	3978,7,c	;volatile
  3673                           
  3674                           ;LCD_16x2.c: 141:     (LATB6=1);
  3675  001E2C  8C8A               	bsf	3978,6,c	;volatile
  3676                           
  3677                           ;LCD_16x2.c: 142:     (LATB5=0);
  3678  001E2E  9A8A               	bcf	3978,5,c	;volatile
  3679                           
  3680                           ;LCD_16x2.c: 143:     (LATB4=0);
  3681  001E30  988A               	bcf	3978,4,c	;volatile
  3682                           
  3683                           ;LCD_16x2.c: 144:     (LATB3=0);
  3684  001E32  968A               	bcf	3978,3,c	;volatile
  3685                           
  3686                           ;LCD_16x2.c: 145:     (LATB2=0);
  3687  001E34  948A               	bcf	3978,2,c	;volatile
  3688                           
  3689                           ;LCD_16x2.c: 146:     (LATB1=0);
  3690  001E36  928A               	bcf	3978,1,c	;volatile
  3691                           
  3692                           ;LCD_16x2.c: 147:     (LATB0=0);
  3693  001E38  908A               	bcf	3978,0,c	;volatile
  3694  001E3A  EF10  F00F         	goto	l1776
  3695  001E3E                     l192:
  3696  001E3E  0012               	return		;funcret
  3697  001E40                     __end_of_Set_Line:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _register_EN *****************
  3701 ;; Defined at:
  3702 ;;		line 3 in file "LCD_16x2.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; Hardware stack levels required when called: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_function_Set
  3727 ;;		_clear_Display
  3728 ;;		_display_Off
  3729 ;;		_display_On
  3730 ;;		_entry_mode_Set
  3731 ;;		_Set_Line
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text24
  3736  001FE8                     __ptext24:
  3737                           	callstack 0
  3738  001FE8                     _register_EN:
  3739                           	callstack 27
  3740  001FE8                     
  3741                           ;LCD_16x2.c: 4:     (LATC5=1);
  3742  001FE8  8A8B               	bsf	3979,5,c	;volatile
  3743                           
  3744                           ;LCD_16x2.c: 5:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3745  001FEA  D000               	nop2		;2 cycle nop
  3746  001FEC  D000               	nop2		;2 cycle nop
  3747                           
  3748                           ;LCD_16x2.c: 6:     (LATC5=0);
  3749  001FEE  9A8B               	bcf	3979,5,c	;volatile
  3750  001FF0                     
  3751                           ;LCD_16x2.c: 7:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3752  001FF0  0E35               	movlw	53
  3753  001FF2                     u1377:
  3754  001FF2  2EE8               	decfsz	wreg,f,c
  3755  001FF4  D7FE               	bra	u1377
  3756  001FF6  F000               	nop	
  3757  001FF8  0012               	return		;funcret
  3758  001FFA                     __end_of_register_EN:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _Init_Timers *****************
  3762 ;; Defined at:
  3763 ;;		line 21 in file "main.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text25
  3792  001FFA                     __ptext25:
  3793                           	callstack 0
  3794  001FFA                     _Init_Timers:
  3795                           	callstack 29
  3796  001FFA                     
  3797                           ;main.c: 25:     T0CON = 0b11000011;
  3798  001FFA  0EC3               	movlw	195
  3799  001FFC  6ED5               	movwf	213,c	;volatile
  3800  001FFE                     
  3801                           ;main.c: 26:     TMR0IE = 1;
  3802  001FFE  8AF2               	bsf	4082,5,c	;volatile
  3803  002000                     
  3804                           ;main.c: 28:     PEIE = 1;
  3805  002000  8CF2               	bsf	4082,6,c	;volatile
  3806  002002                     
  3807                           ;main.c: 30:     GIE = 1;
  3808  002002  8EF2               	bsf	4082,7,c	;volatile
  3809  002004  0012               	return		;funcret
  3810  002006                     __end_of_Init_Timers:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function _ADC_Read *****************
  3814 ;; Defined at:
  3815 ;;		line 5 in file "ADInput.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  digital         2    4[COMRAM] int 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2    0[COMRAM] int 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;Total ram usage:        6 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text26
  3844  001EF6                     __ptext26:
  3845                           	callstack 0
  3846  001EF6                     _ADC_Read:
  3847                           	callstack 29
  3848  001EF6                     
  3849                           ;ADInput.c: 6:     int digital;;ADInput.c: 11:     ADCON0bits.ADON=1;
  3850  001EF6  80C2               	bsf	194,0,c	;volatile
  3851                           
  3852                           ;ADInput.c: 12:     ADCON0bits.GO=1;
  3853  001EF8  82C2               	bsf	194,1,c	;volatile
  3854  001EFA                     l224:
  3855  001EFA  B2C2               	btfsc	194,1,c	;volatile
  3856  001EFC  EF82  F00F         	goto	u1291
  3857  001F00  EF84  F00F         	goto	u1290
  3858  001F04                     u1291:
  3859  001F04  EF7D  F00F         	goto	l224
  3860  001F08                     u1290:
  3861  001F08                     
  3862                           ;ADInput.c: 16:     digital = (ADRESH * 256) | (ADRESL);
  3863  001F08  50C3               	movf	195,w,c	;volatile
  3864  001F0A  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  3865  001F0E  6A04               	clrf	(??_ADC_Read+1)^0,c
  3866  001F10  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  3867  001F14  6A03               	clrf	??_ADC_Read^0,c
  3868  001F16  1003               	iorwf	??_ADC_Read^0,w,c
  3869  001F18  6E05               	movwf	ADC_Read@digital^0,c
  3870  001F1A  5004               	movf	(??_ADC_Read+1)^0,w,c
  3871  001F1C  6E06               	movwf	(ADC_Read@digital+1)^0,c
  3872  001F1E                     
  3873                           ;ADInput.c: 17:     return (digital);
  3874  001F1E  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  3875  001F22  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  3876  001F26  0012               	return		;funcret
  3877  001F28                     __end_of_ADC_Read:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _interruptsManager *****************
  3881 ;; Defined at:
  3882 ;;		line 10 in file "main.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		Interrupt level 2
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	intcode
  3910  000008                     __pintcode:
  3911                           	callstack 0
  3912  000008                     _interruptsManager:
  3913                           	callstack 22
  3914                           
  3915                           ;incstack = 0
  3916  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3917  00000A                     
  3918                           ;main.c: 12:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  3919  00000A  AAF2               	btfss	242,5,c	;volatile
  3920  00000C  EF0A  F000         	goto	i2u130_41
  3921  000010  EF0C  F000         	goto	i2u130_40
  3922  000014                     i2u130_41:
  3923  000014  EF1D  F000         	goto	i2l58
  3924  000018                     i2u130_40:
  3925  000018  A4F2               	btfss	242,2,c	;volatile
  3926  00001A  EF11  F000         	goto	i2u131_41
  3927  00001E  EF13  F000         	goto	i2u131_40
  3928  000022                     i2u131_41:
  3929  000022  EF1D  F000         	goto	i2l58
  3930  000026                     i2u131_40:
  3931  000026                     
  3932                           ;main.c: 13:         TMR0 = 6;
  3933  000026  0E00               	movlw	0
  3934  000028  6ED7               	movwf	215,c	;volatile
  3935  00002A  0E06               	movlw	6
  3936  00002C  6ED6               	movwf	214,c	;volatile
  3937  00002E                     
  3938                           ;main.c: 14:         INTCONbits.TMR0IF = 0;
  3939  00002E  94F2               	bcf	242,2,c	;volatile
  3940  000030                     
  3941                           ;main.c: 15:         counter_display++;
  3942  000030  0100               	movlb	0	; () banked
  3943  000032  4B6A               	infsnz	_counter_display& (0+255),f,b
  3944  000034  2B6B               	incf	(_counter_display+1)& (0+255),f,b
  3945  000036                     
  3946                           ; BSR set to: 0
  3947                           ;main.c: 16:         contador++;
  3948  000036  4B68               	infsnz	_contador& (0+255),f,b
  3949  000038  2B69               	incf	(_contador+1)& (0+255),f,b
  3950  00003A                     i2l58:
  3951  00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3952  00003C  0011               	retfie		f
  3953  00003E                     __end_of_interruptsManager:
  3954                           	callstack 0
  3955                           
  3956                           	psect	rparam
  3957  0000                     
  3958                           	psect	temp
  3959  00005F                     btemp:
  3960                           	callstack 0
  3961  00005F                     	ds	1
  3962  0000                     int$flags	set	btemp
  3963  0000                     wtemp8	set	btemp+1
  3964  0000                     ttemp5	set	btemp+1
  3965  0000                     ttemp6	set	btemp+4
  3966  0000                     ttemp7	set	btemp+8
  3967                           
  3968                           	psect	idloc
  3969                           
  3970                           ;Config register IDLOC0 @ 0x200000
  3971                           ;	unspecified, using default values
  3972  200000                     	org	2097152
  3973  200000  FF                 	db	255
  3974                           
  3975                           ;Config register IDLOC1 @ 0x200001
  3976                           ;	unspecified, using default values
  3977  200001                     	org	2097153
  3978  200001  FF                 	db	255
  3979                           
  3980                           ;Config register IDLOC2 @ 0x200002
  3981                           ;	unspecified, using default values
  3982  200002                     	org	2097154
  3983  200002  FF                 	db	255
  3984                           
  3985                           ;Config register IDLOC3 @ 0x200003
  3986                           ;	unspecified, using default values
  3987  200003                     	org	2097155
  3988  200003  FF                 	db	255
  3989                           
  3990                           ;Config register IDLOC4 @ 0x200004
  3991                           ;	unspecified, using default values
  3992  200004                     	org	2097156
  3993  200004  FF                 	db	255
  3994                           
  3995                           ;Config register IDLOC5 @ 0x200005
  3996                           ;	unspecified, using default values
  3997  200005                     	org	2097157
  3998  200005  FF                 	db	255
  3999                           
  4000                           ;Config register IDLOC6 @ 0x200006
  4001                           ;	unspecified, using default values
  4002  200006                     	org	2097158
  4003  200006  FF                 	db	255
  4004                           
  4005                           ;Config register IDLOC7 @ 0x200007
  4006                           ;	unspecified, using default values
  4007  200007                     	org	2097159
  4008  200007  FF                 	db	255
  4009                           
  4010                           	psect	config
  4011                           
  4012                           ; Padding undefined space
  4013  300000                     	org	3145728
  4014  300000  FF                 	db	255
  4015                           
  4016                           ;Config register CONFIG1H @ 0x300001
  4017                           ;	Oscillator Selection bits
  4018                           ;	FOSC = INTIO67, Internal oscillator block
  4019                           ;	4X PLL Enable
  4020                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4021                           ;	Primary clock enable bit
  4022                           ;	PRICLKEN = ON, Primary clock is always enabled
  4023                           ;	Fail-Safe Clock Monitor Enable bit
  4024                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4025                           ;	Internal/External Oscillator Switchover bit
  4026                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4027  300001                     	org	3145729
  4028  300001  38                 	db	56
  4029                           
  4030                           ;Config register CONFIG2L @ 0x300002
  4031                           ;	Power-up Timer Enable bit
  4032                           ;	PWRTEN = OFF, Power up timer disabled
  4033                           ;	Brown-out Reset Enable bits
  4034                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4035                           ;	Brown Out Reset Voltage bits
  4036                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4037  300002                     	org	3145730
  4038  300002  1F                 	db	31
  4039                           
  4040                           ;Config register CONFIG2H @ 0x300003
  4041                           ;	Watchdog Timer Enable bits
  4042                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4043                           ;	Watchdog Timer Postscale Select bits
  4044                           ;	WDTPS = 32768, 1:32768
  4045  300003                     	org	3145731
  4046  300003  3C                 	db	60
  4047                           
  4048                           ; Padding undefined space
  4049  300004                     	org	3145732
  4050  300004  FF                 	db	255
  4051                           
  4052                           ;Config register CONFIG3H @ 0x300005
  4053                           ;	CCP2 MUX bit
  4054                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4055                           ;	PORTB A/D Enable bit
  4056                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4057                           ;	P3A/CCP3 Mux bit
  4058                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4059                           ;	HFINTOSC Fast Start-up
  4060                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4061                           ;	Timer3 Clock input mux bit
  4062                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4063                           ;	ECCP2 B output mux bit
  4064                           ;	P2BMX = PORTD2, P2B is on RD2
  4065                           ;	MCLR Pin Enable bit
  4066                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4067  300005                     	org	3145733
  4068  300005  BF                 	db	191
  4069                           
  4070                           ;Config register CONFIG4L @ 0x300006
  4071                           ;	Stack Full/Underflow Reset Enable bit
  4072                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4073                           ;	Single-Supply ICSP Enable bit
  4074                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4075                           ;	Extended Instruction Set Enable bit
  4076                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4077                           ;	Background Debug
  4078                           ;	DEBUG = 0x1, unprogrammed default
  4079  300006                     	org	3145734
  4080  300006  85                 	db	133
  4081                           
  4082                           ; Padding undefined space
  4083  300007                     	org	3145735
  4084  300007  FF                 	db	255
  4085                           
  4086                           ;Config register CONFIG5L @ 0x300008
  4087                           ;	Code Protection Block 0
  4088                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4089                           ;	Code Protection Block 1
  4090                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4091                           ;	Code Protection Block 2
  4092                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4093                           ;	Code Protection Block 3
  4094                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4095  300008                     	org	3145736
  4096  300008  0F                 	db	15
  4097                           
  4098                           ;Config register CONFIG5H @ 0x300009
  4099                           ;	Boot Block Code Protection bit
  4100                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4101                           ;	Data EEPROM Code Protection bit
  4102                           ;	CPD = OFF, Data EEPROM not code-protected
  4103  300009                     	org	3145737
  4104  300009  C0                 	db	192
  4105                           
  4106                           ;Config register CONFIG6L @ 0x30000A
  4107                           ;	Write Protection Block 0
  4108                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4109                           ;	Write Protection Block 1
  4110                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4111                           ;	Write Protection Block 2
  4112                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4113                           ;	Write Protection Block 3
  4114                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4115  30000A                     	org	3145738
  4116  30000A  0F                 	db	15
  4117                           
  4118                           ;Config register CONFIG6H @ 0x30000B
  4119                           ;	Configuration Register Write Protection bit
  4120                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4121                           ;	Boot Block Write Protection bit
  4122                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4123                           ;	Data EEPROM Write Protection bit
  4124                           ;	WRTD = OFF, Data EEPROM not write-protected
  4125  30000B                     	org	3145739
  4126  30000B  E0                 	db	224
  4127                           
  4128                           ;Config register CONFIG7L @ 0x30000C
  4129                           ;	Table Read Protection Block 0
  4130                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4131                           ;	Table Read Protection Block 1
  4132                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4133                           ;	Table Read Protection Block 2
  4134                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4135                           ;	Table Read Protection Block 3
  4136                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4137  30000C                     	org	3145740
  4138  30000C  0F                 	db	15
  4139                           
  4140                           ;Config register CONFIG7H @ 0x30000D
  4141                           ;	Boot Block Table Read Protection bit
  4142                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4143  30000D                     	org	3145741
  4144  30000D  40                 	db	64
  4145                           tosu	equ	0xFFF
  4146                           tosh	equ	0xFFE
  4147                           tosl	equ	0xFFD
  4148                           stkptr	equ	0xFFC
  4149                           pclatu	equ	0xFFB
  4150                           pclath	equ	0xFFA
  4151                           pcl	equ	0xFF9
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           indf0	equ	0xFEF
  4159                           postinc0	equ	0xFEE
  4160                           postdec0	equ	0xFED
  4161                           preinc0	equ	0xFEC
  4162                           plusw0	equ	0xFEB
  4163                           fsr0h	equ	0xFEA
  4164                           fsr0l	equ	0xFE9
  4165                           wreg	equ	0xFE8
  4166                           indf1	equ	0xFE7
  4167                           postinc1	equ	0xFE6
  4168                           postdec1	equ	0xFE5
  4169                           preinc1	equ	0xFE4
  4170                           plusw1	equ	0xFE3
  4171                           fsr1h	equ	0xFE2
  4172                           fsr1l	equ	0xFE1
  4173                           bsr	equ	0xFE0
  4174                           indf2	equ	0xFDF
  4175                           postinc2	equ	0xFDE
  4176                           postdec2	equ	0xFDD
  4177                           preinc2	equ	0xFDC
  4178                           plusw2	equ	0xFDB
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        36
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     27     109
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[7]), STR_2(CODE[10]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[7]), STR_2(CODE[10]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[7]), STR_2(CODE[10]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S746_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    change_Message@new_Text	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _initialize_LCD->_clear_Display
    _Write_Display->_Write_caracter

Critical Paths under _interruptsManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _interruptsManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptsManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptsManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptsManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptsManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptsManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptsManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptsManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptsManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptsManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptsManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptsManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptsManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptsManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptsManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptsManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    7705
                                              8 BANK0     19    19      0
                           _ADC_Read
                        _Init_Timers
                      _Write_Display
                     _change_Message
                     _initialize_LCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6760
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initialize_LCD                                       2     2      0       0
                                              1 COMRAM     2     2      0
                      _clear_Display
                        _display_Off
                         _display_On
                     _entry_mode_Set
                       _function_Set
 ---------------------------------------------------------------------------------
 (2) _function_Set                                         0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _entry_mode_Set                                       0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_On                                           0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_Off                                          0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _clear_Display                                        1     1      0       0
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (1) _change_Message                                       9     7      2     561
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Write_Display                                        2     2      0     198
                                              3 COMRAM     2     2      0
                           _Set_Line
                     _Write_caracter
 ---------------------------------------------------------------------------------
 (2) _Write_caracter                                       3     3      0     176
                                              0 COMRAM     3     3      0
                        _registra_RS
 ---------------------------------------------------------------------------------
 (3) _registra_RS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_Line                                             1     1      0      22
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (3) _register_EN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interruptsManager                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _Init_Timers
   _Write_Display
     _Set_Line
       _register_EN
     _Write_caracter
       _registra_RS
   _change_Message
   _initialize_LCD
     _clear_Display
       _register_EN
     _display_Off
       _register_EN
     _display_On
       _register_EN
     _entry_mode_Set
       _register_EN
     _function_Set
       _register_EN
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _interruptsManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      6D       5       68.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CB      12        0.0%
DATA                 0      0      CB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Mar 27 09:16:15 2023

              ?_display_Off 0001                          l61 2004              _change_Message 18A8  
                       l123 1FF8                         l203 19AC                         l132 1F4C  
                       l141 1FA0                         l150 1CA8                         l126 1D64  
                       l135 1FD0                         l224 1EFA                         l129 1F88  
                       l170 184A                         l162 1804                         l154 17B4  
                       l138 1FB8                         l227 1F26                         l180 188C  
                       l182 18A0                         l174 186C                         l166 1824  
                       l158 17DC                         l191 1E28                         l192 1E3E  
                       l344 1630                         l185 18A6                         l178 188A  
                       l188 1FE6                         l357 1794                         l940 1C34  
                       l908 1DB6                         l935 1BB6                         l938 1BF8  
                       l946 10B4                         l948 10BC                         l980 1D0A  
                       l973 14A8                         l966 12F4                         l984 1EB6  
                       l987 1EBE                         l979 1D02                         _GIE 007F97  
                       l999 1B6E                         u700 1B28                         u701 1B24  
                       u710 1DFA                         u711 1DF6                         u800 1644  
                       u720 1EE8                         u801 1640                         u721 1EE4  
                       u730 14BC                         u810 1676                         u731 14B8  
                       u811 1672                         u740 14EE                         u820 16B4  
                       u900 1E9A                         u741 14EA                         u821 16B0  
                       u901 1E96                         u830 16DE                         u670 1AB8  
                       u910 1044                         u751 1518                         u831 16DA  
                       u671 1AB4                         u911 103E                         u760 153C  
                       u840 170C                         u680 1ACA                         u920 1046  
                       u761 1538                         u841 1708                         u681 1AC6  
                       u770 1566                         u850 1754                         u690 1AF2  
                       u930 105C                         u771 1562                         u851 1750  
                       u691 1AEE                         u931 1058                         u780 15A6  
                       u860 1B80                         u940 108C                         u781 15A2  
                       u861 1B7C                         u941 1088                         u790 15F0  
                       u870 1BA2                         u950 10A8                         u791 15EC  
                       u871 1B9E                         u951 10A4                         u880 1BF8  
                       u960 10D6                         u881 1BF4                         u961 10D2  
                       u890 1C08                         u970 10E4                         u891 1C04  
                       u971 10E0                         u980 120C                         u981 1208  
                       u990 122A                         u991 1226                         _abs 1E80  
                       _pad 1B70                         wreg 000FE8                        l1010 2006  
                      l1007 1DFA                        l1016 1EF4                        ?_abs 0013  
                      l1510 14E0                        l1502 14AA                        l1520 153C  
                      l1512 14EE                        l1504 14AE                        l1600 1C1C  
                      l1530 15A6                        l1522 1544                        l1514 150E  
                      l1506 14BC                        l1610 1034                        l1540 15F0  
                      l1532 15C6                        l1524 1558                        l1516 1512  
                      l1508 14DC                        l1604 1E80                        l1620 10A8  
                      l1612 105C                        l1700 144C                        l1542 1610  
                      l1534 15C8                        l1526 1566                        l1518 151E  
                      l1550 1644                        l1606 1E9A                        l1470 1AA6  
                      l1630 10F2                        l1622 10C4                        l1614 107C  
                      l1710 1472                        l1720 1F84                        l1800 1D1C  
                      l1536 15DA                        l1528 1578                        l1560 16B4  
                      l1552 1664                        l1480 1B28                        l1472 1AB8  
                      l1640 118E                        l1632 10FA                        l1624 10D6  
                      l1616 108C                        l1608 1014                        l1712 1496  
                      l1704 1458                        l1730 1F3E                        l1722 1FBA  
                      l1810 1D54                        l1802 1D20                        l1538 15E0  
                      l1570 172C                        l1562 16BC                        l1554 1668  
                      l1546 1632                        l1474 1ACA                        l1490 1DDA  
                      l1650 125E                        l1634 1100                        l1642 11F2  
                      l1626 10E4                        l1618 108E                        l1706 1466  
                      l1740 1798                        l1724 1FCC                        l1732 1F8A  
                      l1812 1D58                        l1804 1D34                        l1572 173E  
                      l1564 16D0                        l1556 1676                        l1548 1636  
                      l1476 1AD4                        l1484 1DB8                        l1492 1EC0  
                      l1660 12A8                        l1644 120C                        l1652 126E  
                      l1636 1182                        l1628 10EA                        l1820 1D78  
                      l1900 19E2                        l1670 1FE8                        l1750 17FE  
                      l1742 17AE                        l1830 18AA                        l1726 1F28  
                      l1734 1F9C                        l1718 1F72                        l1814 1D5C  
                      l1806 1D4C                        l1566 16DE                        l1574 1744  
                      l1558 1696                        l1478 1AF2                        l1486 1DC4  
                      l1494 1ECC                        l1590 1BAE                        l1582 1B70  
                      l1662 12B4                        l1654 1280                        l1646 122A  
                      l1638 1188                        l1822 1D80                        l1910 1A38  
                      l1902 19FE                        l1672 1FF0                        l1760 184C  
                      l1752 1806                        l1744 17B6                        l1840 1944  
                      l1832 18B6                        l1728 1F3A                        l1736 1FA2  
                      l1816 1D60                        l1808 1D50                        l1576 1754  
                      l1568 170C                        l1488 1DD6                        l1496 1ED0  
                      l1592 1BC2                        l1584 1B80                        l1664 12BC  
                      l1656 1290                        l1648 1244                        l1680 1328  
                      l1824 1D88                        l1920 1A90                        l1912 1A44  
                      l1904 1A0C                        l1674 1FD2                        l1770 18A2  
                      l1762 1866                        l1754 181E                        l1746 17D6  
                      l1842 1960                        l1834 18F4                        l1738 1FB4  
                      l1578 1774                        l1498 1EE8                        l1594 1BD6  
                      l1586 1B94                        l1658 1296                        l1666 12CC  
                      l1690 13CE                        l1682 133A                        l1826 1DA4  
                      l1818 1D66                        l1914 1A4A                        l1906 1A2A  
                      l1772 1DFE                        l1764 186E                        l1756 1826  
                      l1748 17DE                        l1860 1C96                        l1852 1C36  
                      l1836 1924                        l1596 1BDA                        l1588 1BA2  
                      l1684 133E                        l1676 12F6                        l1916 1A66  
                      l1908 1A2E                        l1870 1F1E                        l1790 1FFA  
                      l1774 1E0E                        l1766 1884                        l1758 1844  
                      l1862 1C9E                        l1854 1C4E                        l1846 1980  
                      l1838 1928                        l1598 1C08                        l1694 1406  
                      l1686 1362                        l1678 131A                        l1782 1CAA  
                      l1918 1A74                        l1792 1FFE                        l1776 1E20  
                      l1768 189A                        l1864 1CA2                        l1856 1C74  
                      l1848 19A4                        l1696 142A                        l1688 1386  
                      l1784 1CB2                        l1866 1EF6                        l1794 2000  
                      l1858 1C7E                        l1698 1438                        l1786 1CC0  
                      l1890 19CA                        l1868 1F08                        l1796 2002  
                      l1788 1CE6                        l1892 19D2                        l1798 1D0C  
                      l1894 19D6                        l1886 19AE                        ?_pad 0011  
                      l1896 19DA                        l1888 19C6                        l1898 19DE  
                      STR_1 1001                        STR_2 1001                        STR_3 100B  
                      u1000 1244                        u1001 1240                        u1010 125E  
                      u1011 125A                        u1020 126E                        u1021 126A  
                      u1110 17AE                        u1030 1280                        u1111 17AA  
                      u1031 127C                        u1200 189A                        u1040 1290  
                      u1201 1896                        u1105 17A0                        u1041 128C  
                      u1210 1E0E                        u1130 17D6                        u1050 12A8  
                      u1211 1E0A                        u1131 17D2                        u1051 12A4  
                      u1060 131A                        u1220 1D02                        u1125 17BE  
                      u1061 1316                        u1221 1CFE                        u1150 17FE  
                      u1230 18F4                        u1070 1362                        u1151 17FA  
                      u1231 18F0                        u1071 135E                        u1160 181E  
                      u1240 1944                        u1080 1386                        u1320 1A2A  
                      u1161 181A                        u1145 17E6                        u1241 1940  
                      u1081 1382                        u1321 1A26                        u1170 1844  
                      u1250 1960                        u1090 142A                        u1171 1840  
                      u1251 195C                        u1091 1426                        u1180 1866  
                      u1260 197C                        u1181 1862                        u1261 1978  
                      u1190 1884                        u1270 1C4E                        _LATB 000F8A  
                      u1191 1880                        u1271 1C4A                        _LATC 000F8B  
                      u1280 1C96                        u1281 1C92                        u1337 1D12  
                      u1290 1F08                        u1291 1F04                        u1347 1D26  
                      u1357 1D3E                        u1367 1F44                        u1377 1FF2  
                      _PEIE 007F96                        i2l58 003A            ??_initialize_LCD 0002  
                      _TMR0 000FD6                        abs@a 0013                        _dbuf 006E  
                      _main 19AE                        _dtoa 1014                        _prec 0064  
                      _nout 0060                        pad@i 0018                        pad@p 0015  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        pad@w 001A  
                      fsr2l 000FD9                        btemp 005F            __end_of_ADC_Read 1F28  
                      prodh 000FF4                        prodl 000FF3                        start 003E  
              ___param_bank 000000               ??_Init_Timers 0001                       ??_abs 0015  
                     ??_pad 0017      __end_of_change_Message 19AE             __end_of___aodiv 1632  
                     ?_main 0001                       ?_dtoa 001C             __end_of___aomod 1796  
                     _T0CON 000FD5                       _LATB0 007C50                       _LATB1 007C51  
                     _LATB2 007C52                       _LATB3 007C53                       _LATB4 007C54  
                     _LATB5 007C55                       _LATC4 007C5C                       _LATB6 007C56  
                     _LATC5 007C5D                       _LATB7 007C57      __size_of_Write_Display 0074  
              vfpfcnvrt@fmt 0042                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _flags 0066                       _fputc 1AA6  
                     _fputs 1DB8                       pad@fp 0011                       _width 0062  
                     _putch 2006                       dtoa@d 001E                       dtoa@i 003E  
                     dtoa@n 0036                       dtoa@p 0030                       dtoa@s 0034  
                     dtoa@w 0032                       tablat 000FF5                       ttemp5 0060  
                     ttemp6 0063                       ttemp7 0067                       status 000FD8  
                     wtemp8 0060             __end_of_sprintf 1DB8             __initialization 1E40  
              __end_of_main 1AA6                __end_of_dtoa 12F6             ?_change_Message 0001  
           change_Message@i 0008                      ??_main 005E                      ??_dtoa 0026  
     __end_of_clear_Display 1F4E            __end_of_Set_Line 1E40         __end_of_Init_Timers 2006  
             __activetblptr 000001                ?_register_EN 0001                ?_registra_RS 0001  
                    _ADCON0 000FC2                      _ADCON1 000FC1                      _ADCON2 000FC0  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 000FC4  
                    _ADRESL 000FC3                      ?_putch 0001                      i2l1880 002E  
                    i2l1882 0030                      i2l1874 000A                      i2l1884 0036  
                    i2l1876 0018                      i2l1878 0026                      _OSCCON 000FD3  
                    _TMR0IE 007F95               _Write_Display 1C36                vfprintf@cfmt 0056  
                 ??___aodiv 0011                   ??___aomod 0011             ADC_Read@digital 0005  
                    clear_0 1E66               ?_function_Set 0001                      isa$std 000001  
                    pad@buf 0013        __size_of_display_Off 0018                      main@ad 00CB  
        change_Message@line 0007                      dtoa@fp 001C                      _strlen 1EC0  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A                   ?_ADC_Read 0001                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
   __size_of_Write_caracter 0112                      putch@c 0001            __end_of_vfprintf 1D0C  
                 ??_sprintf 005E                  __accesstop 0060     __end_of__initialization 1E6E  
            ?_Write_Display 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
              __pidataBANK0 1F4E                 _Init_Timers 1FFA               __end_of_fputc 1B70  
             __end_of_fputs 1DFC               __end_of_putch 2008              ??_function_Set 0001  
                ??_ADC_Read 0003                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 0060                   ?_Set_Line 0001  
                   ?_strlen 0001          __size_of_vfpfcnvrt 01B4        __size_of_register_EN 0012  
                _display_On 1FA2        __size_of_registra_RS 0016             ??_Write_Display 0004  
   __size_of_entry_mode_Set 0018                  ??_Set_Line 0001                     __Hparam 0000  
          ??_change_Message 0003                     __Lparam 0000                     ___aodiv 14AA  
                   ___aomod 1632                   ?_vfprintf 0050                __psmallconst 1000  
                   __pcinit 1E40                     __ramtop 1000                     __ptext0 19AE  
                   __ptext1 1D66                     __ptext2 1CAA                     __ptext3 12F6  
                   __ptext4 1014                     __ptext5 1B70                     __ptext6 1EC0  
                   __ptext7 1DB8                     __ptext8 1AA6                     __ptext9 2006  
           __size_of_strlen 0036                __size_of_abs 0040                __size_of_pad 00C6  
                   _message 008E              _Write_caracter 1796                     _sprintf 1D66  
      end_of_initialization 1E6E        __end_of_function_Set 1F8A                     fputc@fp 0003  
                   fputs@fp 000C           __end_of_vfpfcnvrt 14AA     __size_of_initialize_LCD 005A  
                   postdec1 000FE5                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 0056  
                   strlen@a 0003                     strlen@s 0001      __end_of_Write_caracter 18A8  
               ?_display_On 0001           __size_of_ADC_Read 0032      change_Message@new_Text 0001  
    __size_of_clear_Display 0026                ?_Init_Timers 0001               ??_display_Off 0001  
               vfpfcnvrt@ap 0044                 vfpfcnvrt@fp 0040                 vfpfcnvrt@ll 0048  
           ?_Write_caracter 0001              __end_of_strlen 1EF6         start_initialization 1E40  
              Set_Line@line 0001                 __end_of_abs 1EC0                 __end_of_pad 1C36  
            _entry_mode_Set 1F8A                 vfprintf@fmt 0052           __size_of_Set_Line 0044  
       __size_of_display_On 0018                 __pdataBANK0 008E                    ??_strlen 0003  
             _clear_Display 1F28         __end_of_display_Off 1FD2                 __pbssCOMRAM 005E  
             __pcstackBANK0 00B2            ___aodiv@dividend 0001       __size_of_function_Set 0018  
    __end_of_entry_mode_Set 1FA2              _initialize_LCD 1D0C                   __pintcode 0008  
                  ?___aodiv 0001                    ?___aomod 0001             _counter_display 006A  
          ___aodiv@quotient 0013                _function_Set 1F72           __size_of_vfprintf 0062  
            ?_clear_Display 0001                 __smallconst 1000               ??_register_EN 0001  
             ??_registra_RS 0001                    _ADC_Read 1EF6           _interruptsManager 0008  
                 _linha_LCD 005E                    ?_sprintf 0058              __size_of_fputc 00CA  
            __size_of_fputs 0044          ?_interruptsManager 0001              __size_of_putch 0002  
           ?_entry_mode_Set 0001       __end_of_Write_Display 1CAA         ??_interruptsManager 0001  
    __end_of_initialize_LCD 1D66                    i2u130_40 0018                    i2u130_41 0014  
                  i2u131_40 0026                    i2u131_41 0022                 _display_Off 1FBA  
                 _vfpfcnvrt 12F6        __size_of_Init_Timers 000C                  _ADCON0bits 000FC2  
 __end_of_interruptsManager 003E                   main@timer 00BA                ??_display_On 0001  
                 copy_data0 1E54         __end_of_register_EN 1FFA         __end_of_registra_RS 1FE8  
           ?_initialize_LCD 0001                    _Set_Line 1DFC                    __Hrparam 0000  
                vfprintf@ap 0054                    __Lrparam 0000                  vfprintf@fp 0050  
              __Lsmallconst 1000             Write_caracter@c 0003            ??_Write_caracter 0001  
          __size_of___aodiv 0188            __size_of___aomod 0164          __end_of_display_On 1FBA  
                ?_vfpfcnvrt 0040             ??_clear_Display 0001             ___aodiv@divisor 0009  
           ___aodiv@counter 0011     __size_of_change_Message 0106                  sprintf@fmt 005A  
                  _dtoa$819 002E                    __ptext10 1E80                    __ptext11 1632  
                  __ptext20 1C36                    __ptext12 14AA                    __ptext21 1796  
                  __ptext13 1D0C                    __ptext22 1FD2                    __ptext14 1F72  
                  __ptext23 1DFC                    __ptext15 1F8A                    __ptext24 1FE8  
                  __ptext16 1FA2                    __ptext25 1FFA                    __ptext17 1FBA  
                  __ptext26 1EF6                    __ptext18 1F28                    __ptext19 18A8  
                  _contador 0068            __size_of_sprintf 0052               __size_of_main 00F8  
             __size_of_dtoa 02E2                    isa$xinst 000000                    int$flags 005F  
                  _vfprintf 1CAA            ___aomod@dividend 0001  __size_of_interruptsManager 0036  
                _INTCONbits 000FF2                 _register_EN 1FE8                 _registra_RS 1FD2  
                  intlevel2 0000          _status_LCD_startup 00B0                   sprintf@ap 00B2  
           _position_String 006C             ___aomod@divisor 0009                 ??_vfpfcnvrt 0046  
           ___aomod@counter 0011                    sprintf@f 00B4                    sprintf@s 0058  
          ??_entry_mode_Set 0001                ___aodiv@sign 0012                ___aomod@sign 0012  
