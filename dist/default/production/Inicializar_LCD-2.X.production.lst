

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Apr 05 17:29:13 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 05/05/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K22 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataBANK0
    88  002006                     __pidataBANK0:
    89                           	callstack 0
    90                           
    91                           ;initializer for _message
    92  002006  42                 	db	66
    93  002007  65                 	db	101
    94  002008  6D                 	db	109
    95  002009  20                 	db	32
    96  00200A  56                 	db	86
    97  00200B  69                 	db	105
    98  00200C  6E                 	db	110
    99  00200D  64                 	db	100
   100  00200E  6F                 	db	111
   101  00200F  20                 	db	32
   102  002010  35                 	db	53
   103  002011  37                 	db	55
   104  002012  20                 	db	32
   105  002013  31                 	db	49
   106  002014  32                 	db	50
   107  002015  33                 	db	51
   108  002016  00                 	db	0
   109  002017  4C                 	db	76
   110  002018  43                 	db	67
   111  002019  44                 	db	68
   112  00201A  20                 	db	32
   113  00201B  61                 	db	97
   114  00201C  6F                 	db	111
   115  00201D  20                 	db	32
   116  00201E  56                 	db	86
   117  00201F  69                 	db	105
   118  002020  6E                 	db	110
   119  002021  64                 	db	100
   120  002022  6F                 	db	111
   121  002023  20                 	db	32
   122  002024  42                 	db	66
   123  002025  65                 	db	101
   124  002026  6D                 	db	109
   125  002027  00                 	db	0
   126                           
   127                           ;initializer for _div_media
   128  002028  0040               	dw	64
   129                           
   130                           ;initializer for _status_LCD_startup
   131  00202A  0001               	dw	1
   132  0000                     _TMR0	set	4054
   133  0000                     _ADRESL	set	4035
   134  0000                     _ADRESH	set	4036
   135  0000                     _ADCON0bits	set	4034
   136  0000                     _ADCON2	set	4032
   137  0000                     _ADCON1	set	4033
   138  0000                     _ADCON0	set	4034
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _TRISA	set	3986
   142  0000                     _TRISC	set	3988
   143  0000                     _TRISB	set	3987
   144  0000                     _T0CON	set	4053
   145  0000                     _OSCTUNEbits	set	3995
   146  0000                     _OSCCON	set	4051
   147  0000                     _INTCONbits	set	4082
   148  0000                     _LATB0	set	31824
   149  0000                     _LATB1	set	31825
   150  0000                     _LATB2	set	31826
   151  0000                     _LATB3	set	31827
   152  0000                     _LATB4	set	31828
   153  0000                     _LATB5	set	31829
   154  0000                     _LATB6	set	31830
   155  0000                     _LATB7	set	31831
   156  0000                     _LATC4	set	31836
   157  0000                     _LATC5	set	31837
   158  0000                     _LATC0	set	31832
   159  0000                     _GIE	set	32663
   160  0000                     _PEIE	set	32662
   161  0000                     _TMR0IE	set	32661
   162                           
   163                           	psect	smallconst
   164  001000                     __psmallconst:
   165                           	callstack 0
   166  001000  00                 	db	0
   167  001001                     STR_1:
   168  001001  54                 	db	84	;'T'
   169  001002  65                 	db	101	;'e'
   170  001003  6D                 	db	109	;'m'
   171  001004  70                 	db	112	;'p'
   172  001005  6F                 	db	111	;'o'
   173  001006  3A                 	db	58	;':'
   174  001007  20                 	db	32
   175  001008  25                 	db	37
   176  001009  64                 	db	100	;'d'
   177  00100A  00                 	db	0
   178  00100B                     STR_2:
   179  00100B  41                 	db	65	;'A'
   180  00100C  44                 	db	68	;'D'
   181  00100D  3A                 	db	58	;':'
   182  00100E  20                 	db	32
   183  00100F  25                 	db	37
   184  001010  64                 	db	100	;'d'
   185  001011  00                 	db	0
   186  001012  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191  001F1E                     __pcinit:
   192                           	callstack 0
   193  001F1E                     start_initialization:
   194                           	callstack 0
   195  001F1E                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (38 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200  001F1E  0E06               	movlw	low __pidataBANK0
   201  001F20  6EF6               	movwf	tblptrl,c
   202  001F22  0E20               	movlw	high __pidataBANK0
   203  001F24  6EF7               	movwf	tblptrh,c
   204  001F26  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205  001F28  6EF8               	movwf	tblptru,c
   206  001F2A  EE00  F0A9         	lfsr	0,__pdataBANK0
   207  001F2E  EE10 F026          	lfsr	1,38
   208  001F32                     copy_data0:
   209  001F32  0009               	tblrd		*+
   210  001F34  CFF5 FFEE          	movff	tablat,postinc0
   211  001F38  50E5               	movf	postdec1,w,c
   212  001F3A  50E1               	movf	fsr1l,w,c
   213  001F3C  E1FA               	bnz	copy_data0
   214                           
   215                           ; Clear objects allocated to BANK0 (73 bytes)
   216  001F3E  EE00  F060         	lfsr	0,__pbssBANK0
   217  001F42  0E49               	movlw	73
   218  001F44                     clear_0:
   219  001F44  6AEE               	clrf	postinc0,c
   220  001F46  06E8               	decf	wreg,f,c
   221  001F48  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to COMRAM (1 bytes)
   224  001F4A  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   225  001F4C                     end_of_initialization:
   226                           	callstack 0
   227  001F4C                     __end_of__initialization:
   228                           	callstack 0
   229  001F4C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230  001F4E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231  001F50  0E00               	movlw	low (__Lsmallconst shr (0+16))
   232  001F52  6EF8               	movwf	tblptru,c
   233  001F54  0E10               	movlw	high __Lsmallconst
   234  001F56  6EF7               	movwf	tblptrh,c
   235  001F58  0100               	movlb	0
   236  001F5A  EF9F  F00D         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239  00005E                     __pbssCOMRAM:
   240                           	callstack 0
   241  00005E                     _linha_LCD:
   242                           	callstack 0
   243  00005E                     	ds	1
   244                           
   245                           	psect	bssBANK0
   246  000060                     __pbssBANK0:
   247                           	callstack 0
   248  000060                     _nout:
   249                           	callstack 0
   250  000060                     	ds	2
   251  000062                     _width:
   252                           	callstack 0
   253  000062                     	ds	2
   254  000064                     _prec:
   255                           	callstack 0
   256  000064                     	ds	2
   257  000066                     _flags:
   258                           	callstack 0
   259  000066                     	ds	2
   260  000068                     _contador_media:
   261                           	callstack 0
   262  000068                     	ds	2
   263  00006A                     _soma:
   264                           	callstack 0
   265  00006A                     	ds	2
   266  00006C                     _media:
   267                           	callstack 0
   268  00006C                     	ds	2
   269  00006E                     _position_String:
   270                           	callstack 0
   271  00006E                     	ds	2
   272  000070                     _contador:
   273                           	callstack 0
   274  000070                     	ds	2
   275  000072                     _ad:
   276                           	callstack 0
   277  000072                     	ds	2
   278  000074                     _counter_50ms:
   279                           	callstack 0
   280  000074                     	ds	2
   281  000076                     _counter_5ms:
   282                           	callstack 0
   283  000076                     	ds	2
   284  000078                     _dbuf:
   285                           	callstack 0
   286  000078                     	ds	32
   287  000098                     _timer:
   288                           	callstack 0
   289  000098                     	ds	17
   290                           
   291                           	psect	dataBANK0
   292  0000A9                     __pdataBANK0:
   293                           	callstack 0
   294  0000A9                     _message:
   295                           	callstack 0
   296  0000A9                     	ds	34
   297  0000CB                     _div_media:
   298                           	callstack 0
   299  0000CB                     	ds	2
   300  0000CD                     _status_LCD_startup:
   301                           	callstack 0
   302  0000CD                     	ds	2
   303                           
   304                           	psect	cstackBANK0
   305  0000CF                     __pcstackBANK0:
   306                           	callstack 0
   307  0000CF                     sprintf@ap:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x0
   311  0000CF                     	ds	2
   312  0000D1                     sprintf@f:
   313                           	callstack 0
   314                           
   315                           ; 6 bytes @ 0x2
   316  0000D1                     	ds	6
   317                           
   318                           	psect	cstackCOMRAM
   319  000001                     __pcstackCOMRAM:
   320                           	callstack 0
   321  000001                     ??_clear_Display:
   322  000001                     ??_Write_caracter:
   323  000001                     ?_getMedia:
   324                           	callstack 0
   325  000001                     ?_strlen:
   326                           	callstack 0
   327  000001                     ?_ADC_Read:
   328                           	callstack 0
   329  000001                     ?___lwdiv:
   330                           	callstack 0
   331  000001                     ?___aodiv:
   332                           	callstack 0
   333  000001                     ?___aomod:
   334                           	callstack 0
   335  000001                     Set_Line@line:
   336                           	callstack 0
   337  000001                     change_Message@new_Text:
   338                           	callstack 0
   339  000001                     ___lwdiv@dividend:
   340                           	callstack 0
   341  000001                     fputc@c:
   342                           	callstack 0
   343  000001                     strlen@s:
   344                           	callstack 0
   345  000001                     ___aodiv@dividend:
   346                           	callstack 0
   347  000001                     ___aomod@dividend:
   348                           	callstack 0
   349                           
   350                           ; 8 bytes @ 0x0
   351  000001                     	ds	1
   352  000002                     ??_initialize_LCD:
   353                           
   354                           ; 1 bytes @ 0x1
   355  000002                     	ds	1
   356  000003                     ??_change_Message:
   357  000003                     ??_ADC_Read:
   358  000003                     Write_caracter@c:
   359                           	callstack 0
   360  000003                     ___lwdiv@divisor:
   361                           	callstack 0
   362  000003                     fputc@fp:
   363                           	callstack 0
   364  000003                     strlen@a:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     ??_Write_Display:
   370                           
   371                           ; 1 bytes @ 0x3
   372  000004                     	ds	1
   373  000005                     ??_fputc:
   374  000005                     ADC_Read@digital:
   375                           	callstack 0
   376  000005                     ___lwdiv@quotient:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4
   380  000005                     	ds	2
   381  000007                     change_Message@line:
   382                           	callstack 0
   383  000007                     ___lwdiv@counter:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x6
   387  000007                     	ds	1
   388  000008                     change_Message@i:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x7
   392  000008                     	ds	1
   393  000009                     ___aodiv@divisor:
   394                           	callstack 0
   395  000009                     ___aomod@divisor:
   396                           	callstack 0
   397                           
   398                           ; 8 bytes @ 0x8
   399  000009                     	ds	1
   400  00000A                     fputs@s:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x9
   404  00000A                     	ds	2
   405  00000C                     fputs@fp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xB
   409  00000C                     	ds	2
   410  00000E                     fputs@c:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  00000E                     	ds	1
   415  00000F                     fputs@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xE
   419  00000F                     	ds	2
   420  000011                     ?_pad:
   421                           	callstack 0
   422  000011                     ___aodiv@counter:
   423                           	callstack 0
   424  000011                     ___aomod@counter:
   425                           	callstack 0
   426  000011                     pad@fp:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x10
   430  000011                     	ds	1
   431  000012                     ___aodiv@sign:
   432                           	callstack 0
   433  000012                     ___aomod@sign:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x11
   437  000012                     	ds	1
   438  000013                     ?_abs:
   439                           	callstack 0
   440  000013                     pad@buf:
   441                           	callstack 0
   442  000013                     abs@a:
   443                           	callstack 0
   444  000013                     ___aodiv@quotient:
   445                           	callstack 0
   446                           
   447                           ; 8 bytes @ 0x12
   448  000013                     	ds	2
   449  000015                     ??_abs:
   450  000015                     pad@p:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x14
   454  000015                     	ds	2
   455  000017                     ??_pad:
   456                           
   457                           ; 1 bytes @ 0x16
   458  000017                     	ds	1
   459  000018                     pad@i:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x17
   463  000018                     	ds	2
   464  00001A                     pad@w:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x19
   468  00001A                     	ds	2
   469  00001C                     ?_dtoa:
   470                           	callstack 0
   471  00001C                     dtoa@fp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1B
   475  00001C                     	ds	2
   476  00001E                     dtoa@d:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x1D
   480  00001E                     	ds	8
   481  000026                     ??_dtoa:
   482                           
   483                           ; 1 bytes @ 0x25
   484  000026                     	ds	8
   485  00002E                     _dtoa$852:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x2D
   489  00002E                     	ds	2
   490  000030                     dtoa@p:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x2F
   494  000030                     	ds	2
   495  000032                     dtoa@w:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x31
   499  000032                     	ds	2
   500  000034                     dtoa@s:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x33
   504  000034                     	ds	2
   505  000036                     dtoa@n:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0x35
   509  000036                     	ds	8
   510  00003E                     dtoa@i:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x3D
   514  00003E                     	ds	2
   515  000040                     ?_vfpfcnvrt:
   516                           	callstack 0
   517  000040                     vfpfcnvrt@fp:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x3F
   521  000040                     	ds	2
   522  000042                     vfpfcnvrt@fmt:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x41
   526  000042                     	ds	2
   527  000044                     vfpfcnvrt@ap:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x43
   531  000044                     	ds	2
   532  000046                     ??_vfpfcnvrt:
   533                           
   534                           ; 1 bytes @ 0x45
   535  000046                     	ds	2
   536  000048                     vfpfcnvrt@ll:
   537                           	callstack 0
   538                           
   539                           ; 8 bytes @ 0x47
   540  000048                     	ds	8
   541  000050                     ?_vfprintf:
   542                           	callstack 0
   543  000050                     vfprintf@fp:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x4F
   547  000050                     	ds	2
   548  000052                     vfprintf@fmt:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x51
   552  000052                     	ds	2
   553  000054                     vfprintf@ap:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x53
   557  000054                     	ds	2
   558  000056                     vfprintf@cfmt:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x55
   562  000056                     	ds	2
   563  000058                     ?_sprintf:
   564                           	callstack 0
   565  000058                     sprintf@s:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x57
   569  000058                     	ds	2
   570  00005A                     sprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x59
   574  00005A                     	ds	4
   575  00005E                     
   576                           ; 1 bytes @ 0x5D
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 65 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels required when called: 10
   602 ;; This function calls:
   603 ;;		_Init_Timers
   604 ;;		_TaskAD
   605 ;;		_change_Message
   606 ;;		_initialize_LCD
   607 ;;		_sprintf
   608 ;;		_tempo5_ms
   609 ;; This function is called by:
   610 ;;		Startup code after reset
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text0
   615  001B3E                     __ptext0:
   616                           	callstack 0
   617  001B3E                     _main:
   618                           	callstack 21
   619  001B3E                     
   620                           ;main.c: 68:     TRISB = 0x00;
   621  001B3E  0E00               	movlw	0
   622  001B40  6E93               	movwf	147,c	;volatile
   623                           
   624                           ;main.c: 69:     TRISC = 0x00;
   625  001B42  0E00               	movlw	0
   626  001B44  6E94               	movwf	148,c	;volatile
   627                           
   628                           ;main.c: 70:     TRISA = 0x01;
   629  001B46  0E01               	movlw	1
   630  001B48  6E92               	movwf	146,c	;volatile
   631                           
   632                           ;main.c: 72:     LATB = 0x00;
   633  001B4A  0E00               	movlw	0
   634  001B4C  6E8A               	movwf	138,c	;volatile
   635                           
   636                           ;main.c: 73:     LATC = 0x00;
   637  001B4E  0E00               	movlw	0
   638  001B50  6E8B               	movwf	139,c	;volatile
   639  001B52                     
   640                           ;main.c: 74:     Init_Timers();
   641  001B52  EC7F  F010         	call	_Init_Timers	;wreg free
   642  001B56                     
   643                           ;main.c: 76:     TMR0 = 6;
   644  001B56  0E00               	movlw	0
   645  001B58  6ED7               	movwf	215,c	;volatile
   646  001B5A  0E06               	movlw	6
   647  001B5C  6ED6               	movwf	214,c	;volatile
   648  001B5E                     
   649                           ;main.c: 79:     ADCON0 = 0b00000001;
   650  001B5E  0E01               	movlw	1
   651  001B60  6EC2               	movwf	194,c	;volatile
   652  001B62                     
   653                           ;main.c: 80:     ADCON1 = 0b00000;
   654  001B62  0E00               	movlw	0
   655  001B64  6EC1               	movwf	193,c	;volatile
   656  001B66                     
   657                           ;main.c: 81:     ADCON2 = 0b10011101;
   658  001B66  0E9D               	movlw	157
   659  001B68  6EC0               	movwf	192,c	;volatile
   660  001B6A                     
   661                           ;main.c: 84:     initialize_LCD();
   662  001B6A  ECC5  F00E         	call	_initialize_LCD	;wreg free
   663  001B6E                     
   664                           ;main.c: 86:     sprintf(timer, "Tempo: %d", contador);
   665  001B6E  0E98               	movlw	low _timer
   666  001B70  6E58               	movwf	sprintf@s^0,c
   667  001B72  0E00               	movlw	high _timer
   668  001B74  6E59               	movwf	(sprintf@s+1)^0,c
   669  001B76  0E01               	movlw	low STR_1
   670  001B78  6E5A               	movwf	sprintf@fmt^0,c
   671  001B7A  0E10               	movlw	high STR_1
   672  001B7C  6E5B               	movwf	(sprintf@fmt+1)^0,c
   673  001B7E  C070  F05C         	movff	_contador,?_sprintf+4
   674  001B82  C071  F05D         	movff	_contador+1,?_sprintf+5
   675  001B86  EC22  F00F         	call	_sprintf	;wreg free
   676  001B8A                     
   677                           ;main.c: 87:     change_Message(0, timer);
   678  001B8A  0E98               	movlw	low _timer
   679  001B8C  6E01               	movwf	change_Message@new_Text^0,c
   680  001B8E  0E00               	movlw	high _timer
   681  001B90  6E02               	movwf	(change_Message@new_Text+1)^0,c
   682  001B92  0E00               	movlw	0
   683  001B94  EC54  F00C         	call	_change_Message
   684  001B98                     l2041:
   685                           
   686                           ;main.c: 89:         TaskAD();
   687  001B98  ECF6  F00E         	call	_TaskAD	;wreg free
   688  001B9C                     
   689                           ;main.c: 90:         if (counter_5ms >= 5) {
   690  001B9C  0100               	movlb	0	; () banked
   691  001B9E  BF77               	btfsc	(_counter_5ms+1)& (0+255),7,b
   692  001BA0  EFDB  F00D         	goto	u1441
   693  001BA4  5177               	movf	(_counter_5ms+1)& (0+255),w,b
   694  001BA6  E109               	bnz	u1440
   695  001BA8  0E05               	movlw	5
   696  001BAA  5D76               	subwf	_counter_5ms& (0+255),w,b
   697  001BAC  A0D8               	btfss	status,0,c
   698  001BAE  EFDB  F00D         	goto	u1441
   699  001BB2  EFDD  F00D         	goto	u1440
   700  001BB6                     u1441:
   701  001BB6  EFCC  F00D         	goto	l2041
   702  001BBA                     u1440:
   703  001BBA                     
   704                           ; BSR set to: 0
   705                           ;main.c: 91:             tempo5_ms();
   706  001BBA  ECE3  F00D         	call	_tempo5_ms	;wreg free
   707  001BBE  EFCC  F00D         	goto	l2041
   708  001BC2  EF21  F000         	goto	start
   709  001BC6                     __end_of_main:
   710                           	callstack 0
   711                           
   712 ;; *************** function _tempo5_ms *****************
   713 ;; Defined at:
   714 ;;		line 51 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 9
   735 ;; This function calls:
   736 ;;		_Write_Display
   737 ;;		_change_Message
   738 ;;		_getMedia
   739 ;;		_pinInverte
   740 ;;		_sprintf
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text1
   747  001BC6                     __ptext1:
   748                           	callstack 0
   749  001BC6                     _tempo5_ms:
   750                           	callstack 21
   751  001BC6                     
   752                           ;main.c: 53:     counter_5ms = 0;
   753  001BC6  0E00               	movlw	0
   754  001BC8  0100               	movlb	0	; () banked
   755  001BCA  6F77               	movwf	(_counter_5ms+1)& (0+255),b
   756  001BCC  0E00               	movlw	0
   757  001BCE  6F76               	movwf	_counter_5ms& (0+255),b
   758  001BD0                     
   759                           ; BSR set to: 0
   760                           ;main.c: 54:     Write_Display();
   761  001BD0  EC20  F00E         	call	_Write_Display	;wreg free
   762  001BD4                     
   763                           ;main.c: 55:     pinInverte();
   764  001BD4  EC75  F010         	call	_pinInverte	;wreg free
   765  001BD8                     
   766                           ;main.c: 56:     ad = getMedia();
   767  001BD8  EC88  F010         	call	_getMedia	;wreg free
   768  001BDC  C001  F072         	movff	?_getMedia,_ad
   769  001BE0  C002  F073         	movff	?_getMedia+1,_ad+1
   770  001BE4                     
   771                           ;main.c: 57:     *timer = '\0';
   772  001BE4  0E00               	movlw	0
   773  001BE6  0100               	movlb	0	; () banked
   774  001BE8  6F98               	movwf	_timer& (0+255),b
   775  001BEA                     
   776                           ; BSR set to: 0
   777                           ;main.c: 58:     sprintf(timer, "Tempo: %d", contador);
   778  001BEA  0E98               	movlw	low _timer
   779  001BEC  6E58               	movwf	sprintf@s^0,c
   780  001BEE  0E00               	movlw	high _timer
   781  001BF0  6E59               	movwf	(sprintf@s+1)^0,c
   782  001BF2  0E01               	movlw	low STR_1
   783  001BF4  6E5A               	movwf	sprintf@fmt^0,c
   784  001BF6  0E10               	movlw	high STR_1
   785  001BF8  6E5B               	movwf	(sprintf@fmt+1)^0,c
   786  001BFA  C070  F05C         	movff	_contador,?_sprintf+4
   787  001BFE  C071  F05D         	movff	_contador+1,?_sprintf+5
   788  001C02  EC22  F00F         	call	_sprintf	;wreg free
   789  001C06                     
   790                           ;main.c: 59:     change_Message(1, timer);
   791  001C06  0E98               	movlw	low _timer
   792  001C08  6E01               	movwf	change_Message@new_Text^0,c
   793  001C0A  0E00               	movlw	high _timer
   794  001C0C  6E02               	movwf	(change_Message@new_Text+1)^0,c
   795  001C0E  0E01               	movlw	1
   796  001C10  EC54  F00C         	call	_change_Message
   797  001C14                     
   798                           ;main.c: 60:     sprintf(timer, "AD: %d", ad);
   799  001C14  0E98               	movlw	low _timer
   800  001C16  6E58               	movwf	sprintf@s^0,c
   801  001C18  0E00               	movlw	high _timer
   802  001C1A  6E59               	movwf	(sprintf@s+1)^0,c
   803  001C1C  0E0B               	movlw	low STR_2
   804  001C1E  6E5A               	movwf	sprintf@fmt^0,c
   805  001C20  0E10               	movlw	high STR_2
   806  001C22  6E5B               	movwf	(sprintf@fmt+1)^0,c
   807  001C24  C072  F05C         	movff	_ad,?_sprintf+4
   808  001C28  C073  F05D         	movff	_ad+1,?_sprintf+5
   809  001C2C  EC22  F00F         	call	_sprintf	;wreg free
   810  001C30                     
   811                           ;main.c: 61:     change_Message(0, timer);
   812  001C30  0E98               	movlw	low _timer
   813  001C32  6E01               	movwf	change_Message@new_Text^0,c
   814  001C34  0E00               	movlw	high _timer
   815  001C36  6E02               	movwf	(change_Message@new_Text+1)^0,c
   816  001C38  0E00               	movlw	0
   817  001C3A  EC54  F00C         	call	_change_Message
   818  001C3E  0012               	return		;funcret
   819  001C40                     __end_of_tempo5_ms:
   820                           	callstack 0
   821                           
   822 ;; *************** function _sprintf *****************
   823 ;; Defined at:
   824 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  s               2   87[COMRAM] PTR unsigned char 
   827 ;;		 -> timer(17), 
   828 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   829 ;;		 -> STR_3(10), STR_2(7), STR_1(10), 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  f               6    2[BANK0 ] struct _IO_FILE
   832 ;;  ap              2    0[BANK0 ] PTR void [1]
   833 ;;		 -> ?_sprintf(2), 
   834 ;;  ret             2    0        int 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  2   87[COMRAM] int 
   837 ;; Registers used:
   838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:       14 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 8
   851 ;; This function calls:
   852 ;;		_vfprintf
   853 ;; This function is called by:
   854 ;;		_tempo5_ms
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text2
   860  001E44                     __ptext2:
   861                           	callstack 0
   862  001E44                     _sprintf:
   863                           	callstack 21
   864  001E44  0E5C               	movlw	low (?_sprintf+4)
   865  001E46  0100               	movlb	0	; () banked
   866  001E48  6FCF               	movwf	sprintf@ap& (0+255),b
   867  001E4A  0E00               	movlw	high (?_sprintf+4)
   868  001E4C  6FD0               	movwf	(sprintf@ap+1)& (0+255),b
   869  001E4E  C058  F0D1         	movff	sprintf@s,sprintf@f
   870  001E52  C059  F0D2         	movff	sprintf@s+1,sprintf@f+1
   871  001E56                     
   872                           ; BSR set to: 0
   873  001E56  0E00               	movlw	0
   874  001E58  6FD4               	movwf	(sprintf@f+3)& (0+255),b
   875  001E5A  0E00               	movlw	0
   876  001E5C  6FD3               	movwf	(sprintf@f+2)& (0+255),b
   877  001E5E                     
   878                           ; BSR set to: 0
   879  001E5E  0E00               	movlw	0
   880  001E60  6FD6               	movwf	(sprintf@f+5)& (0+255),b
   881  001E62  0E00               	movlw	0
   882  001E64  6FD5               	movwf	(sprintf@f+4)& (0+255),b
   883  001E66                     
   884                           ; BSR set to: 0
   885  001E66  0ED1               	movlw	low sprintf@f
   886  001E68  6E50               	movwf	vfprintf@fp^0,c
   887  001E6A  0E00               	movlw	high sprintf@f
   888  001E6C  6E51               	movwf	(vfprintf@fp+1)^0,c
   889  001E6E  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   890  001E72  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   891  001E76  0ECF               	movlw	low sprintf@ap
   892  001E78  6E54               	movwf	vfprintf@ap^0,c
   893  001E7A  0E00               	movlw	high sprintf@ap
   894  001E7C  6E55               	movwf	(vfprintf@ap+1)^0,c
   895  001E7E  EC94  F00E         	call	_vfprintf	;wreg free
   896  001E82  0100               	movlb	0	; () banked
   897  001E84  51D3               	movf	(sprintf@f+2)& (0+255),w,b
   898  001E86  2458               	addwf	sprintf@s^0,w,c
   899  001E88  6ED9               	movwf	fsr2l,c
   900  001E8A  51D4               	movf	(sprintf@f+3)& (0+255),w,b
   901  001E8C  2059               	addwfc	(sprintf@s+1)^0,w,c
   902  001E8E  6EDA               	movwf	fsr2h,c
   903  001E90  0E00               	movlw	0
   904  001E92  6EDF               	movwf	indf2,c
   905  001E94                     
   906                           ; BSR set to: 0
   907  001E94  0012               	return		;funcret
   908  001E96                     __end_of_sprintf:
   909                           	callstack 0
   910                           
   911 ;; *************** function _vfprintf *****************
   912 ;; Defined at:
   913 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   916 ;;		 -> sprintf@f(6), 
   917 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   918 ;;		 -> STR_3(10), STR_2(7), STR_1(10), 
   919 ;;  ap              2   83[COMRAM] PTR PTR void 
   920 ;;		 -> sprintf@ap(2), 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   923 ;;		 -> STR_3(10), STR_2(7), STR_1(10), 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2   79[COMRAM] int 
   926 ;; Registers used:
   927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:        8 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 7
   940 ;; This function calls:
   941 ;;		_vfpfcnvrt
   942 ;; This function is called by:
   943 ;;		_sprintf
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text3
   948  001D28                     __ptext3:
   949                           	callstack 0
   950  001D28                     _vfprintf:
   951                           	callstack 21
   952  001D28                     
   953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   954  001D28  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   955  001D2C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   956  001D30                     
   957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   958  001D30  0E00               	movlw	0
   959  001D32  0100               	movlb	0	; () banked
   960  001D34  6F61               	movwf	(_nout+1)& (0+255),b
   961  001D36  0E00               	movlw	0
   962  001D38  6F60               	movwf	_nout& (0+255),b
   963                           
   964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   965  001D3A  EFB2  F00E         	goto	l1843
   966  001D3E                     l1841:
   967                           
   968                           ; BSR set to: 0
   969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   970  001D3E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   971  001D42  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   972  001D46  0E56               	movlw	low vfprintf@cfmt
   973  001D48  6E42               	movwf	vfpfcnvrt@fmt^0,c
   974  001D4A  0E00               	movlw	high vfprintf@cfmt
   975  001D4C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   976  001D4E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   977  001D52  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   978  001D56  EC7B  F009         	call	_vfpfcnvrt	;wreg free
   979  001D5A  5040               	movf	?_vfpfcnvrt^0,w,c
   980  001D5C  0100               	movlb	0	; () banked
   981  001D5E  2760               	addwf	_nout& (0+255),f,b
   982  001D60  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   983  001D62  2361               	addwfc	(_nout+1)& (0+255),f,b
   984  001D64                     l1843:
   985                           
   986                           ; BSR set to: 0
   987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   988  001D64  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   989  001D68  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   990  001D6C                     	if	0	;tblptru may be non-zero
   991  001D6C                     	endif
   992  001D6C                     	if	0	;tblptru may be non-zero
   993  001D6C                     	endif
   994  001D6C  0008               	tblrd		*
   995  001D6E  50F5               	movf	tablat,w,c
   996  001D70  0900               	iorlw	0
   997  001D72  A4D8               	btfss	status,2,c
   998  001D74  EFBE  F00E         	goto	u1281
   999  001D78  EFC0  F00E         	goto	u1280
  1000  001D7C                     u1281:
  1001  001D7C  EF9F  F00E         	goto	l1841
  1002  001D80                     u1280:
  1003  001D80                     
  1004                           ; BSR set to: 0
  1005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1006  001D80  C060  F050         	movff	_nout,?_vfprintf
  1007  001D84  C061  F051         	movff	_nout+1,?_vfprintf+1
  1008  001D88                     
  1009                           ; BSR set to: 0
  1010  001D88  0012               	return		;funcret
  1011  001D8A                     __end_of_vfprintf:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _vfpfcnvrt *****************
  1015 ;; Defined at:
  1016 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1019 ;;		 -> sprintf@f(6), 
  1020 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1021 ;;		 -> vfprintf@cfmt(2), 
  1022 ;;  ap              2   67[COMRAM] PTR PTR void 
  1023 ;;		 -> sprintf@ap(2), 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  ll              8   71[COMRAM] long long 
  1026 ;;  llu             8    0        unsigned long long 
  1027 ;;  f               4    0        unsigned long long 
  1028 ;;  vp              3    0        PTR void 
  1029 ;;  ct              3    0        unsigned char [3]
  1030 ;;  cp              3    0        PTR unsigned char 
  1031 ;;  i               2    0        int 
  1032 ;;  done            2    0        int 
  1033 ;;  c               1    0        unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2   63[COMRAM] int 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;Total ram usage:       16 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 6
  1050 ;; This function calls:
  1051 ;;		_dtoa
  1052 ;;		_fputc
  1053 ;; This function is called by:
  1054 ;;		_vfprintf
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text4
  1059  0012F6                     __ptext4:
  1060                           	callstack 0
  1061  0012F6                     _vfpfcnvrt:
  1062                           	callstack 21
  1063  0012F6                     
  1064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1065  0012F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1066  0012FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1067  0012FE  CFDE FFF6          	movff	postinc2,tblptrl
  1068  001302  CFDD FFF7          	movff	postdec2,tblptrh
  1069  001306                     	if	0	;tblptru may be non-zero
  1070  001306                     	endif
  1071  001306                     	if	0	;tblptru may be non-zero
  1072  001306                     	endif
  1073  001306  0008               	tblrd		*
  1074  001308  50F5               	movf	tablat,w,c
  1075  00130A  0A25               	xorlw	37
  1076  00130C  A4D8               	btfss	status,2,c
  1077  00130E  EF8B  F009         	goto	u1121
  1078  001312  EF8D  F009         	goto	u1120
  1079  001316                     u1121:
  1080  001316  EF39  F00A         	goto	l1787
  1081  00131A                     u1120:
  1082  00131A                     
  1083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1084  00131A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1085  00131E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1086  001322  2ADE               	incf	postinc2,f,c
  1087  001324  0E00               	movlw	0
  1088  001326  22DD               	addwfc	postdec2,f,c
  1089  001328                     
  1090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1091  001328  0E00               	movlw	0
  1092  00132A  0100               	movlb	0	; () banked
  1093  00132C  6F63               	movwf	(_width+1)& (0+255),b
  1094  00132E  0E00               	movlw	0
  1095  001330  6F62               	movwf	_width& (0+255),b
  1096  001332  C062  F066         	movff	_width,_flags
  1097  001336  C063  F067         	movff	_width+1,_flags+1
  1098  00133A                     
  1099                           ; BSR set to: 0
  1100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1101  00133A  6964               	setf	_prec& (0+255),b
  1102  00133C  6965               	setf	(_prec+1)& (0+255),b
  1103  00133E                     
  1104                           ; BSR set to: 0
  1105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1106  00133E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1107  001342  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1108  001346  CFDE FFF6          	movff	postinc2,tblptrl
  1109  00134A  CFDD FFF7          	movff	postdec2,tblptrh
  1110  00134E                     	if	0	;tblptru may be non-zero
  1111  00134E                     	endif
  1112  00134E                     	if	0	;tblptru may be non-zero
  1113  00134E                     	endif
  1114  00134E  0008               	tblrd		*
  1115  001350  50F5               	movf	tablat,w,c
  1116  001352  0A64               	xorlw	100
  1117  001354  B4D8               	btfsc	status,2,c
  1118  001356  EFAF  F009         	goto	u1131
  1119  00135A  EFB1  F009         	goto	u1130
  1120  00135E                     u1131:
  1121  00135E  EFC3  F009         	goto	l1765
  1122  001362                     u1130:
  1123  001362                     
  1124                           ; BSR set to: 0
  1125  001362  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1126  001366  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1127  00136A  CFDE FFF6          	movff	postinc2,tblptrl
  1128  00136E  CFDD FFF7          	movff	postdec2,tblptrh
  1129  001372                     	if	0	;tblptru may be non-zero
  1130  001372                     	endif
  1131  001372                     	if	0	;tblptru may be non-zero
  1132  001372                     	endif
  1133  001372  0008               	tblrd		*
  1134  001374  50F5               	movf	tablat,w,c
  1135  001376  0A69               	xorlw	105
  1136  001378  A4D8               	btfss	status,2,c
  1137  00137A  EFC1  F009         	goto	u1141
  1138  00137E  EFC3  F009         	goto	u1140
  1139  001382                     u1141:
  1140  001382  EF03  F00A         	goto	l1771
  1141  001386                     u1140:
  1142  001386                     l1765:
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1146  001386  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1147  00138A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1148  00138E  2ADE               	incf	postinc2,f,c
  1149  001390  0E00               	movlw	0
  1150  001392  22DD               	addwfc	postdec2,f,c
  1151                           
  1152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1153  001394  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1154  001398  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1155  00139C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1156  0013A0  0E02               	movlw	2
  1157  0013A2  26DE               	addwf	postinc2,f,c
  1158  0013A4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1159  0013A8  0E00               	movlw	0
  1160  0013AA  22DD               	addwfc	postdec2,f,c
  1161  0013AC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1162  0013B0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1163  0013B4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1164  0013B8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1165  0013BC  0E00               	movlw	0
  1166  0013BE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1167  0013C0  0EFF               	movlw	-1
  1168  0013C2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1169  0013C4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1170  0013C6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1171  0013C8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1172  0013CA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1173  0013CC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1174  0013CE                     
  1175                           ; BSR set to: 0
  1176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1177  0013CE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1178  0013D2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1179  0013D6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1180  0013DA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1181  0013DE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1182  0013E2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1183  0013E6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1184  0013EA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1185  0013EE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1186  0013F2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1187  0013F6  EC0A  F008         	call	_dtoa	;wreg free
  1188  0013FA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1189  0013FE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1190  001402  EF54  F00A         	goto	l982
  1191  001406                     l1771:
  1192                           
  1193                           ; BSR set to: 0
  1194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1195  001406  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1196  00140A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1197  00140E  CFDE FFF6          	movff	postinc2,tblptrl
  1198  001412  CFDD FFF7          	movff	postdec2,tblptrh
  1199  001416                     	if	0	;tblptru may be non-zero
  1200  001416                     	endif
  1201  001416                     	if	0	;tblptru may be non-zero
  1202  001416                     	endif
  1203  001416  0008               	tblrd		*
  1204  001418  50F5               	movf	tablat,w,c
  1205  00141A  0A25               	xorlw	37
  1206  00141C  A4D8               	btfss	status,2,c
  1207  00141E  EF13  F00A         	goto	u1151
  1208  001422  EF15  F00A         	goto	u1150
  1209  001426                     u1151:
  1210  001426  EF2C  F00A         	goto	l1781
  1211  00142A                     u1150:
  1212  00142A                     
  1213                           ; BSR set to: 0
  1214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1215  00142A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1216  00142E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1217  001432  2ADE               	incf	postinc2,f,c
  1218  001434  0E00               	movlw	0
  1219  001436  22DD               	addwfc	postdec2,f,c
  1220  001438                     
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1223  001438  0E00               	movlw	0
  1224  00143A  6E02               	movwf	(fputc@c+1)^0,c
  1225  00143C  0E25               	movlw	37
  1226  00143E  6E01               	movwf	fputc@c^0,c
  1227  001440  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1228  001444  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1229  001448  ECD7  F00C         	call	_fputc	;wreg free
  1230  00144C                     l1777:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1233  00144C  0E00               	movlw	0
  1234  00144E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1235  001450  0E01               	movlw	1
  1236  001452  6E40               	movwf	?_vfpfcnvrt^0,c
  1237  001454  EF54  F00A         	goto	l982
  1238  001458                     l1781:
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1242  001458  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1243  00145C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1244  001460  2ADE               	incf	postinc2,f,c
  1245  001462  0E00               	movlw	0
  1246  001464  22DD               	addwfc	postdec2,f,c
  1247  001466                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1250  001466  0E00               	movlw	0
  1251  001468  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1252  00146A  0E00               	movlw	0
  1253  00146C  6E40               	movwf	?_vfpfcnvrt^0,c
  1254  00146E  EF54  F00A         	goto	l982
  1255  001472                     l1787:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1258  001472  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1259  001476  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1260  00147A  CFDE FFF6          	movff	postinc2,tblptrl
  1261  00147E  CFDD FFF7          	movff	postdec2,tblptrh
  1262  001482                     	if	0	;tblptru may be non-zero
  1263  001482                     	endif
  1264  001482                     	if	0	;tblptru may be non-zero
  1265  001482                     	endif
  1266  001482  0008               	tblrd		*
  1267  001484  50F5               	movf	tablat,w,c
  1268  001486  6E01               	movwf	fputc@c^0,c
  1269  001488  6A02               	clrf	(fputc@c+1)^0,c
  1270  00148A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1271  00148E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1272  001492  ECD7  F00C         	call	_fputc	;wreg free
  1273  001496                     
  1274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1275  001496  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276  00149A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277  00149E  2ADE               	incf	postinc2,f,c
  1278  0014A0  0E00               	movlw	0
  1279  0014A2  22DD               	addwfc	postdec2,f,c
  1280  0014A4  EF26  F00A         	goto	l1777
  1281  0014A8                     l982:
  1282  0014A8  0012               	return		;funcret
  1283  0014AA                     __end_of_vfpfcnvrt:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _dtoa *****************
  1287 ;; Defined at:
  1288 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1291 ;;		 -> sprintf@f(6), 
  1292 ;;  d               8   29[COMRAM] long long 
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;  n               8   53[COMRAM] long long 
  1295 ;;  i               2   61[COMRAM] int 
  1296 ;;  s               2   51[COMRAM] int 
  1297 ;;  w               2   49[COMRAM] int 
  1298 ;;  p               2   47[COMRAM] int 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2   27[COMRAM] int 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1308 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;Total ram usage:       36 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 5
  1315 ;; This function calls:
  1316 ;;		___aodiv
  1317 ;;		___aomod
  1318 ;;		_abs
  1319 ;;		_pad
  1320 ;; This function is called by:
  1321 ;;		_vfpfcnvrt
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text5
  1326  001014                     __ptext5:
  1327                           	callstack 0
  1328  001014                     _dtoa:
  1329                           	callstack 21
  1330  001014                     
  1331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1332  001014  C01E  F036         	movff	dtoa@d,dtoa@n
  1333  001018  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1334  00101C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1335  001020  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1336  001024  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1337  001028  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1338  00102C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1339  001030  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1340  001034                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1342  001034  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1343  001036  EF1F  F008         	goto	u971
  1344  00103A  EF22  F008         	goto	u970
  1345  00103E                     u971:
  1346  00103E  0E01               	movlw	1
  1347  001040  EF23  F008         	goto	u980
  1348  001044                     u970:
  1349  001044  0E00               	movlw	0
  1350  001046                     u980:
  1351  001046  6E34               	movwf	dtoa@s^0,c
  1352  001048  6A35               	clrf	(dtoa@s+1)^0,c
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1355  00104A  5034               	movf	dtoa@s^0,w,c
  1356  00104C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1357  00104E  B4D8               	btfsc	status,2,c
  1358  001050  EF2C  F008         	goto	u991
  1359  001054  EF2E  F008         	goto	u990
  1360  001058                     u991:
  1361  001058  EF3E  F008         	goto	l1681
  1362  00105C                     u990:
  1363  00105C                     
  1364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1365  00105C  1E3D               	comf	(dtoa@n+7)^0,f,c
  1366  00105E  1E3C               	comf	(dtoa@n+6)^0,f,c
  1367  001060  1E3B               	comf	(dtoa@n+5)^0,f,c
  1368  001062  1E3A               	comf	(dtoa@n+4)^0,f,c
  1369  001064  1E39               	comf	(dtoa@n+3)^0,f,c
  1370  001066  1E38               	comf	(dtoa@n+2)^0,f,c
  1371  001068  1E37               	comf	(dtoa@n+1)^0,f,c
  1372  00106A  6C36               	negf	dtoa@n^0,c
  1373  00106C  0E00               	movlw	0
  1374  00106E  2237               	addwfc	(dtoa@n+1)^0,f,c
  1375  001070  2238               	addwfc	(dtoa@n+2)^0,f,c
  1376  001072  2239               	addwfc	(dtoa@n+3)^0,f,c
  1377  001074  223A               	addwfc	(dtoa@n+4)^0,f,c
  1378  001076  223B               	addwfc	(dtoa@n+5)^0,f,c
  1379  001078  223C               	addwfc	(dtoa@n+6)^0,f,c
  1380  00107A  223D               	addwfc	(dtoa@n+7)^0,f,c
  1381  00107C                     l1681:
  1382                           
  1383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1384  00107C  0100               	movlb	0	; () banked
  1385  00107E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1386  001080  EF44  F008         	goto	u1001
  1387  001084  EF46  F008         	goto	u1000
  1388  001088                     u1001:
  1389  001088  EF47  F008         	goto	l1685
  1390  00108C                     u1000:
  1391  00108C                     
  1392                           ; BSR set to: 0
  1393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1394  00108C  9366               	bcf	_flags& (0+255),1,b
  1395  00108E                     l1685:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1399  00108E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1400  001090  EF54  F008         	goto	u1010
  1401  001094  5165               	movf	(_prec+1)& (0+255),w,b
  1402  001096  E106               	bnz	u1011
  1403  001098  0564               	decf	_prec& (0+255),w,b
  1404  00109A  B0D8               	btfsc	status,0,c
  1405  00109C  EF52  F008         	goto	u1011
  1406  0010A0  EF54  F008         	goto	u1010
  1407  0010A4                     u1011:
  1408  0010A4  EF5A  F008         	goto	l955
  1409  0010A8                     u1010:
  1410  0010A8                     
  1411                           ; BSR set to: 0
  1412  0010A8  0E00               	movlw	0
  1413  0010AA  6E31               	movwf	(dtoa@p+1)^0,c
  1414  0010AC  0E01               	movlw	1
  1415  0010AE  6E30               	movwf	dtoa@p^0,c
  1416  0010B0  EF5E  F008         	goto	l957
  1417  0010B4                     l955:
  1418                           
  1419                           ; BSR set to: 0
  1420  0010B4  C064  F030         	movff	_prec,dtoa@p
  1421  0010B8  C065  F031         	movff	_prec+1,dtoa@p+1
  1422  0010BC                     l957:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1426  0010BC  C062  F032         	movff	_width,dtoa@w
  1427  0010C0  C063  F033         	movff	_width+1,dtoa@w+1
  1428  0010C4                     
  1429                           ; BSR set to: 0
  1430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1431  0010C4  5034               	movf	dtoa@s^0,w,c
  1432  0010C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  1433  0010C8  A4D8               	btfss	status,2,c
  1434  0010CA  EF69  F008         	goto	u1021
  1435  0010CE  EF6B  F008         	goto	u1020
  1436  0010D2                     u1021:
  1437  0010D2  EF72  F008         	goto	l1693
  1438  0010D6                     u1020:
  1439  0010D6                     
  1440                           ; BSR set to: 0
  1441  0010D6  A566               	btfss	_flags& (0+255),2,b
  1442  0010D8  EF70  F008         	goto	u1031
  1443  0010DC  EF72  F008         	goto	u1030
  1444  0010E0                     u1031:
  1445  0010E0  EF75  F008         	goto	l1695
  1446  0010E4                     u1030:
  1447  0010E4                     l1693:
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1451  0010E4  0632               	decf	dtoa@w^0,f,c
  1452  0010E6  A0D8               	btfss	status,0,c
  1453  0010E8  0633               	decf	(dtoa@w+1)^0,f,c
  1454  0010EA                     l1695:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1458  0010EA  0E00               	movlw	0
  1459  0010EC  6E3F               	movwf	(dtoa@i+1)^0,c
  1460  0010EE  0E1F               	movlw	31
  1461  0010F0  6E3E               	movwf	dtoa@i^0,c
  1462  0010F2                     
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1465  0010F2  0E00               	movlw	0
  1466  0010F4  6F97               	movwf	(_dbuf+31)& (0+255),b
  1467                           
  1468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1469  0010F6  EFF9  F008         	goto	l1709
  1470  0010FA                     l1699:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1473  0010FA  063E               	decf	dtoa@i^0,f,c
  1474  0010FC  A0D8               	btfss	status,0,c
  1475  0010FE  063F               	decf	(dtoa@i+1)^0,f,c
  1476  001100                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1478  001100  0E78               	movlw	low _dbuf
  1479  001102  243E               	addwf	dtoa@i^0,w,c
  1480  001104  6ED9               	movwf	fsr2l,c
  1481  001106  0E00               	movlw	high _dbuf
  1482  001108  203F               	addwfc	(dtoa@i+1)^0,w,c
  1483  00110A  6EDA               	movwf	fsr2h,c
  1484  00110C  C036  F001         	movff	dtoa@n,___aomod@dividend
  1485  001110  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1486  001114  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1487  001118  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1488  00111C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1489  001120  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1490  001124  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1491  001128  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1492  00112C  0E0A               	movlw	10
  1493  00112E  6E09               	movwf	___aomod@divisor^0,c
  1494  001130  0E00               	movlw	0
  1495  001132  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1496  001134  0E00               	movlw	0
  1497  001136  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1498  001138  0E00               	movlw	0
  1499  00113A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1500  00113C  0E00               	movlw	0
  1501  00113E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1502  001140  0E00               	movlw	0
  1503  001142  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1504  001144  0E00               	movlw	0
  1505  001146  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1506  001148  0E00               	movlw	0
  1507  00114A  6E10               	movwf	(___aomod@divisor+7)^0,c
  1508  00114C  EC19  F00B         	call	___aomod	;wreg free
  1509  001150  C001  F026         	movff	?___aomod,??_dtoa
  1510  001154  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1511  001158  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1512  00115C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1513  001160  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1514  001164  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1515  001168  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1516  00116C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1517  001170  C026  F013         	movff	??_dtoa,abs@a
  1518  001174  C028  F014         	movff	??_dtoa+2,abs@a+1
  1519  001178  ECAF  F00F         	call	_abs	;wreg free
  1520  00117C  5013               	movf	?_abs^0,w,c
  1521  00117E  0F30               	addlw	48
  1522  001180  6EDF               	movwf	indf2,c
  1523  001182                     
  1524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1525  001182  0630               	decf	dtoa@p^0,f,c
  1526  001184  A0D8               	btfss	status,0,c
  1527  001186  0631               	decf	(dtoa@p+1)^0,f,c
  1528  001188                     
  1529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1530  001188  0632               	decf	dtoa@w^0,f,c
  1531  00118A  A0D8               	btfss	status,0,c
  1532  00118C  0633               	decf	(dtoa@w+1)^0,f,c
  1533  00118E                     
  1534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1535  00118E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1536  001192  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1537  001196  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1538  00119A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1539  00119E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1540  0011A2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1541  0011A6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1542  0011AA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1543  0011AE  0E0A               	movlw	10
  1544  0011B0  6E09               	movwf	___aodiv@divisor^0,c
  1545  0011B2  0E00               	movlw	0
  1546  0011B4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1547  0011B6  0E00               	movlw	0
  1548  0011B8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1549  0011BA  0E00               	movlw	0
  1550  0011BC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1551  0011BE  0E00               	movlw	0
  1552  0011C0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1553  0011C2  0E00               	movlw	0
  1554  0011C4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1555  0011C6  0E00               	movlw	0
  1556  0011C8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1557  0011CA  0E00               	movlw	0
  1558  0011CC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1559  0011CE  EC55  F00A         	call	___aodiv	;wreg free
  1560  0011D2  C001  F036         	movff	?___aodiv,dtoa@n
  1561  0011D6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1562  0011DA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1563  0011DE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1564  0011E2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1565  0011E6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1566  0011EA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1567  0011EE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1568  0011F2                     l1709:
  1569                           
  1570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1571  0011F2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1572  0011F4  EF04  F009         	goto	u1041
  1573  0011F8  503F               	movf	(dtoa@i+1)^0,w,c
  1574  0011FA  E108               	bnz	u1040
  1575  0011FC  043E               	decf	dtoa@i^0,w,c
  1576  0011FE  A0D8               	btfss	status,0,c
  1577  001200  EF04  F009         	goto	u1041
  1578  001204  EF06  F009         	goto	u1040
  1579  001208                     u1041:
  1580  001208  EF37  F009         	goto	l1719
  1581  00120C                     u1040:
  1582  00120C  5036               	movf	dtoa@n^0,w,c
  1583  00120E  1037               	iorwf	(dtoa@n+1)^0,w,c
  1584  001210  1038               	iorwf	(dtoa@n+2)^0,w,c
  1585  001212  1039               	iorwf	(dtoa@n+3)^0,w,c
  1586  001214  103A               	iorwf	(dtoa@n+4)^0,w,c
  1587  001216  103B               	iorwf	(dtoa@n+5)^0,w,c
  1588  001218  103C               	iorwf	(dtoa@n+6)^0,w,c
  1589  00121A  103D               	iorwf	(dtoa@n+7)^0,w,c
  1590  00121C  A4D8               	btfss	status,2,c
  1591  00121E  EF13  F009         	goto	u1051
  1592  001222  EF15  F009         	goto	u1050
  1593  001226                     u1051:
  1594  001226  EF7D  F008         	goto	l1699
  1595  00122A                     u1050:
  1596  00122A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1597  00122C  EF22  F009         	goto	u1060
  1598  001230  5031               	movf	(dtoa@p+1)^0,w,c
  1599  001232  E106               	bnz	u1061
  1600  001234  0430               	decf	dtoa@p^0,w,c
  1601  001236  B0D8               	btfsc	status,0,c
  1602  001238  EF20  F009         	goto	u1061
  1603  00123C  EF22  F009         	goto	u1060
  1604  001240                     u1061:
  1605  001240  EF7D  F008         	goto	l1699
  1606  001244                     u1060:
  1607  001244  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1608  001246  EF2D  F009         	goto	u1071
  1609  00124A  5033               	movf	(dtoa@w+1)^0,w,c
  1610  00124C  E108               	bnz	u1070
  1611  00124E  0432               	decf	dtoa@w^0,w,c
  1612  001250  A0D8               	btfss	status,0,c
  1613  001252  EF2D  F009         	goto	u1071
  1614  001256  EF2F  F009         	goto	u1070
  1615  00125A                     u1071:
  1616  00125A  EF37  F009         	goto	l1719
  1617  00125E                     u1070:
  1618  00125E  0100               	movlb	0	; () banked
  1619  001260  B366               	btfsc	_flags& (0+255),1,b
  1620  001262  EF35  F009         	goto	u1081
  1621  001266  EF37  F009         	goto	u1080
  1622  00126A                     u1081:
  1623  00126A  EF7D  F008         	goto	l1699
  1624  00126E                     u1080:
  1625  00126E                     l1719:
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1628  00126E  5034               	movf	dtoa@s^0,w,c
  1629  001270  1035               	iorwf	(dtoa@s+1)^0,w,c
  1630  001272  A4D8               	btfss	status,2,c
  1631  001274  EF3E  F009         	goto	u1091
  1632  001278  EF40  F009         	goto	u1090
  1633  00127C                     u1091:
  1634  00127C  EF48  F009         	goto	l1723
  1635  001280                     u1090:
  1636  001280  0100               	movlb	0	; () banked
  1637  001282  A566               	btfss	_flags& (0+255),2,b
  1638  001284  EF46  F009         	goto	u1101
  1639  001288  EF48  F009         	goto	u1100
  1640  00128C                     u1101:
  1641  00128C  EF66  F009         	goto	l1733
  1642  001290                     u1100:
  1643  001290                     l1723:
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1646  001290  063E               	decf	dtoa@i^0,f,c
  1647  001292  A0D8               	btfss	status,0,c
  1648  001294  063F               	decf	(dtoa@i+1)^0,f,c
  1649  001296                     
  1650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1651  001296  5034               	movf	dtoa@s^0,w,c
  1652  001298  1035               	iorwf	(dtoa@s+1)^0,w,c
  1653  00129A  A4D8               	btfss	status,2,c
  1654  00129C  EF52  F009         	goto	u1111
  1655  0012A0  EF54  F009         	goto	u1110
  1656  0012A4                     u1111:
  1657  0012A4  EF5A  F009         	goto	l1729
  1658  0012A8                     u1110:
  1659  0012A8  0E00               	movlw	0
  1660  0012AA  6E2F               	movwf	(_dtoa$852+1)^0,c
  1661  0012AC  0E2B               	movlw	43
  1662  0012AE  6E2E               	movwf	_dtoa$852^0,c
  1663  0012B0  EF5E  F009         	goto	l1731
  1664  0012B4                     l1729:
  1665  0012B4  0E00               	movlw	0
  1666  0012B6  6E2F               	movwf	(_dtoa$852+1)^0,c
  1667  0012B8  0E2D               	movlw	45
  1668  0012BA  6E2E               	movwf	_dtoa$852^0,c
  1669  0012BC                     l1731:
  1670  0012BC  0E78               	movlw	low _dbuf
  1671  0012BE  243E               	addwf	dtoa@i^0,w,c
  1672  0012C0  6ED9               	movwf	fsr2l,c
  1673  0012C2  0E00               	movlw	high _dbuf
  1674  0012C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  1675  0012C6  6EDA               	movwf	fsr2h,c
  1676  0012C8  C02E  FFDF         	movff	_dtoa$852,indf2
  1677  0012CC                     l1733:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1680  0012CC  C01C  F011         	movff	dtoa@fp,pad@fp
  1681  0012D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1682  0012D4  0E78               	movlw	low _dbuf
  1683  0012D6  243E               	addwf	dtoa@i^0,w,c
  1684  0012D8  6E13               	movwf	pad@buf^0,c
  1685  0012DA  0E00               	movlw	high _dbuf
  1686  0012DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1687  0012DE  6E14               	movwf	(pad@buf+1)^0,c
  1688  0012E0  C032  F015         	movff	dtoa@w,pad@p
  1689  0012E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  1690  0012E8  EC3C  F00D         	call	_pad	;wreg free
  1691  0012EC  C011  F01C         	movff	?_pad,?_dtoa
  1692  0012F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1693  0012F4  0012               	return		;funcret
  1694  0012F6                     __end_of_dtoa:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _pad *****************
  1698 ;; Defined at:
  1699 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1702 ;;		 -> sprintf@f(6), 
  1703 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1704 ;;		 -> dbuf(32), 
  1705 ;;  p               2   20[COMRAM] int 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  w               2   25[COMRAM] int 
  1708 ;;  i               2   23[COMRAM] int 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2   16[COMRAM] int 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1718 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;Total ram usage:       11 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 4
  1725 ;; This function calls:
  1726 ;;		_fputc
  1727 ;;		_fputs
  1728 ;;		_strlen
  1729 ;; This function is called by:
  1730 ;;		_dtoa
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text6
  1735  001A78                     __ptext6:
  1736                           	callstack 0
  1737  001A78                     _pad:
  1738                           	callstack 21
  1739  001A78                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1741  001A78  0100               	movlb	0	; () banked
  1742  001A7A  A166               	btfss	_flags& (0+255),0,b
  1743  001A7C  EF42  F00D         	goto	u921
  1744  001A80  EF44  F00D         	goto	u920
  1745  001A84                     u921:
  1746  001A84  EF4E  F00D         	goto	l1653
  1747  001A88                     u920:
  1748  001A88                     
  1749                           ; BSR set to: 0
  1750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1751  001A88  C013  F00A         	movff	pad@buf,fputs@s
  1752  001A8C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1753  001A90  C011  F00C         	movff	pad@fp,fputs@fp
  1754  001A94  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1755  001A98  EC4B  F00F         	call	_fputs	;wreg free
  1756  001A9C                     l1653:
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1759  001A9C  BE16               	btfsc	(pad@p+1)^0,7,c
  1760  001A9E  EF53  F00D         	goto	u931
  1761  001AA2  EF55  F00D         	goto	u930
  1762  001AA6                     u931:
  1763  001AA6  EF5B  F00D         	goto	l1657
  1764  001AAA                     u930:
  1765  001AAA  C015  F01A         	movff	pad@p,pad@w
  1766  001AAE  C016  F01B         	movff	pad@p+1,pad@w+1
  1767  001AB2  EF5F  F00D         	goto	l944
  1768  001AB6                     l1657:
  1769  001AB6  0E00               	movlw	0
  1770  001AB8  6E1B               	movwf	(pad@w+1)^0,c
  1771  001ABA  0E00               	movlw	0
  1772  001ABC  6E1A               	movwf	pad@w^0,c
  1773  001ABE                     l944:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1776  001ABE  0E00               	movlw	0
  1777  001AC0  6E19               	movwf	(pad@i+1)^0,c
  1778  001AC2  0E00               	movlw	0
  1779  001AC4  6E18               	movwf	pad@i^0,c
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1782  001AC6  EF71  F00D         	goto	l1663
  1783  001ACA                     l1659:
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1786  001ACA  0E00               	movlw	0
  1787  001ACC  6E02               	movwf	(fputc@c+1)^0,c
  1788  001ACE  0E20               	movlw	32
  1789  001AD0  6E01               	movwf	fputc@c^0,c
  1790  001AD2  C011  F003         	movff	pad@fp,fputc@fp
  1791  001AD6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1792  001ADA  ECD7  F00C         	call	_fputc	;wreg free
  1793  001ADE                     
  1794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1795  001ADE  4A18               	infsnz	pad@i^0,f,c
  1796  001AE0  2A19               	incf	(pad@i+1)^0,f,c
  1797  001AE2                     l1663:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1800  001AE2  501A               	movf	pad@w^0,w,c
  1801  001AE4  5C18               	subwf	pad@i^0,w,c
  1802  001AE6  5019               	movf	(pad@i+1)^0,w,c
  1803  001AE8  0A80               	xorlw	128
  1804  001AEA  6E17               	movwf	??_pad^0,c
  1805  001AEC  501B               	movf	(pad@w+1)^0,w,c
  1806  001AEE  0A80               	xorlw	128
  1807  001AF0  5817               	subwfb	??_pad^0,w,c
  1808  001AF2  A0D8               	btfss	status,0,c
  1809  001AF4  EF7E  F00D         	goto	u941
  1810  001AF8  EF80  F00D         	goto	u940
  1811  001AFC                     u941:
  1812  001AFC  EF65  F00D         	goto	l1659
  1813  001B00                     u940:
  1814  001B00                     
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1816  001B00  0100               	movlb	0	; () banked
  1817  001B02  B166               	btfsc	_flags& (0+255),0,b
  1818  001B04  EF86  F00D         	goto	u951
  1819  001B08  EF88  F00D         	goto	u950
  1820  001B0C                     u951:
  1821  001B0C  EF92  F00D         	goto	l1667
  1822  001B10                     u950:
  1823  001B10                     
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1826  001B10  C013  F00A         	movff	pad@buf,fputs@s
  1827  001B14  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1828  001B18  C011  F00C         	movff	pad@fp,fputs@fp
  1829  001B1C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1830  001B20  EC4B  F00F         	call	_fputs	;wreg free
  1831  001B24                     l1667:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1834  001B24  C013  F001         	movff	pad@buf,strlen@s
  1835  001B28  C014  F002         	movff	pad@buf+1,strlen@s+1
  1836  001B2C  ECCF  F00F         	call	_strlen	;wreg free
  1837  001B30  501A               	movf	pad@w^0,w,c
  1838  001B32  2401               	addwf	?_strlen^0,w,c
  1839  001B34  6E11               	movwf	?_pad^0,c
  1840  001B36  501B               	movf	(pad@w+1)^0,w,c
  1841  001B38  2002               	addwfc	(?_strlen+1)^0,w,c
  1842  001B3A  6E12               	movwf	(?_pad+1)^0,c
  1843  001B3C  0012               	return		;funcret
  1844  001B3E                     __end_of_pad:
  1845                           	callstack 0
  1846                           
  1847 ;; *************** function _strlen *****************
  1848 ;; Defined at:
  1849 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1852 ;;		 -> dbuf(32), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1855 ;;		 -> dbuf(32), 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  2    0[COMRAM] unsigned int 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_pad
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           	psect	text7
  1880  001F9E                     __ptext7:
  1881                           	callstack 0
  1882  001F9E                     _strlen:
  1883                           	callstack 23
  1884  001F9E  C001  F003         	movff	strlen@s,strlen@a
  1885  001FA2  C002  F004         	movff	strlen@s+1,strlen@a+1
  1886  001FA6  EFD7  F00F         	goto	l1563
  1887  001FAA                     l1561:
  1888  001FAA  4A01               	infsnz	strlen@s^0,f,c
  1889  001FAC  2A02               	incf	(strlen@s+1)^0,f,c
  1890  001FAE                     l1563:
  1891  001FAE  C001  FFD9         	movff	strlen@s,fsr2l
  1892  001FB2  C002  FFDA         	movff	strlen@s+1,fsr2h
  1893  001FB6  50DF               	movf	indf2,w,c
  1894  001FB8  A4D8               	btfss	status,2,c
  1895  001FBA  EFE1  F00F         	goto	u781
  1896  001FBE  EFE3  F00F         	goto	u780
  1897  001FC2                     u781:
  1898  001FC2  EFD5  F00F         	goto	l1561
  1899  001FC6                     u780:
  1900  001FC6  5003               	movf	strlen@a^0,w,c
  1901  001FC8  5C01               	subwf	strlen@s^0,w,c
  1902  001FCA  6E01               	movwf	?_strlen^0,c
  1903  001FCC  5004               	movf	(strlen@a+1)^0,w,c
  1904  001FCE  5802               	subwfb	(strlen@s+1)^0,w,c
  1905  001FD0  6E02               	movwf	(?_strlen+1)^0,c
  1906  001FD2  0012               	return		;funcret
  1907  001FD4                     __end_of_strlen:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _fputs *****************
  1911 ;; Defined at:
  1912 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1915 ;;		 -> dbuf(32), 
  1916 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1917 ;;		 -> sprintf@f(6), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  i               2   14[COMRAM] int 
  1920 ;;  c               1   13[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  2    9[COMRAM] int 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        7 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 3
  1937 ;; This function calls:
  1938 ;;		_fputc
  1939 ;; This function is called by:
  1940 ;;		_pad
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text8
  1945  001E96                     __ptext8:
  1946                           	callstack 0
  1947  001E96                     _fputs:
  1948                           	callstack 21
  1949  001E96  0E00               	movlw	0
  1950  001E98  6E10               	movwf	(fputs@i+1)^0,c
  1951  001E9A  0E00               	movlw	0
  1952  001E9C  6E0F               	movwf	fputs@i^0,c
  1953  001E9E  EF5C  F00F         	goto	l1557
  1954  001EA2                     l1553:
  1955  001EA2  C00E  F001         	movff	fputs@c,fputc@c
  1956  001EA6  6A02               	clrf	(fputc@c+1)^0,c
  1957  001EA8  C00C  F003         	movff	fputs@fp,fputc@fp
  1958  001EAC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1959  001EB0  ECD7  F00C         	call	_fputc	;wreg free
  1960  001EB4  4A0F               	infsnz	fputs@i^0,f,c
  1961  001EB6  2A10               	incf	(fputs@i+1)^0,f,c
  1962  001EB8                     l1557:
  1963  001EB8  500F               	movf	fputs@i^0,w,c
  1964  001EBA  240A               	addwf	fputs@s^0,w,c
  1965  001EBC  6ED9               	movwf	fsr2l,c
  1966  001EBE  5010               	movf	(fputs@i+1)^0,w,c
  1967  001EC0  200B               	addwfc	(fputs@s+1)^0,w,c
  1968  001EC2  6EDA               	movwf	fsr2h,c
  1969  001EC4  50DF               	movf	indf2,w,c
  1970  001EC6  6E0E               	movwf	fputs@c^0,c
  1971  001EC8  500E               	movf	fputs@c^0,w,c
  1972  001ECA  A4D8               	btfss	status,2,c
  1973  001ECC  EF6A  F00F         	goto	u771
  1974  001ED0  EF6C  F00F         	goto	u770
  1975  001ED4                     u771:
  1976  001ED4  EF51  F00F         	goto	l1553
  1977  001ED8                     u770:
  1978  001ED8  0012               	return		;funcret
  1979  001EDA                     __end_of_fputs:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _fputc *****************
  1983 ;; Defined at:
  1984 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  c               2    0[COMRAM] int 
  1987 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1988 ;;		 -> sprintf@f(6), 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2    0[COMRAM] int 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;Total ram usage:        9 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 2
  2007 ;; This function calls:
  2008 ;;		_putch
  2009 ;; This function is called by:
  2010 ;;		_pad
  2011 ;;		_vfpfcnvrt
  2012 ;;		_fputs
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text9
  2017  0019AE                     __ptext9:
  2018                           	callstack 0
  2019  0019AE                     _fputc:
  2020                           	callstack 24
  2021  0019AE  5003               	movf	fputc@fp^0,w,c
  2022  0019B0  1004               	iorwf	(fputc@fp+1)^0,w,c
  2023  0019B2  B4D8               	btfsc	status,2,c
  2024  0019B4  EFDE  F00C         	goto	u731
  2025  0019B8  EFE0  F00C         	goto	u730
  2026  0019BC                     u731:
  2027  0019BC  EFE9  F00C         	goto	l1541
  2028  0019C0                     u730:
  2029  0019C0  5003               	movf	fputc@fp^0,w,c
  2030  0019C2  1004               	iorwf	(fputc@fp+1)^0,w,c
  2031  0019C4  A4D8               	btfss	status,2,c
  2032  0019C6  EFE7  F00C         	goto	u741
  2033  0019CA  EFE9  F00C         	goto	u740
  2034  0019CE                     u741:
  2035  0019CE  EFEE  F00C         	goto	l1543
  2036  0019D2                     u740:
  2037  0019D2                     l1541:
  2038  0019D2  5001               	movf	fputc@c^0,w,c
  2039  0019D4  EC8D  F010         	call	_putch
  2040  0019D8  EF3B  F00D         	goto	l1008
  2041  0019DC                     l1543:
  2042  0019DC  EE20 F004          	lfsr	2,4
  2043  0019E0  5003               	movf	fputc@fp^0,w,c
  2044  0019E2  26D9               	addwf	fsr2l,f,c
  2045  0019E4  5004               	movf	(fputc@fp+1)^0,w,c
  2046  0019E6  22DA               	addwfc	fsr2h,f,c
  2047  0019E8  50DE               	movf	postinc2,w,c
  2048  0019EA  10DE               	iorwf	postinc2,w,c
  2049  0019EC  B4D8               	btfsc	status,2,c
  2050  0019EE  EFFB  F00C         	goto	u751
  2051  0019F2  EFFD  F00C         	goto	u750
  2052  0019F6                     u751:
  2053  0019F6  EF18  F00D         	goto	l1547
  2054  0019FA                     u750:
  2055  0019FA  EE20 F004          	lfsr	2,4
  2056  0019FE  5003               	movf	fputc@fp^0,w,c
  2057  001A00  26D9               	addwf	fsr2l,f,c
  2058  001A02  5004               	movf	(fputc@fp+1)^0,w,c
  2059  001A04  22DA               	addwfc	fsr2h,f,c
  2060  001A06  EE10 F002          	lfsr	1,2
  2061  001A0A  5003               	movf	fputc@fp^0,w,c
  2062  001A0C  26E1               	addwf	fsr1l,f,c
  2063  001A0E  5004               	movf	(fputc@fp+1)^0,w,c
  2064  001A10  22E2               	addwfc	fsr1h,f,c
  2065  001A12  50DE               	movf	postinc2,w,c
  2066  001A14  5CE6               	subwf	postinc1,w,c
  2067  001A16  50E6               	movf	postinc1,w,c
  2068  001A18  0A80               	xorlw	128
  2069  001A1A  6E09               	movwf	(??_fputc+4)^0,c
  2070  001A1C  50DE               	movf	postinc2,w,c
  2071  001A1E  0A80               	xorlw	128
  2072  001A20  5809               	subwfb	(??_fputc+4)^0,w,c
  2073  001A22  B0D8               	btfsc	status,0,c
  2074  001A24  EF16  F00D         	goto	u761
  2075  001A28  EF18  F00D         	goto	u760
  2076  001A2C                     u761:
  2077  001A2C  EF3B  F00D         	goto	l1008
  2078  001A30                     u760:
  2079  001A30                     l1547:
  2080  001A30  EE20 F002          	lfsr	2,2
  2081  001A34  5003               	movf	fputc@fp^0,w,c
  2082  001A36  26D9               	addwf	fsr2l,f,c
  2083  001A38  5004               	movf	(fputc@fp+1)^0,w,c
  2084  001A3A  22DA               	addwfc	fsr2h,f,c
  2085  001A3C  CFDE F005          	movff	postinc2,??_fputc
  2086  001A40  CFDD F006          	movff	postdec2,??_fputc+1
  2087  001A44  C003  FFD9         	movff	fputc@fp,fsr2l
  2088  001A48  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2089  001A4C  CFDE F007          	movff	postinc2,??_fputc+2
  2090  001A50  CFDD F008          	movff	postdec2,??_fputc+3
  2091  001A54  5005               	movf	??_fputc^0,w,c
  2092  001A56  2407               	addwf	(??_fputc+2)^0,w,c
  2093  001A58  6ED9               	movwf	fsr2l,c
  2094  001A5A  5006               	movf	(??_fputc+1)^0,w,c
  2095  001A5C  2008               	addwfc	(??_fputc+3)^0,w,c
  2096  001A5E  6EDA               	movwf	fsr2h,c
  2097  001A60  C001  FFDF         	movff	fputc@c,indf2
  2098  001A64  EE20 F002          	lfsr	2,2
  2099  001A68  5003               	movf	fputc@fp^0,w,c
  2100  001A6A  26D9               	addwf	fsr2l,f,c
  2101  001A6C  5004               	movf	(fputc@fp+1)^0,w,c
  2102  001A6E  22DA               	addwfc	fsr2h,f,c
  2103  001A70  2ADE               	incf	postinc2,f,c
  2104  001A72  0E00               	movlw	0
  2105  001A74  22DD               	addwfc	postdec2,f,c
  2106  001A76                     l1008:
  2107  001A76  0012               	return		;funcret
  2108  001A78                     __end_of_fputc:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _putch *****************
  2112 ;; Defined at:
  2113 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  c               1    wreg     unsigned char 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  c               1    0[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 1
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_fputc
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text10
  2142  00211A                     __ptext10:
  2143                           	callstack 0
  2144  00211A                     _putch:
  2145                           	callstack 24
  2146  00211A  0012               	return		;funcret
  2147  00211C                     __end_of_putch:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _abs *****************
  2151 ;; Defined at:
  2152 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  a               2   18[COMRAM] int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2   18[COMRAM] int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        4 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_dtoa
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text11
  2181  001F5E                     __ptext11:
  2182                           	callstack 0
  2183  001F5E                     _abs:
  2184                           	callstack 24
  2185  001F5E  BE14               	btfsc	(abs@a+1)^0,7,c
  2186  001F60  EFBC  F00F         	goto	u960
  2187  001F64  5014               	movf	(abs@a+1)^0,w,c
  2188  001F66  E106               	bnz	u961
  2189  001F68  0413               	decf	abs@a^0,w,c
  2190  001F6A  B0D8               	btfsc	status,0,c
  2191  001F6C  EFBA  F00F         	goto	u961
  2192  001F70  EFBC  F00F         	goto	u960
  2193  001F74                     u961:
  2194  001F74  EFCA  F00F         	goto	l993
  2195  001F78                     u960:
  2196  001F78  C013  F015         	movff	abs@a,??_abs
  2197  001F7C  C014  F016         	movff	abs@a+1,??_abs+1
  2198  001F80  1E15               	comf	??_abs^0,f,c
  2199  001F82  1E16               	comf	(??_abs+1)^0,f,c
  2200  001F84  4A15               	infsnz	??_abs^0,f,c
  2201  001F86  2A16               	incf	(??_abs+1)^0,f,c
  2202  001F88  C015  F013         	movff	??_abs,?_abs
  2203  001F8C  C016  F014         	movff	??_abs+1,?_abs+1
  2204  001F90  EFCE  F00F         	goto	l996
  2205  001F94                     l993:
  2206  001F94  C013  F013         	movff	abs@a,?_abs
  2207  001F98  C014  F014         	movff	abs@a+1,?_abs+1
  2208  001F9C                     l996:
  2209  001F9C  0012               	return		;funcret
  2210  001F9E                     __end_of_abs:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function ___aomod *****************
  2214 ;; Defined at:
  2215 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  dividend        8    0[COMRAM] long long 
  2218 ;;  divisor         8    8[COMRAM] long long 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  sign            1   17[COMRAM] unsigned char 
  2221 ;;  counter         1   16[COMRAM] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  8    0[COMRAM] long long 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2231 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;Total ram usage:       18 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_dtoa
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text12
  2246  001632                     __ptext12:
  2247                           	callstack 0
  2248  001632                     ___aomod:
  2249                           	callstack 24
  2250  001632  0E00               	movlw	0
  2251  001634  6E12               	movwf	___aomod@sign^0,c
  2252  001636  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2253  001638  EF22  F00B         	goto	u860
  2254  00163C  EF20  F00B         	goto	u861
  2255  001640                     u861:
  2256  001640  EF34  F00B         	goto	l1621
  2257  001644                     u860:
  2258  001644  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2259  001646  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2260  001648  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2261  00164A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2262  00164C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2263  00164E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2264  001650  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2265  001652  6C01               	negf	___aomod@dividend^0,c
  2266  001654  0E00               	movlw	0
  2267  001656  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2268  001658  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2269  00165A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2270  00165C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2271  00165E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2272  001660  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2273  001662  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2274  001664  0E01               	movlw	1
  2275  001666  6E12               	movwf	___aomod@sign^0,c
  2276  001668                     l1621:
  2277  001668  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2278  00166A  EF3B  F00B         	goto	u870
  2279  00166E  EF39  F00B         	goto	u871
  2280  001672                     u871:
  2281  001672  EF4B  F00B         	goto	l1625
  2282  001676                     u870:
  2283  001676  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2284  001678  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2285  00167A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2286  00167C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2287  00167E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2288  001680  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2289  001682  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2290  001684  6C09               	negf	___aomod@divisor^0,c
  2291  001686  0E00               	movlw	0
  2292  001688  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2293  00168A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2294  00168C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2295  00168E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2296  001690  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2297  001692  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2298  001694  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2299  001696                     l1625:
  2300  001696  5009               	movf	___aomod@divisor^0,w,c
  2301  001698  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2302  00169A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2303  00169C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2304  00169E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2305  0016A0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2306  0016A2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2307  0016A4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2308  0016A6  B4D8               	btfsc	status,2,c
  2309  0016A8  EF58  F00B         	goto	u881
  2310  0016AC  EF5A  F00B         	goto	u880
  2311  0016B0                     u881:
  2312  0016B0  EFA2  F00B         	goto	l1641
  2313  0016B4                     u880:
  2314  0016B4  0E01               	movlw	1
  2315  0016B6  6E11               	movwf	___aomod@counter^0,c
  2316  0016B8  EF68  F00B         	goto	l1631
  2317  0016BC                     l1629:
  2318  0016BC  90D8               	bcf	status,0,c
  2319  0016BE  3609               	rlcf	___aomod@divisor^0,f,c
  2320  0016C0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2321  0016C2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2322  0016C4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2323  0016C6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2324  0016C8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2325  0016CA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2326  0016CC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2327  0016CE  2A11               	incf	___aomod@counter^0,f,c
  2328  0016D0                     l1631:
  2329  0016D0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2330  0016D2  EF6D  F00B         	goto	u891
  2331  0016D6  EF6F  F00B         	goto	u890
  2332  0016DA                     u891:
  2333  0016DA  EF5E  F00B         	goto	l1629
  2334  0016DE                     u890:
  2335  0016DE                     l1633:
  2336  0016DE  5009               	movf	___aomod@divisor^0,w,c
  2337  0016E0  5C01               	subwf	___aomod@dividend^0,w,c
  2338  0016E2  500A               	movf	(___aomod@divisor+1)^0,w,c
  2339  0016E4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2340  0016E6  500B               	movf	(___aomod@divisor+2)^0,w,c
  2341  0016E8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2342  0016EA  500C               	movf	(___aomod@divisor+3)^0,w,c
  2343  0016EC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2344  0016EE  500D               	movf	(___aomod@divisor+4)^0,w,c
  2345  0016F0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2346  0016F2  500E               	movf	(___aomod@divisor+5)^0,w,c
  2347  0016F4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2348  0016F6  500F               	movf	(___aomod@divisor+6)^0,w,c
  2349  0016F8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2350  0016FA  5010               	movf	(___aomod@divisor+7)^0,w,c
  2351  0016FC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2352  0016FE  A0D8               	btfss	status,0,c
  2353  001700  EF84  F00B         	goto	u901
  2354  001704  EF86  F00B         	goto	u900
  2355  001708                     u901:
  2356  001708  EF96  F00B         	goto	l1637
  2357  00170C                     u900:
  2358  00170C  5009               	movf	___aomod@divisor^0,w,c
  2359  00170E  5E01               	subwf	___aomod@dividend^0,f,c
  2360  001710  500A               	movf	(___aomod@divisor+1)^0,w,c
  2361  001712  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2362  001714  500B               	movf	(___aomod@divisor+2)^0,w,c
  2363  001716  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2364  001718  500C               	movf	(___aomod@divisor+3)^0,w,c
  2365  00171A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2366  00171C  500D               	movf	(___aomod@divisor+4)^0,w,c
  2367  00171E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2368  001720  500E               	movf	(___aomod@divisor+5)^0,w,c
  2369  001722  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2370  001724  500F               	movf	(___aomod@divisor+6)^0,w,c
  2371  001726  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2372  001728  5010               	movf	(___aomod@divisor+7)^0,w,c
  2373  00172A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2374  00172C                     l1637:
  2375  00172C  90D8               	bcf	status,0,c
  2376  00172E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2377  001730  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2378  001732  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2379  001734  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2380  001736  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2381  001738  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2382  00173A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2383  00173C  3209               	rrcf	___aomod@divisor^0,f,c
  2384  00173E  2E11               	decfsz	___aomod@counter^0,f,c
  2385  001740  EF6F  F00B         	goto	l1633
  2386  001744                     l1641:
  2387  001744  5012               	movf	___aomod@sign^0,w,c
  2388  001746  B4D8               	btfsc	status,2,c
  2389  001748  EFA8  F00B         	goto	u911
  2390  00174C  EFAA  F00B         	goto	u910
  2391  001750                     u911:
  2392  001750  EFBA  F00B         	goto	l1645
  2393  001754                     u910:
  2394  001754  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2395  001756  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2396  001758  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2397  00175A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2398  00175C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2399  00175E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2400  001760  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2401  001762  6C01               	negf	___aomod@dividend^0,c
  2402  001764  0E00               	movlw	0
  2403  001766  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2404  001768  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2405  00176A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2406  00176C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2407  00176E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2408  001770  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2409  001772  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2410  001774                     l1645:
  2411  001774  C001  F001         	movff	___aomod@dividend,?___aomod
  2412  001778  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2413  00177C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2414  001780  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2415  001784  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2416  001788  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2417  00178C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2418  001790  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2419  001794  0012               	return		;funcret
  2420  001796                     __end_of___aomod:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function ___aodiv *****************
  2424 ;; Defined at:
  2425 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  dividend        8    0[COMRAM] long long 
  2428 ;;  divisor         8    8[COMRAM] long long 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;  quotient        8   18[COMRAM] long long 
  2431 ;;  sign            1   17[COMRAM] unsigned char 
  2432 ;;  counter         1   16[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  8    0[COMRAM] long long 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:       26 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_dtoa
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text13
  2457  0014AA                     __ptext13:
  2458                           	callstack 0
  2459  0014AA                     ___aodiv:
  2460                           	callstack 24
  2461  0014AA  0E00               	movlw	0
  2462  0014AC  6E12               	movwf	___aodiv@sign^0,c
  2463  0014AE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2464  0014B0  EF5E  F00A         	goto	u790
  2465  0014B4  EF5C  F00A         	goto	u791
  2466  0014B8                     u791:
  2467  0014B8  EF70  F00A         	goto	l1577
  2468  0014BC                     u790:
  2469  0014BC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2470  0014BE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2471  0014C0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2472  0014C2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2473  0014C4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2474  0014C6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2475  0014C8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2476  0014CA  6C09               	negf	___aodiv@divisor^0,c
  2477  0014CC  0E00               	movlw	0
  2478  0014CE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2479  0014D0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2480  0014D2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2481  0014D4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2482  0014D6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2483  0014D8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2484  0014DA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2485  0014DC  0E01               	movlw	1
  2486  0014DE  6E12               	movwf	___aodiv@sign^0,c
  2487  0014E0                     l1577:
  2488  0014E0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2489  0014E2  EF77  F00A         	goto	u800
  2490  0014E6  EF75  F00A         	goto	u801
  2491  0014EA                     u801:
  2492  0014EA  EF89  F00A         	goto	l1583
  2493  0014EE                     u800:
  2494  0014EE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2495  0014F0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2496  0014F2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2497  0014F4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2498  0014F6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2499  0014F8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2500  0014FA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2501  0014FC  6C01               	negf	___aodiv@dividend^0,c
  2502  0014FE  0E00               	movlw	0
  2503  001500  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2504  001502  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2505  001504  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2506  001506  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2507  001508  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2508  00150A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2509  00150C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2510  00150E  0E01               	movlw	1
  2511  001510  1A12               	xorwf	___aodiv@sign^0,f,c
  2512  001512                     l1583:
  2513  001512  EE20  F013         	lfsr	2,___aodiv@quotient
  2514  001516  0E07               	movlw	7
  2515  001518                     u811:
  2516  001518  6ADE               	clrf	postinc2,c
  2517  00151A  06E8               	decf	wreg,f,c
  2518  00151C  E2FD               	bc	u811
  2519  00151E  5009               	movf	___aodiv@divisor^0,w,c
  2520  001520  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2521  001522  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2522  001524  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2523  001526  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2524  001528  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2525  00152A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2526  00152C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2527  00152E  B4D8               	btfsc	status,2,c
  2528  001530  EF9C  F00A         	goto	u821
  2529  001534  EF9E  F00A         	goto	u820
  2530  001538                     u821:
  2531  001538  EFF0  F00A         	goto	l1605
  2532  00153C                     u820:
  2533  00153C  0E01               	movlw	1
  2534  00153E  6E11               	movwf	___aodiv@counter^0,c
  2535  001540  EFAC  F00A         	goto	l1591
  2536  001544                     l1589:
  2537  001544  90D8               	bcf	status,0,c
  2538  001546  3609               	rlcf	___aodiv@divisor^0,f,c
  2539  001548  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2540  00154A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2541  00154C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2542  00154E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2543  001550  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2544  001552  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2545  001554  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2546  001556  2A11               	incf	___aodiv@counter^0,f,c
  2547  001558                     l1591:
  2548  001558  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2549  00155A  EFB1  F00A         	goto	u831
  2550  00155E  EFB3  F00A         	goto	u830
  2551  001562                     u831:
  2552  001562  EFA2  F00A         	goto	l1589
  2553  001566                     u830:
  2554  001566                     l1593:
  2555  001566  90D8               	bcf	status,0,c
  2556  001568  3613               	rlcf	___aodiv@quotient^0,f,c
  2557  00156A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2558  00156C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2559  00156E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2560  001570  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2561  001572  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2562  001574  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2563  001576  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2564  001578  5009               	movf	___aodiv@divisor^0,w,c
  2565  00157A  5C01               	subwf	___aodiv@dividend^0,w,c
  2566  00157C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2567  00157E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2568  001580  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2569  001582  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2570  001584  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2571  001586  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2572  001588  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2573  00158A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2574  00158C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2575  00158E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2576  001590  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2577  001592  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2578  001594  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2579  001596  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2580  001598  A0D8               	btfss	status,0,c
  2581  00159A  EFD1  F00A         	goto	u841
  2582  00159E  EFD3  F00A         	goto	u840
  2583  0015A2                     u841:
  2584  0015A2  EFE4  F00A         	goto	l1601
  2585  0015A6                     u840:
  2586  0015A6  5009               	movf	___aodiv@divisor^0,w,c
  2587  0015A8  5E01               	subwf	___aodiv@dividend^0,f,c
  2588  0015AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2589  0015AC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2590  0015AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2591  0015B0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2592  0015B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2593  0015B4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2594  0015B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2595  0015B8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2596  0015BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2597  0015BC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2598  0015BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2599  0015C0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2600  0015C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2601  0015C4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2602  0015C6  8013               	bsf	___aodiv@quotient^0,0,c
  2603  0015C8                     l1601:
  2604  0015C8  90D8               	bcf	status,0,c
  2605  0015CA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2606  0015CC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2607  0015CE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2608  0015D0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2609  0015D2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2610  0015D4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2611  0015D6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2612  0015D8  3209               	rrcf	___aodiv@divisor^0,f,c
  2613  0015DA  2E11               	decfsz	___aodiv@counter^0,f,c
  2614  0015DC  EFB3  F00A         	goto	l1593
  2615  0015E0                     l1605:
  2616  0015E0  5012               	movf	___aodiv@sign^0,w,c
  2617  0015E2  B4D8               	btfsc	status,2,c
  2618  0015E4  EFF6  F00A         	goto	u851
  2619  0015E8  EFF8  F00A         	goto	u850
  2620  0015EC                     u851:
  2621  0015EC  EF08  F00B         	goto	l1609
  2622  0015F0                     u850:
  2623  0015F0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2624  0015F2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2625  0015F4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2626  0015F6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2627  0015F8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2628  0015FA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2629  0015FC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2630  0015FE  6C13               	negf	___aodiv@quotient^0,c
  2631  001600  0E00               	movlw	0
  2632  001602  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2633  001604  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2634  001606  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2635  001608  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2636  00160A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2637  00160C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2638  00160E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2639  001610                     l1609:
  2640  001610  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2641  001614  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2642  001618  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2643  00161C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2644  001620  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2645  001624  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2646  001628  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2647  00162C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2648  001630  0012               	return		;funcret
  2649  001632                     __end_of___aodiv:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _pinInverte *****************
  2653 ;; Defined at:
  2654 ;;		line 45 in file "main.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;		None
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		None
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:        0 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_tempo5_ms
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text14
  2683  0020EA                     __ptext14:
  2684                           	callstack 0
  2685  0020EA                     _pinInverte:
  2686                           	callstack 28
  2687  0020EA                     
  2688                           ;main.c: 47:     LATC0 = ~LATC0;
  2689  0020EA  A08B               	btfss	3979,0,c	;volatile
  2690  0020EC  EF7A  F010         	goto	u1291
  2691  0020F0  EF7D  F010         	goto	u1290
  2692  0020F4                     u1291:
  2693  0020F4  808B               	bsf	3979,0,c	;volatile
  2694  0020F6  EF7E  F010         	goto	u1305
  2695  0020FA                     u1290:
  2696  0020FA  908B               	bcf	3979,0,c	;volatile
  2697  0020FC                     u1305:
  2698  0020FC  0012               	return		;funcret
  2699  0020FE                     __end_of_pinInverte:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _getMedia *****************
  2703 ;; Defined at:
  2704 ;;		line 29 in file "ADInput.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    0[COMRAM] int 
  2711 ;; Registers used:
  2712 ;;		None
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2722 ;;Total ram usage:        2 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_tempo5_ms
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text15
  2733  002110                     __ptext15:
  2734                           	callstack 0
  2735  002110                     _getMedia:
  2736                           	callstack 28
  2737  002110                     
  2738                           ;ADInput.c: 30:     return media;
  2739  002110  C06C  F001         	movff	_media,?_getMedia
  2740  002114  C06D  F002         	movff	_media+1,?_getMedia+1
  2741  002118  0012               	return		;funcret
  2742  00211A                     __end_of_getMedia:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _change_Message *****************
  2746 ;; Defined at:
  2747 ;;		line 172 in file "LCD_16x2.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  line            1    wreg     unsigned char 
  2750 ;;  new_Text        2    0[COMRAM] PTR unsigned char 
  2751 ;;		 -> timer(17), 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  line            1    6[COMRAM] unsigned char 
  2754 ;;  i               2    7[COMRAM] int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        9 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 1
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_tempo5_ms
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text16
  2780  0018A8                     __ptext16:
  2781                           	callstack 0
  2782  0018A8                     _change_Message:
  2783                           	callstack 28
  2784                           
  2785                           ;incstack = 0
  2786                           ;change_Message@line stored from wreg
  2787  0018A8  6E07               	movwf	change_Message@line^0,c
  2788  0018AA                     
  2789                           ;LCD_16x2.c: 173:     int i = 0;
  2790  0018AA  0E00               	movlw	0
  2791  0018AC  6E09               	movwf	(change_Message@i+1)^0,c
  2792  0018AE  0E00               	movlw	0
  2793  0018B0  6E08               	movwf	change_Message@i^0,c
  2794                           
  2795                           ;LCD_16x2.c: 175:     while (new_Text[i] != '\0' && i < 16) {
  2796  0018B2  EF94  F00C         	goto	l1883
  2797  0018B6                     l1877:
  2798                           
  2799                           ;LCD_16x2.c: 177:         if (message[line][i] != new_Text[i]) {
  2800  0018B6  5008               	movf	change_Message@i^0,w,c
  2801  0018B8  2401               	addwf	change_Message@new_Text^0,w,c
  2802  0018BA  6ED9               	movwf	fsr2l,c
  2803  0018BC  5009               	movf	(change_Message@i+1)^0,w,c
  2804  0018BE  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  2805  0018C0  6EDA               	movwf	fsr2h,c
  2806  0018C2  5007               	movf	change_Message@line^0,w,c
  2807  0018C4  0D11               	mullw	17
  2808  0018C6  0EA9               	movlw	low _message
  2809  0018C8  6E04               	movwf	(??_change_Message+1)^0,c
  2810  0018CA  0E00               	movlw	high _message
  2811  0018CC  6E05               	movwf	(??_change_Message+2)^0,c
  2812  0018CE  50F3               	movf	243,w,c
  2813  0018D0  2604               	addwf	(??_change_Message+1)^0,f,c
  2814  0018D2  50F4               	movf	244,w,c
  2815  0018D4  2205               	addwfc	(??_change_Message+2)^0,f,c
  2816  0018D6  5008               	movf	change_Message@i^0,w,c
  2817  0018D8  2404               	addwf	(??_change_Message+1)^0,w,c
  2818  0018DA  6EE1               	movwf	fsr1l,c
  2819  0018DC  5009               	movf	(change_Message@i+1)^0,w,c
  2820  0018DE  2005               	addwfc	(??_change_Message+2)^0,w,c
  2821  0018E0  6EE2               	movwf	fsr1h,c
  2822  0018E2  50DE               	movf	postinc2,w,c
  2823  0018E4  18E6               	xorwf	postinc1,w,c
  2824  0018E6  B4D8               	btfsc	status,2,c
  2825  0018E8  EF78  F00C         	goto	u1331
  2826  0018EC  EF7A  F00C         	goto	u1330
  2827  0018F0                     u1331:
  2828  0018F0  EF92  F00C         	goto	l1881
  2829  0018F4                     u1330:
  2830  0018F4                     
  2831                           ;LCD_16x2.c: 178:                 message[line][i] = new_Text[i];
  2832  0018F4  5008               	movf	change_Message@i^0,w,c
  2833  0018F6  2401               	addwf	change_Message@new_Text^0,w,c
  2834  0018F8  6ED9               	movwf	fsr2l,c
  2835  0018FA  5009               	movf	(change_Message@i+1)^0,w,c
  2836  0018FC  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  2837  0018FE  6EDA               	movwf	fsr2h,c
  2838  001900  5007               	movf	change_Message@line^0,w,c
  2839  001902  0D11               	mullw	17
  2840  001904  0EA9               	movlw	low _message
  2841  001906  6E03               	movwf	??_change_Message^0,c
  2842  001908  0E00               	movlw	high _message
  2843  00190A  6E04               	movwf	(??_change_Message+1)^0,c
  2844  00190C  50F3               	movf	243,w,c
  2845  00190E  2603               	addwf	??_change_Message^0,f,c
  2846  001910  50F4               	movf	244,w,c
  2847  001912  2204               	addwfc	(??_change_Message+1)^0,f,c
  2848  001914  5008               	movf	change_Message@i^0,w,c
  2849  001916  2403               	addwf	??_change_Message^0,w,c
  2850  001918  6EE1               	movwf	fsr1l,c
  2851  00191A  5009               	movf	(change_Message@i+1)^0,w,c
  2852  00191C  2004               	addwfc	(??_change_Message+1)^0,w,c
  2853  00191E  6EE2               	movwf	fsr1h,c
  2854  001920  CFDF FFE7          	movff	indf2,indf1
  2855  001924                     l1881:
  2856                           
  2857                           ;LCD_16x2.c: 180:         i++;
  2858  001924  4A08               	infsnz	change_Message@i^0,f,c
  2859  001926  2A09               	incf	(change_Message@i+1)^0,f,c
  2860  001928                     l1883:
  2861                           
  2862                           ;LCD_16x2.c: 175:     while (new_Text[i] != '\0' && i < 16) {
  2863  001928  5008               	movf	change_Message@i^0,w,c
  2864  00192A  2401               	addwf	change_Message@new_Text^0,w,c
  2865  00192C  6ED9               	movwf	fsr2l,c
  2866  00192E  5009               	movf	(change_Message@i+1)^0,w,c
  2867  001930  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  2868  001932  6EDA               	movwf	fsr2h,c
  2869  001934  50DF               	movf	indf2,w,c
  2870  001936  B4D8               	btfsc	status,2,c
  2871  001938  EFA0  F00C         	goto	u1341
  2872  00193C  EFA2  F00C         	goto	u1340
  2873  001940                     u1341:
  2874  001940  EFB0  F00C         	goto	l1887
  2875  001944                     u1340:
  2876  001944  BE09               	btfsc	(change_Message@i+1)^0,7,c
  2877  001946  EFAE  F00C         	goto	u1351
  2878  00194A  5009               	movf	(change_Message@i+1)^0,w,c
  2879  00194C  E109               	bnz	u1350
  2880  00194E  0E10               	movlw	16
  2881  001950  5C08               	subwf	change_Message@i^0,w,c
  2882  001952  A0D8               	btfss	status,0,c
  2883  001954  EFAE  F00C         	goto	u1351
  2884  001958  EFB0  F00C         	goto	u1350
  2885  00195C                     u1351:
  2886  00195C  EF5B  F00C         	goto	l1877
  2887  001960                     u1350:
  2888  001960                     l1887:
  2889  001960  BE09               	btfsc	(change_Message@i+1)^0,7,c
  2890  001962  EFBC  F00C         	goto	u1361
  2891  001966  5009               	movf	(change_Message@i+1)^0,w,c
  2892  001968  E109               	bnz	u1360
  2893  00196A  0E10               	movlw	16
  2894  00196C  5C08               	subwf	change_Message@i^0,w,c
  2895  00196E  A0D8               	btfss	status,0,c
  2896  001970  EFBC  F00C         	goto	u1361
  2897  001974  EFBE  F00C         	goto	u1360
  2898  001978                     u1361:
  2899  001978  EFC0  F00C         	goto	l1891
  2900  00197C                     u1360:
  2901  00197C  EFD6  F00C         	goto	l209
  2902  001980                     l1891:
  2903                           
  2904                           ;LCD_16x2.c: 183:         message[line][i] = ' ';
  2905  001980  5007               	movf	change_Message@line^0,w,c
  2906  001982  0D11               	mullw	17
  2907  001984  0EA9               	movlw	low _message
  2908  001986  6E03               	movwf	??_change_Message^0,c
  2909  001988  0E00               	movlw	high _message
  2910  00198A  6E04               	movwf	(??_change_Message+1)^0,c
  2911  00198C  50F3               	movf	243,w,c
  2912  00198E  2603               	addwf	??_change_Message^0,f,c
  2913  001990  50F4               	movf	244,w,c
  2914  001992  2204               	addwfc	(??_change_Message+1)^0,f,c
  2915  001994  5008               	movf	change_Message@i^0,w,c
  2916  001996  2403               	addwf	??_change_Message^0,w,c
  2917  001998  6ED9               	movwf	fsr2l,c
  2918  00199A  5009               	movf	(change_Message@i+1)^0,w,c
  2919  00199C  2004               	addwfc	(??_change_Message+1)^0,w,c
  2920  00199E  6EDA               	movwf	fsr2h,c
  2921  0019A0  0E20               	movlw	32
  2922  0019A2  6EDF               	movwf	indf2,c
  2923  0019A4                     
  2924                           ;LCD_16x2.c: 184:     }
  2925  0019A4  4A08               	infsnz	change_Message@i^0,f,c
  2926  0019A6  2A09               	incf	(change_Message@i+1)^0,f,c
  2927  0019A8  EFB0  F00C         	goto	l1887
  2928  0019AC                     l209:
  2929  0019AC  0012               	return		;funcret
  2930  0019AE                     __end_of_change_Message:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _Write_Display *****************
  2934 ;; Defined at:
  2935 ;;		line 111 in file "LCD_16x2.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;Total ram usage:        2 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 3
  2956 ;; This function calls:
  2957 ;;		_Set_Line
  2958 ;;		_Write_caracter
  2959 ;; This function is called by:
  2960 ;;		_tempo5_ms
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text17
  2965  001C40                     __ptext17:
  2966                           	callstack 0
  2967  001C40                     _Write_Display:
  2968                           	callstack 26
  2969  001C40                     
  2970                           ;LCD_16x2.c: 113:     if (position_String < 16) {
  2971  001C40  0100               	movlb	0	; () banked
  2972  001C42  516F               	movf	(_position_String+1)& (0+255),w,b
  2973  001C44  E107               	bnz	u1311
  2974  001C46  0E10               	movlw	16
  2975  001C48  5D6E               	subwf	_position_String& (0+255),w,b
  2976  001C4A  B0D8               	btfsc	status,0,c
  2977  001C4C  EF2A  F00E         	goto	u1311
  2978  001C50  EF2C  F00E         	goto	u1310
  2979  001C54                     u1311:
  2980  001C54  EF44  F00E         	goto	l1853
  2981  001C58                     u1310:
  2982  001C58                     
  2983                           ; BSR set to: 0
  2984                           ;LCD_16x2.c: 114:         Write_caracter(message[linha_LCD][position_String]);
  2985  001C58  505E               	movf	_linha_LCD^0,w,c
  2986  001C5A  0D11               	mullw	17
  2987  001C5C  0EA9               	movlw	low _message
  2988  001C5E  6E04               	movwf	??_Write_Display^0,c
  2989  001C60  0E00               	movlw	high _message
  2990  001C62  6E05               	movwf	(??_Write_Display+1)^0,c
  2991  001C64  50F3               	movf	243,w,c
  2992  001C66  2604               	addwf	??_Write_Display^0,f,c
  2993  001C68  50F4               	movf	244,w,c
  2994  001C6A  2205               	addwfc	(??_Write_Display+1)^0,f,c
  2995  001C6C  516E               	movf	_position_String& (0+255),w,b
  2996  001C6E  2404               	addwf	??_Write_Display^0,w,c
  2997  001C70  6ED9               	movwf	fsr2l,c
  2998  001C72  516F               	movf	(_position_String+1)& (0+255),w,b
  2999  001C74  2005               	addwfc	(??_Write_Display+1)^0,w,c
  3000  001C76  6EDA               	movwf	fsr2h,c
  3001  001C78  50DF               	movf	indf2,w,c
  3002  001C7A  ECCB  F00B         	call	_Write_caracter
  3003  001C7E                     
  3004                           ;LCD_16x2.c: 115:         position_String++;
  3005  001C7E  0100               	movlb	0	; () banked
  3006  001C80  4B6E               	infsnz	_position_String& (0+255),f,b
  3007  001C82  2B6F               	incf	(_position_String+1)& (0+255),f,b
  3008                           
  3009                           ;LCD_16x2.c: 116:     } else {
  3010  001C84  EF59  F00E         	goto	l156
  3011  001C88                     l1853:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;LCD_16x2.c: 117:         position_String = 0;
  3015  001C88  0E00               	movlw	0
  3016  001C8A  6F6F               	movwf	(_position_String+1)& (0+255),b
  3017  001C8C  0E00               	movlw	0
  3018  001C8E  6F6E               	movwf	_position_String& (0+255),b
  3019                           
  3020                           ;LCD_16x2.c: 118:         (linha_LCD == 0) ? (linha_LCD = 1) : (linha_LCD = 0);
  3021  001C90  505E               	movf	_linha_LCD^0,w,c
  3022  001C92  A4D8               	btfss	status,2,c
  3023  001C94  EF4E  F00E         	goto	u1321
  3024  001C98  EF50  F00E         	goto	u1320
  3025  001C9C                     u1321:
  3026  001C9C  EF54  F00E         	goto	l1857
  3027  001CA0                     u1320:
  3028  001CA0                     
  3029                           ; BSR set to: 0
  3030  001CA0  0E01               	movlw	1
  3031  001CA2  6E5E               	movwf	_linha_LCD^0,c
  3032  001CA4  EF56  F00E         	goto	l1859
  3033  001CA8                     l1857:
  3034                           
  3035                           ; BSR set to: 0
  3036  001CA8  0E00               	movlw	0
  3037  001CAA  6E5E               	movwf	_linha_LCD^0,c
  3038  001CAC                     l1859:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;LCD_16x2.c: 119:         Set_Line(linha_LCD);
  3042  001CAC  505E               	movf	_linha_LCD^0,w,c
  3043  001CAE  EC6D  F00F         	call	_Set_Line
  3044  001CB2                     l156:
  3045  001CB2  0012               	return		;funcret
  3046  001CB4                     __end_of_Write_Display:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _Write_caracter *****************
  3050 ;; Defined at:
  3051 ;;		line 124 in file "LCD_16x2.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  c               1    wreg     unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  c               1    2[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:        3 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 2
  3072 ;; This function calls:
  3073 ;;		_registra_RS
  3074 ;; This function is called by:
  3075 ;;		_Write_Display
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text18
  3080  001796                     __ptext18:
  3081                           	callstack 0
  3082  001796                     _Write_caracter:
  3083                           	callstack 26
  3084                           
  3085                           ;incstack = 0
  3086                           ;Write_caracter@c stored from wreg
  3087  001796  6E03               	movwf	Write_caracter@c^0,c
  3088  001798                     
  3089                           ;LCD_16x2.c: 125:     ((c >> 7)&(0x01)) ? (LATB7=1) : (LATB7=0);
  3090  001798  6A01               	clrf	??_Write_caracter^0,c
  3091  00179A  AE03               	btfss	Write_caracter@c^0,7,c
  3092  00179C  D001               	bra	u1165
  3093  00179E  2A01               	incf	??_Write_caracter^0,f,c
  3094  0017A0                     u1165:
  3095  0017A0  A001               	btfss	??_Write_caracter^0,0,c
  3096  0017A2  EFD5  F00B         	goto	u1171
  3097  0017A6  EFD7  F00B         	goto	u1170
  3098  0017AA                     u1171:
  3099  0017AA  EFDA  F00B         	goto	l160
  3100  0017AE                     u1170:
  3101  0017AE  8E8A               	bsf	3978,7,c	;volatile
  3102  0017B0  EFDB  F00B         	goto	l1799
  3103  0017B4                     l160:
  3104  0017B4  9E8A               	bcf	3978,7,c	;volatile
  3105  0017B6                     l1799:
  3106                           
  3107                           ;LCD_16x2.c: 126:     ((c >> 6)&(0x01)) ? (LATB6=1) : (LATB6=0);
  3108  0017B6  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3109  0017BA  0E06               	movlw	6
  3110  0017BC  6E02               	movwf	(??_Write_caracter+1)^0,c
  3111  0017BE                     u1185:
  3112  0017BE  90D8               	bcf	status,0,c
  3113  0017C0  3201               	rrcf	??_Write_caracter^0,f,c
  3114  0017C2  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3115  0017C4  EFDF  F00B         	goto	u1185
  3116  0017C8  A001               	btfss	??_Write_caracter^0,0,c
  3117  0017CA  EFE9  F00B         	goto	u1191
  3118  0017CE  EFEB  F00B         	goto	u1190
  3119  0017D2                     u1191:
  3120  0017D2  EFEE  F00B         	goto	l164
  3121  0017D6                     u1190:
  3122  0017D6  8C8A               	bsf	3978,6,c	;volatile
  3123  0017D8  EFEF  F00B         	goto	l1803
  3124  0017DC                     l164:
  3125  0017DC  9C8A               	bcf	3978,6,c	;volatile
  3126  0017DE                     l1803:
  3127                           
  3128                           ;LCD_16x2.c: 127:     ((c >> 5)&(0x01)) ? (LATB5=1) : (LATB5=0);
  3129  0017DE  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3130  0017E2  0E05               	movlw	5
  3131  0017E4  6E02               	movwf	(??_Write_caracter+1)^0,c
  3132  0017E6                     u1205:
  3133  0017E6  90D8               	bcf	status,0,c
  3134  0017E8  3201               	rrcf	??_Write_caracter^0,f,c
  3135  0017EA  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3136  0017EC  EFF3  F00B         	goto	u1205
  3137  0017F0  A001               	btfss	??_Write_caracter^0,0,c
  3138  0017F2  EFFD  F00B         	goto	u1211
  3139  0017F6  EFFF  F00B         	goto	u1210
  3140  0017FA                     u1211:
  3141  0017FA  EF02  F00C         	goto	l168
  3142  0017FE                     u1210:
  3143  0017FE  8A8A               	bsf	3978,5,c	;volatile
  3144  001800  EF03  F00C         	goto	l1807
  3145  001804                     l168:
  3146  001804  9A8A               	bcf	3978,5,c	;volatile
  3147  001806                     l1807:
  3148                           
  3149                           ;LCD_16x2.c: 128:     ((c >> 4)&(0x01)) ? (LATB4=1) : (LATB4=0);
  3150  001806  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3151  00180A  3A01               	swapf	??_Write_caracter^0,f,c
  3152  00180C  0E0F               	movlw	15
  3153  00180E  1601               	andwf	??_Write_caracter^0,f,c
  3154  001810  A001               	btfss	??_Write_caracter^0,0,c
  3155  001812  EF0D  F00C         	goto	u1221
  3156  001816  EF0F  F00C         	goto	u1220
  3157  00181A                     u1221:
  3158  00181A  EF12  F00C         	goto	l172
  3159  00181E                     u1220:
  3160  00181E  888A               	bsf	3978,4,c	;volatile
  3161  001820  EF13  F00C         	goto	l1811
  3162  001824                     l172:
  3163  001824  988A               	bcf	3978,4,c	;volatile
  3164  001826                     l1811:
  3165                           
  3166                           ;LCD_16x2.c: 129:     ((c >> 3)&(0x01)) ? (LATB3=1) : (LATB3=0);
  3167  001826  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3168  00182A  90D8               	bcf	status,0,c
  3169  00182C  3201               	rrcf	??_Write_caracter^0,f,c
  3170  00182E  90D8               	bcf	status,0,c
  3171  001830  3201               	rrcf	??_Write_caracter^0,f,c
  3172  001832  90D8               	bcf	status,0,c
  3173  001834  3201               	rrcf	??_Write_caracter^0,f,c
  3174  001836  A001               	btfss	??_Write_caracter^0,0,c
  3175  001838  EF20  F00C         	goto	u1231
  3176  00183C  EF22  F00C         	goto	u1230
  3177  001840                     u1231:
  3178  001840  EF25  F00C         	goto	l176
  3179  001844                     u1230:
  3180  001844  868A               	bsf	3978,3,c	;volatile
  3181  001846  EF26  F00C         	goto	l1815
  3182  00184A                     l176:
  3183  00184A  968A               	bcf	3978,3,c	;volatile
  3184  00184C                     l1815:
  3185                           
  3186                           ;LCD_16x2.c: 130:     ((c >> 2)&(0x01)) ? (LATB2=1) : (LATB2=0);
  3187  00184C  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3188  001850  90D8               	bcf	status,0,c
  3189  001852  3201               	rrcf	??_Write_caracter^0,f,c
  3190  001854  90D8               	bcf	status,0,c
  3191  001856  3201               	rrcf	??_Write_caracter^0,f,c
  3192  001858  A001               	btfss	??_Write_caracter^0,0,c
  3193  00185A  EF31  F00C         	goto	u1241
  3194  00185E  EF33  F00C         	goto	u1240
  3195  001862                     u1241:
  3196  001862  EF36  F00C         	goto	l180
  3197  001866                     u1240:
  3198  001866  848A               	bsf	3978,2,c	;volatile
  3199  001868  EF37  F00C         	goto	l1819
  3200  00186C                     l180:
  3201  00186C  948A               	bcf	3978,2,c	;volatile
  3202  00186E                     l1819:
  3203                           
  3204                           ;LCD_16x2.c: 131:     ((c >> 1)&(0x01)) ? (LATB1=1) : (LATB1=0);
  3205  00186E  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3206  001872  90D8               	bcf	status,0,c
  3207  001874  3201               	rrcf	??_Write_caracter^0,f,c
  3208  001876  A001               	btfss	??_Write_caracter^0,0,c
  3209  001878  EF40  F00C         	goto	u1251
  3210  00187C  EF42  F00C         	goto	u1250
  3211  001880                     u1251:
  3212  001880  EF45  F00C         	goto	l184
  3213  001884                     u1250:
  3214  001884  828A               	bsf	3978,1,c	;volatile
  3215  001886  EF46  F00C         	goto	l186
  3216  00188A                     l184:
  3217  00188A  928A               	bcf	3978,1,c	;volatile
  3218  00188C                     l186:
  3219                           
  3220                           ;LCD_16x2.c: 132:     ((c >> 0)&(0x01)) ? (LATB0=1) : (LATB0=0);
  3221  00188C  A003               	btfss	Write_caracter@c^0,0,c
  3222  00188E  EF4B  F00C         	goto	u1261
  3223  001892  EF4D  F00C         	goto	u1260
  3224  001896                     u1261:
  3225  001896  EF50  F00C         	goto	l188
  3226  00189A                     u1260:
  3227  00189A  808A               	bsf	3978,0,c	;volatile
  3228  00189C  EF51  F00C         	goto	l1825
  3229  0018A0                     l188:
  3230  0018A0  908A               	bcf	3978,0,c	;volatile
  3231  0018A2                     l1825:
  3232                           
  3233                           ;LCD_16x2.c: 133:     registra_RS();
  3234  0018A2  EC29  F010         	call	_registra_RS	;wreg free
  3235  0018A6  0012               	return		;funcret
  3236  0018A8                     __end_of_Write_caracter:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _registra_RS *****************
  3240 ;; Defined at:
  3241 ;;		line 136 in file "LCD_16x2.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_Write_caracter
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text19
  3270  002052                     __ptext19:
  3271                           	callstack 0
  3272  002052                     _registra_RS:
  3273                           	callstack 26
  3274  002052                     
  3275                           ;LCD_16x2.c: 137:     (LATC4=1);
  3276  002052  888B               	bsf	3979,4,c	;volatile
  3277  002054                     
  3278                           ;LCD_16x2.c: 138:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  3279  002054  0E05               	movlw	5
  3280  002056                     u1457:
  3281  002056  2EE8               	decfsz	wreg,f,c
  3282  002058  D7FE               	bra	u1457
  3283  00205A  F000               	nop	
  3284  00205C                     
  3285                           ;LCD_16x2.c: 139:     (LATC5=1);
  3286  00205C  8A8B               	bsf	3979,5,c	;volatile
  3287                           
  3288                           ;LCD_16x2.c: 140:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  3289  00205E  0E05               	movlw	5
  3290  002060                     u1467:
  3291  002060  2EE8               	decfsz	wreg,f,c
  3292  002062  D7FE               	bra	u1467
  3293  002064  F000               	nop	
  3294  002066                     
  3295                           ;LCD_16x2.c: 141:     (LATC5=0);
  3296  002066  9A8B               	bcf	3979,5,c	;volatile
  3297                           
  3298                           ;LCD_16x2.c: 142:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  3299  002068  0E05               	movlw	5
  3300  00206A                     u1477:
  3301  00206A  2EE8               	decfsz	wreg,f,c
  3302  00206C  D7FE               	bra	u1477
  3303  00206E  F000               	nop	
  3304  002070                     
  3305                           ;LCD_16x2.c: 143:     (LATC4=0);
  3306  002070  988B               	bcf	3979,4,c	;volatile
  3307  002072  0012               	return		;funcret
  3308  002074                     __end_of_registra_RS:
  3309                           	callstack 0
  3310                           
  3311 ;; *************** function _Set_Line *****************
  3312 ;; Defined at:
  3313 ;;		line 146 in file "LCD_16x2.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  line            1    wreg     unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  line            1    0[COMRAM] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;Total ram usage:        1 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 2
  3334 ;; This function calls:
  3335 ;;		_register_EN
  3336 ;; This function is called by:
  3337 ;;		_Write_Display
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text20
  3342  001EDA                     __ptext20:
  3343                           	callstack 0
  3344  001EDA                     _Set_Line:
  3345                           	callstack 26
  3346                           
  3347                           ;incstack = 0
  3348                           ;Set_Line@line stored from wreg
  3349  001EDA  6E01               	movwf	Set_Line@line^0,c
  3350  001EDC                     
  3351                           ;LCD_16x2.c: 147:     if (line == 0) {
  3352  001EDC  5001               	movf	Set_Line@line^0,w,c
  3353  001EDE  A4D8               	btfss	status,2,c
  3354  001EE0  EF74  F00F         	goto	u1271
  3355  001EE4  EF76  F00F         	goto	u1270
  3356  001EE8                     u1271:
  3357  001EE8  EF83  F00F         	goto	l197
  3358  001EEC                     u1270:
  3359  001EEC                     
  3360                           ;LCD_16x2.c: 148:         (LATC4=0);
  3361  001EEC  988B               	bcf	3979,4,c	;volatile
  3362                           
  3363                           ;LCD_16x2.c: 149:         (LATB7=1);
  3364  001EEE  8E8A               	bsf	3978,7,c	;volatile
  3365                           
  3366                           ;LCD_16x2.c: 150:         (LATB6=0);
  3367  001EF0  9C8A               	bcf	3978,6,c	;volatile
  3368                           
  3369                           ;LCD_16x2.c: 151:         (LATB5=0);
  3370  001EF2  9A8A               	bcf	3978,5,c	;volatile
  3371                           
  3372                           ;LCD_16x2.c: 152:         (LATB4=0);
  3373  001EF4  988A               	bcf	3978,4,c	;volatile
  3374                           
  3375                           ;LCD_16x2.c: 153:         (LATB3=0);
  3376  001EF6  968A               	bcf	3978,3,c	;volatile
  3377                           
  3378                           ;LCD_16x2.c: 154:         (LATB2=0);
  3379  001EF8  948A               	bcf	3978,2,c	;volatile
  3380                           
  3381                           ;LCD_16x2.c: 155:         (LATB1=0);
  3382  001EFA  928A               	bcf	3978,1,c	;volatile
  3383                           
  3384                           ;LCD_16x2.c: 156:         (LATB0=0);
  3385  001EFC  908A               	bcf	3978,0,c	;volatile
  3386  001EFE                     l1831:
  3387                           
  3388                           ;LCD_16x2.c: 157:         register_EN();
  3389  001EFE  EC6A  F010         	call	_register_EN	;wreg free
  3390  001F02  EF8E  F00F         	goto	l198
  3391  001F06                     l197:
  3392                           
  3393                           ;LCD_16x2.c: 160:     (LATC4=0);
  3394  001F06  988B               	bcf	3979,4,c	;volatile
  3395                           
  3396                           ;LCD_16x2.c: 161:     (LATB7=1);
  3397  001F08  8E8A               	bsf	3978,7,c	;volatile
  3398                           
  3399                           ;LCD_16x2.c: 162:     (LATB6=1);
  3400  001F0A  8C8A               	bsf	3978,6,c	;volatile
  3401                           
  3402                           ;LCD_16x2.c: 163:     (LATB5=0);
  3403  001F0C  9A8A               	bcf	3978,5,c	;volatile
  3404                           
  3405                           ;LCD_16x2.c: 164:     (LATB4=0);
  3406  001F0E  988A               	bcf	3978,4,c	;volatile
  3407                           
  3408                           ;LCD_16x2.c: 165:     (LATB3=0);
  3409  001F10  968A               	bcf	3978,3,c	;volatile
  3410                           
  3411                           ;LCD_16x2.c: 166:     (LATB2=0);
  3412  001F12  948A               	bcf	3978,2,c	;volatile
  3413                           
  3414                           ;LCD_16x2.c: 167:     (LATB1=0);
  3415  001F14  928A               	bcf	3978,1,c	;volatile
  3416                           
  3417                           ;LCD_16x2.c: 168:     (LATB0=0);
  3418  001F16  908A               	bcf	3978,0,c	;volatile
  3419  001F18  EF7F  F00F         	goto	l1831
  3420  001F1C                     l198:
  3421  001F1C  0012               	return		;funcret
  3422  001F1E                     __end_of_Set_Line:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _initialize_LCD *****************
  3426 ;; Defined at:
  3427 ;;		line 31 in file "LCD_16x2.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        2 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 3
  3448 ;; This function calls:
  3449 ;;		_clear_Display
  3450 ;;		_display_Off
  3451 ;;		_display_On
  3452 ;;		_entry_mode_Set
  3453 ;;		_function_Set
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text21
  3460  001D8A                     __ptext21:
  3461                           	callstack 0
  3462  001D8A                     _initialize_LCD:
  3463                           	callstack 27
  3464  001D8A                     
  3465                           ;LCD_16x2.c: 32:     _delay((unsigned long)((16)*(64000000/4000.0)));
  3466  001D8A  0E02               	movlw	2
  3467  001D8C  6E03               	movwf	(??_initialize_LCD+1)^0,c
  3468  001D8E  0E4D               	movlw	77
  3469  001D90  6E02               	movwf	??_initialize_LCD^0,c
  3470  001D92  0E74               	movlw	116
  3471  001D94                     u1487:
  3472  001D94  2EE8               	decfsz	wreg,f,c
  3473  001D96  D7FE               	bra	u1487
  3474  001D98  2E02               	decfsz	??_initialize_LCD^0,f,c
  3475  001D9A  D7FC               	bra	u1487
  3476  001D9C  2E03               	decfsz	(??_initialize_LCD+1)^0,f,c
  3477  001D9E  D7FA               	bra	u1487
  3478  001DA0  D000               	nop2	
  3479  001DA2                     
  3480                           ;LCD_16x2.c: 33:     function_Set();
  3481  001DA2  EC3A  F010         	call	_function_Set	;wreg free
  3482  001DA6                     
  3483                           ;LCD_16x2.c: 34:     _delay((unsigned long)((5)*(64000000/4000.0)));
  3484  001DA6  0E68               	movlw	104
  3485  001DA8  6E02               	movwf	??_initialize_LCD^0,c
  3486  001DAA  0EE4               	movlw	228
  3487  001DAC                     u1497:
  3488  001DAC  2EE8               	decfsz	wreg,f,c
  3489  001DAE  D7FE               	bra	u1497
  3490  001DB0  2E02               	decfsz	??_initialize_LCD^0,f,c
  3491  001DB2  D7FC               	bra	u1497
  3492  001DB4  D000               	nop2	
  3493                           
  3494                           ;LCD_16x2.c: 35:     function_Set();
  3495  001DB6  EC3A  F010         	call	_function_Set	;wreg free
  3496  001DBA                     
  3497                           ;LCD_16x2.c: 36:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3498  001DBA  0E09               	movlw	9
  3499  001DBC  6E03               	movwf	(??_initialize_LCD+1)^0,c
  3500  001DBE  0E1E               	movlw	30
  3501  001DC0  6E02               	movwf	??_initialize_LCD^0,c
  3502  001DC2  0EE4               	movlw	228
  3503  001DC4                     u1507:
  3504  001DC4  2EE8               	decfsz	wreg,f,c
  3505  001DC6  D7FE               	bra	u1507
  3506  001DC8  2E02               	decfsz	??_initialize_LCD^0,f,c
  3507  001DCA  D7FC               	bra	u1507
  3508  001DCC  2E03               	decfsz	(??_initialize_LCD+1)^0,f,c
  3509  001DCE  D7FA               	bra	u1507
  3510  001DD0  D000               	nop2	
  3511  001DD2                     
  3512                           ;LCD_16x2.c: 37:     function_Set();
  3513  001DD2  EC3A  F010         	call	_function_Set	;wreg free
  3514  001DD6                     
  3515                           ;LCD_16x2.c: 38:     function_Set();
  3516  001DD6  EC3A  F010         	call	_function_Set	;wreg free
  3517  001DDA                     
  3518                           ;LCD_16x2.c: 39:     display_Off();
  3519  001DDA  EC5E  F010         	call	_display_Off	;wreg free
  3520  001DDE                     
  3521                           ;LCD_16x2.c: 40:     clear_Display();
  3522  001DDE  EC16  F010         	call	_clear_Display	;wreg free
  3523  001DE2                     
  3524                           ;LCD_16x2.c: 41:     entry_mode_Set();
  3525  001DE2  EC46  F010         	call	_entry_mode_Set	;wreg free
  3526  001DE6                     
  3527                           ;LCD_16x2.c: 42:     display_On();
  3528  001DE6  EC52  F010         	call	_display_On	;wreg free
  3529  001DEA  0012               	return		;funcret
  3530  001DEC                     __end_of_initialize_LCD:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _function_Set *****************
  3534 ;; Defined at:
  3535 ;;		line 45 in file "LCD_16x2.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 2
  3556 ;; This function calls:
  3557 ;;		_register_EN
  3558 ;; This function is called by:
  3559 ;;		_initialize_LCD
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text22
  3564  002074                     __ptext22:
  3565                           	callstack 0
  3566  002074                     _function_Set:
  3567                           	callstack 27
  3568  002074                     
  3569                           ;LCD_16x2.c: 46:     (LATC4=0);
  3570  002074  988B               	bcf	3979,4,c	;volatile
  3571                           
  3572                           ;LCD_16x2.c: 47:     (LATB7=0);
  3573  002076  9E8A               	bcf	3978,7,c	;volatile
  3574                           
  3575                           ;LCD_16x2.c: 48:     (LATB6=0);
  3576  002078  9C8A               	bcf	3978,6,c	;volatile
  3577                           
  3578                           ;LCD_16x2.c: 49:     (LATB5=1);
  3579  00207A  8A8A               	bsf	3978,5,c	;volatile
  3580                           
  3581                           ;LCD_16x2.c: 50:     (LATB4=1);
  3582  00207C  888A               	bsf	3978,4,c	;volatile
  3583                           
  3584                           ;LCD_16x2.c: 51:     (LATB3=1);
  3585  00207E  868A               	bsf	3978,3,c	;volatile
  3586                           
  3587                           ;LCD_16x2.c: 52:     (LATB2=0);
  3588  002080  948A               	bcf	3978,2,c	;volatile
  3589                           
  3590                           ;LCD_16x2.c: 53:     (LATB1=0);
  3591  002082  928A               	bcf	3978,1,c	;volatile
  3592                           
  3593                           ;LCD_16x2.c: 54:     (LATB0=0);
  3594  002084  908A               	bcf	3978,0,c	;volatile
  3595  002086                     
  3596                           ;LCD_16x2.c: 55:     register_EN();
  3597  002086  EC6A  F010         	call	_register_EN	;wreg free
  3598  00208A  0012               	return		;funcret
  3599  00208C                     __end_of_function_Set:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _entry_mode_Set *****************
  3603 ;; Defined at:
  3604 ;;		line 98 in file "LCD_16x2.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 2
  3625 ;; This function calls:
  3626 ;;		_register_EN
  3627 ;; This function is called by:
  3628 ;;		_initialize_LCD
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text23
  3633  00208C                     __ptext23:
  3634                           	callstack 0
  3635  00208C                     _entry_mode_Set:
  3636                           	callstack 27
  3637  00208C                     
  3638                           ;LCD_16x2.c: 99:     (LATC4=0);
  3639  00208C  988B               	bcf	3979,4,c	;volatile
  3640                           
  3641                           ;LCD_16x2.c: 100:     (LATB7=0);
  3642  00208E  9E8A               	bcf	3978,7,c	;volatile
  3643                           
  3644                           ;LCD_16x2.c: 101:     (LATB6=0);
  3645  002090  9C8A               	bcf	3978,6,c	;volatile
  3646                           
  3647                           ;LCD_16x2.c: 102:     (LATB5=0);
  3648  002092  9A8A               	bcf	3978,5,c	;volatile
  3649                           
  3650                           ;LCD_16x2.c: 103:     (LATB4=0);
  3651  002094  988A               	bcf	3978,4,c	;volatile
  3652                           
  3653                           ;LCD_16x2.c: 104:     (LATB3=0);
  3654  002096  968A               	bcf	3978,3,c	;volatile
  3655                           
  3656                           ;LCD_16x2.c: 105:     (LATB2=1);
  3657  002098  848A               	bsf	3978,2,c	;volatile
  3658                           
  3659                           ;LCD_16x2.c: 106:     (LATB1=1);
  3660  00209A  828A               	bsf	3978,1,c	;volatile
  3661                           
  3662                           ;LCD_16x2.c: 107:     (LATB0=0);
  3663  00209C  908A               	bcf	3978,0,c	;volatile
  3664  00209E                     
  3665                           ;LCD_16x2.c: 108:     register_EN();
  3666  00209E  EC6A  F010         	call	_register_EN	;wreg free
  3667  0020A2  0012               	return		;funcret
  3668  0020A4                     __end_of_entry_mode_Set:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _display_On *****************
  3672 ;; Defined at:
  3673 ;;		line 85 in file "LCD_16x2.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 2
  3694 ;; This function calls:
  3695 ;;		_register_EN
  3696 ;; This function is called by:
  3697 ;;		_initialize_LCD
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text24
  3702  0020A4                     __ptext24:
  3703                           	callstack 0
  3704  0020A4                     _display_On:
  3705                           	callstack 27
  3706  0020A4                     
  3707                           ;LCD_16x2.c: 86:     (LATC4=0);
  3708  0020A4  988B               	bcf	3979,4,c	;volatile
  3709                           
  3710                           ;LCD_16x2.c: 87:     (LATB7=0);
  3711  0020A6  9E8A               	bcf	3978,7,c	;volatile
  3712                           
  3713                           ;LCD_16x2.c: 88:     (LATB6=0);
  3714  0020A8  9C8A               	bcf	3978,6,c	;volatile
  3715                           
  3716                           ;LCD_16x2.c: 89:     (LATB5=0);
  3717  0020AA  9A8A               	bcf	3978,5,c	;volatile
  3718                           
  3719                           ;LCD_16x2.c: 90:     (LATB4=0);
  3720  0020AC  988A               	bcf	3978,4,c	;volatile
  3721                           
  3722                           ;LCD_16x2.c: 91:     (LATB3=1);
  3723  0020AE  868A               	bsf	3978,3,c	;volatile
  3724                           
  3725                           ;LCD_16x2.c: 92:     (LATB2=1);
  3726  0020B0  848A               	bsf	3978,2,c	;volatile
  3727                           
  3728                           ;LCD_16x2.c: 93:     (LATB1=1);
  3729  0020B2  828A               	bsf	3978,1,c	;volatile
  3730                           
  3731                           ;LCD_16x2.c: 94:     (LATB0=1);
  3732  0020B4  808A               	bsf	3978,0,c	;volatile
  3733  0020B6                     
  3734                           ;LCD_16x2.c: 95:     register_EN();
  3735  0020B6  EC6A  F010         	call	_register_EN	;wreg free
  3736  0020BA  0012               	return		;funcret
  3737  0020BC                     __end_of_display_On:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _display_Off *****************
  3741 ;; Defined at:
  3742 ;;		line 72 in file "LCD_16x2.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;Total ram usage:        0 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 2
  3763 ;; This function calls:
  3764 ;;		_register_EN
  3765 ;; This function is called by:
  3766 ;;		_initialize_LCD
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text25
  3771  0020BC                     __ptext25:
  3772                           	callstack 0
  3773  0020BC                     _display_Off:
  3774                           	callstack 27
  3775  0020BC                     
  3776                           ;LCD_16x2.c: 73:     (LATC4=0);
  3777  0020BC  988B               	bcf	3979,4,c	;volatile
  3778                           
  3779                           ;LCD_16x2.c: 74:     (LATB7=0);
  3780  0020BE  9E8A               	bcf	3978,7,c	;volatile
  3781                           
  3782                           ;LCD_16x2.c: 75:     (LATB6=0);
  3783  0020C0  9C8A               	bcf	3978,6,c	;volatile
  3784                           
  3785                           ;LCD_16x2.c: 76:     (LATB5=0);
  3786  0020C2  9A8A               	bcf	3978,5,c	;volatile
  3787                           
  3788                           ;LCD_16x2.c: 77:     (LATB4=0);
  3789  0020C4  988A               	bcf	3978,4,c	;volatile
  3790                           
  3791                           ;LCD_16x2.c: 78:     (LATB3=1);
  3792  0020C6  868A               	bsf	3978,3,c	;volatile
  3793                           
  3794                           ;LCD_16x2.c: 79:     (LATB2=0);
  3795  0020C8  948A               	bcf	3978,2,c	;volatile
  3796                           
  3797                           ;LCD_16x2.c: 80:     (LATB1=0);
  3798  0020CA  928A               	bcf	3978,1,c	;volatile
  3799                           
  3800                           ;LCD_16x2.c: 81:     (LATB0=0);
  3801  0020CC  908A               	bcf	3978,0,c	;volatile
  3802  0020CE                     
  3803                           ;LCD_16x2.c: 82:     register_EN();
  3804  0020CE  EC6A  F010         	call	_register_EN	;wreg free
  3805  0020D2  0012               	return		;funcret
  3806  0020D4                     __end_of_display_Off:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _clear_Display *****************
  3810 ;; Defined at:
  3811 ;;		line 58 in file "LCD_16x2.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        1 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 2
  3832 ;; This function calls:
  3833 ;;		_register_EN
  3834 ;; This function is called by:
  3835 ;;		_initialize_LCD
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text26
  3840  00202C                     __ptext26:
  3841                           	callstack 0
  3842  00202C                     _clear_Display:
  3843                           	callstack 27
  3844  00202C                     
  3845                           ;LCD_16x2.c: 59:     (LATC4=0);
  3846  00202C  988B               	bcf	3979,4,c	;volatile
  3847                           
  3848                           ;LCD_16x2.c: 60:     (LATB7=0);
  3849  00202E  9E8A               	bcf	3978,7,c	;volatile
  3850                           
  3851                           ;LCD_16x2.c: 61:     (LATB6=0);
  3852  002030  9C8A               	bcf	3978,6,c	;volatile
  3853                           
  3854                           ;LCD_16x2.c: 62:     (LATB5=0);
  3855  002032  9A8A               	bcf	3978,5,c	;volatile
  3856                           
  3857                           ;LCD_16x2.c: 63:     (LATB4=0);
  3858  002034  988A               	bcf	3978,4,c	;volatile
  3859                           
  3860                           ;LCD_16x2.c: 64:     (LATB3=0);
  3861  002036  968A               	bcf	3978,3,c	;volatile
  3862                           
  3863                           ;LCD_16x2.c: 65:     (LATB2=0);
  3864  002038  948A               	bcf	3978,2,c	;volatile
  3865                           
  3866                           ;LCD_16x2.c: 66:     (LATB1=0);
  3867  00203A  928A               	bcf	3978,1,c	;volatile
  3868                           
  3869                           ;LCD_16x2.c: 67:     (LATB0=1);
  3870  00203C  808A               	bsf	3978,0,c	;volatile
  3871  00203E                     
  3872                           ;LCD_16x2.c: 68:     register_EN();
  3873  00203E  EC6A  F010         	call	_register_EN	;wreg free
  3874  002042                     
  3875                           ;LCD_16x2.c: 69:     _delay((unsigned long)((1500)*(64000000/4000000.0)));
  3876  002042  0E20               	movlw	32
  3877  002044  6E01               	movwf	??_clear_Display^0,c
  3878  002046  0E2A               	movlw	42
  3879  002048                     u1517:
  3880  002048  2EE8               	decfsz	wreg,f,c
  3881  00204A  D7FE               	bra	u1517
  3882  00204C  2E01               	decfsz	??_clear_Display^0,f,c
  3883  00204E  D7FC               	bra	u1517
  3884  002050  0012               	return		;funcret
  3885  002052                     __end_of_clear_Display:
  3886                           	callstack 0
  3887                           
  3888 ;; *************** function _register_EN *****************
  3889 ;; Defined at:
  3890 ;;		line 24 in file "LCD_16x2.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_function_Set
  3915 ;;		_clear_Display
  3916 ;;		_display_Off
  3917 ;;		_display_On
  3918 ;;		_entry_mode_Set
  3919 ;;		_Set_Line
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           	psect	text27
  3924  0020D4                     __ptext27:
  3925                           	callstack 0
  3926  0020D4                     _register_EN:
  3927                           	callstack 26
  3928  0020D4                     
  3929                           ;LCD_16x2.c: 25:     (LATC5=1);
  3930  0020D4  8A8B               	bsf	3979,5,c	;volatile
  3931  0020D6                     
  3932                           ;LCD_16x2.c: 26:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  3933  0020D6  0E05               	movlw	5
  3934  0020D8                     u1527:
  3935  0020D8  2EE8               	decfsz	wreg,f,c
  3936  0020DA  D7FE               	bra	u1527
  3937  0020DC  F000               	nop	
  3938  0020DE                     
  3939                           ;LCD_16x2.c: 27:     (LATC5=0);
  3940  0020DE  9A8B               	bcf	3979,5,c	;volatile
  3941                           
  3942                           ;LCD_16x2.c: 28:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  3943  0020E0  0ED5               	movlw	213
  3944  0020E2                     u1537:
  3945  0020E2  2EE8               	decfsz	wreg,f,c
  3946  0020E4  D7FE               	bra	u1537
  3947  0020E6  F000               	nop	
  3948  0020E8  0012               	return		;funcret
  3949  0020EA                     __end_of_register_EN:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function _TaskAD *****************
  3953 ;; Defined at:
  3954 ;;		line 19 in file "ADInput.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, status,2, status,0, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;Total ram usage:        0 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 2
  3975 ;; This function calls:
  3976 ;;		_ADC_Read
  3977 ;;		___lwdiv
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text28
  3984  001DEC                     __ptext28:
  3985                           	callstack 0
  3986  001DEC                     _TaskAD:
  3987                           	callstack 28
  3988  001DEC                     
  3989                           ;ADInput.c: 20:     soma += ADC_Read();
  3990  001DEC  ECEA  F00F         	call	_ADC_Read	;wreg free
  3991  001DF0  5001               	movf	?_ADC_Read^0,w,c
  3992  001DF2  0100               	movlb	0	; () banked
  3993  001DF4  276A               	addwf	_soma& (0+255),f,b
  3994  001DF6  5002               	movf	(?_ADC_Read+1)^0,w,c
  3995  001DF8  236B               	addwfc	(_soma+1)& (0+255),f,b
  3996  001DFA                     
  3997                           ; BSR set to: 0
  3998                           ;ADInput.c: 21:     contador_media++;
  3999  001DFA  4B68               	infsnz	_contador_media& (0+255),f,b
  4000  001DFC  2B69               	incf	(_contador_media+1)& (0+255),f,b
  4001  001DFE                     
  4002                           ; BSR set to: 0
  4003                           ;ADInput.c: 22:     if (contador_media>=div_media) {
  4004  001DFE  5169               	movf	(_contador_media+1)& (0+255),w,b
  4005  001E00  E109               	bnz	u1410
  4006  001E02  0E40               	movlw	64
  4007  001E04  5D68               	subwf	_contador_media& (0+255),w,b
  4008  001E06  A0D8               	btfss	status,0,c
  4009  001E08  EF08  F00F         	goto	u1411
  4010  001E0C  EF0A  F00F         	goto	u1410
  4011  001E10                     u1411:
  4012  001E10  EF21  F00F         	goto	l233
  4013  001E14                     u1410:
  4014  001E14                     
  4015                           ; BSR set to: 0
  4016                           ;ADInput.c: 23:         media = soma / contador_media;
  4017  001E14  C06A  F001         	movff	_soma,___lwdiv@dividend
  4018  001E18  C06B  F002         	movff	_soma+1,___lwdiv@dividend+1
  4019  001E1C  C068  F003         	movff	_contador_media,___lwdiv@divisor
  4020  001E20  C069  F004         	movff	_contador_media+1,___lwdiv@divisor+1
  4021  001E24  EC5A  F00E         	call	___lwdiv	;wreg free
  4022  001E28  C001  F06C         	movff	?___lwdiv,_media
  4023  001E2C  C002  F06D         	movff	?___lwdiv+1,_media+1
  4024  001E30                     
  4025                           ;ADInput.c: 24:         contador_media = 0;
  4026  001E30  0E00               	movlw	0
  4027  001E32  0100               	movlb	0	; () banked
  4028  001E34  6F69               	movwf	(_contador_media+1)& (0+255),b
  4029  001E36  0E00               	movlw	0
  4030  001E38  6F68               	movwf	_contador_media& (0+255),b
  4031  001E3A                     
  4032                           ; BSR set to: 0
  4033                           ;ADInput.c: 25:         soma=0;
  4034  001E3A  0E00               	movlw	0
  4035  001E3C  6F6B               	movwf	(_soma+1)& (0+255),b
  4036  001E3E  0E00               	movlw	0
  4037  001E40  6F6A               	movwf	_soma& (0+255),b
  4038  001E42                     l233:
  4039                           
  4040                           ; BSR set to: 0
  4041  001E42  0012               	return		;funcret
  4042  001E44                     __end_of_TaskAD:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function ___lwdiv *****************
  4046 ;; Defined at:
  4047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  dividend        2    0[COMRAM] unsigned int 
  4050 ;;  divisor         2    2[COMRAM] unsigned int 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  quotient        2    4[COMRAM] unsigned int 
  4053 ;;  counter         1    6[COMRAM] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  2    0[COMRAM] unsigned int 
  4056 ;; Registers used:
  4057 ;;		wreg, status,2, status,0
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;Total ram usage:        7 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_TaskAD
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text29
  4078  001CB4                     __ptext29:
  4079                           	callstack 0
  4080  001CB4                     ___lwdiv:
  4081                           	callstack 28
  4082  001CB4  0E00               	movlw	0
  4083  001CB6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  4084  001CB8  0E00               	movlw	0
  4085  001CBA  6E05               	movwf	___lwdiv@quotient^0,c
  4086  001CBC  5003               	movf	___lwdiv@divisor^0,w,c
  4087  001CBE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4088  001CC0  B4D8               	btfsc	status,2,c
  4089  001CC2  EF65  F00E         	goto	u1381
  4090  001CC6  EF67  F00E         	goto	u1380
  4091  001CCA                     u1381:
  4092  001CCA  EF8F  F00E         	goto	l730
  4093  001CCE                     u1380:
  4094  001CCE  0E01               	movlw	1
  4095  001CD0  6E07               	movwf	___lwdiv@counter^0,c
  4096  001CD2  EF6F  F00E         	goto	l1935
  4097  001CD6                     l1933:
  4098  001CD6  90D8               	bcf	status,0,c
  4099  001CD8  3603               	rlcf	___lwdiv@divisor^0,f,c
  4100  001CDA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4101  001CDC  2A07               	incf	___lwdiv@counter^0,f,c
  4102  001CDE                     l1935:
  4103  001CDE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  4104  001CE0  EF74  F00E         	goto	u1391
  4105  001CE4  EF76  F00E         	goto	u1390
  4106  001CE8                     u1391:
  4107  001CE8  EF6B  F00E         	goto	l1933
  4108  001CEC                     u1390:
  4109  001CEC                     l1937:
  4110  001CEC  90D8               	bcf	status,0,c
  4111  001CEE  3605               	rlcf	___lwdiv@quotient^0,f,c
  4112  001CF0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4113  001CF2  5003               	movf	___lwdiv@divisor^0,w,c
  4114  001CF4  5C01               	subwf	___lwdiv@dividend^0,w,c
  4115  001CF6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4116  001CF8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4117  001CFA  A0D8               	btfss	status,0,c
  4118  001CFC  EF82  F00E         	goto	u1401
  4119  001D00  EF84  F00E         	goto	u1400
  4120  001D04                     u1401:
  4121  001D04  EF89  F00E         	goto	l1945
  4122  001D08                     u1400:
  4123  001D08  5003               	movf	___lwdiv@divisor^0,w,c
  4124  001D0A  5E01               	subwf	___lwdiv@dividend^0,f,c
  4125  001D0C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  4126  001D0E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4127  001D10  8005               	bsf	___lwdiv@quotient^0,0,c
  4128  001D12                     l1945:
  4129  001D12  90D8               	bcf	status,0,c
  4130  001D14  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4131  001D16  3203               	rrcf	___lwdiv@divisor^0,f,c
  4132  001D18  2E07               	decfsz	___lwdiv@counter^0,f,c
  4133  001D1A  EF76  F00E         	goto	l1937
  4134  001D1E                     l730:
  4135  001D1E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4136  001D22  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4137  001D26  0012               	return		;funcret
  4138  001D28                     __end_of___lwdiv:
  4139                           	callstack 0
  4140                           
  4141 ;; *************** function _ADC_Read *****************
  4142 ;; Defined at:
  4143 ;;		line 5 in file "ADInput.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  digital         2    4[COMRAM] int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[COMRAM] int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 1
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_TaskAD
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text30
  4172  001FD4                     __ptext30:
  4173                           	callstack 0
  4174  001FD4                     _ADC_Read:
  4175                           	callstack 28
  4176  001FD4                     
  4177                           ;ADInput.c: 6:     int digital;;ADInput.c: 8:     ADCON0bits.ADON=1;
  4178  001FD4  80C2               	bsf	194,0,c	;volatile
  4179                           
  4180                           ;ADInput.c: 9:     ADCON0bits.GO=1;
  4181  001FD6  82C2               	bsf	194,1,c	;volatile
  4182  001FD8                     l226:
  4183  001FD8  B2C2               	btfsc	194,1,c	;volatile
  4184  001FDA  EFF1  F00F         	goto	u1371
  4185  001FDE  EFF3  F00F         	goto	u1370
  4186  001FE2                     u1371:
  4187  001FE2  EFEC  F00F         	goto	l226
  4188  001FE6                     u1370:
  4189  001FE6                     
  4190                           ;ADInput.c: 14:     digital = (ADRESH * 256) | (ADRESL);
  4191  001FE6  50C3               	movf	195,w,c	;volatile
  4192  001FE8  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  4193  001FEC  6A04               	clrf	(??_ADC_Read+1)^0,c
  4194  001FEE  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  4195  001FF2  6A03               	clrf	??_ADC_Read^0,c
  4196  001FF4  1003               	iorwf	??_ADC_Read^0,w,c
  4197  001FF6  6E05               	movwf	ADC_Read@digital^0,c
  4198  001FF8  5004               	movf	(??_ADC_Read+1)^0,w,c
  4199  001FFA  6E06               	movwf	(ADC_Read@digital+1)^0,c
  4200  001FFC                     
  4201                           ;ADInput.c: 15:     return (digital);
  4202  001FFC  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  4203  002000  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4204  002004  0012               	return		;funcret
  4205  002006                     __end_of_ADC_Read:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _Init_Timers *****************
  4209 ;; Defined at:
  4210 ;;		line 29 in file "main.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text31
  4239  0020FE                     __ptext31:
  4240                           	callstack 0
  4241  0020FE                     _Init_Timers:
  4242                           	callstack 29
  4243  0020FE                     
  4244                           ;main.c: 31:     OSCCON = 0b11111100;
  4245  0020FE  0EFC               	movlw	252
  4246  002100  6ED3               	movwf	211,c	;volatile
  4247  002102                     
  4248                           ;main.c: 32:     OSCTUNEbits.PLLEN = 1;
  4249  002102  8C9B               	bsf	155,6,c	;volatile
  4250                           
  4251                           ;main.c: 36:     T0CON = 0b11000101;
  4252  002104  0EC5               	movlw	197
  4253  002106  6ED5               	movwf	213,c	;volatile
  4254  002108                     
  4255                           ;main.c: 37:     TMR0IE = 1;
  4256  002108  8AF2               	bsf	4082,5,c	;volatile
  4257  00210A                     
  4258                           ;main.c: 39:     PEIE = 1;
  4259  00210A  8CF2               	bsf	4082,6,c	;volatile
  4260  00210C                     
  4261                           ;main.c: 41:     GIE = 1;
  4262  00210C  8EF2               	bsf	4082,7,c	;volatile
  4263  00210E  0012               	return		;funcret
  4264  002110                     __end_of_Init_Timers:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _interruptsManager *****************
  4268 ;; Defined at:
  4269 ;;		line 17 in file "main.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		Interrupt level 2
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	intcode
  4297  000008                     __pintcode:
  4298                           	callstack 0
  4299  000008                     _interruptsManager:
  4300                           	callstack 21
  4301                           
  4302                           ;incstack = 0
  4303  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4304  00000A                     
  4305                           ;main.c: 19:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  4306  00000A  AAF2               	btfss	242,5,c	;volatile
  4307  00000C  EF0A  F000         	goto	i2u142_41
  4308  000010  EF0C  F000         	goto	i2u142_40
  4309  000014                     i2u142_41:
  4310  000014  EF1F  F000         	goto	i2l62
  4311  000018                     i2u142_40:
  4312  000018  A4F2               	btfss	242,2,c	;volatile
  4313  00001A  EF11  F000         	goto	i2u143_41
  4314  00001E  EF13  F000         	goto	i2u143_40
  4315  000022                     i2u143_41:
  4316  000022  EF1F  F000         	goto	i2l62
  4317  000026                     i2u143_40:
  4318  000026                     
  4319                           ;main.c: 20:         TMR0 = 6;
  4320  000026  0E00               	movlw	0
  4321  000028  6ED7               	movwf	215,c	;volatile
  4322  00002A  0E06               	movlw	6
  4323  00002C  6ED6               	movwf	214,c	;volatile
  4324  00002E                     
  4325                           ;main.c: 21:         INTCONbits.TMR0IF = 0;
  4326  00002E  94F2               	bcf	242,2,c	;volatile
  4327  000030                     
  4328                           ;main.c: 22:         counter_5ms++;
  4329  000030  0100               	movlb	0	; () banked
  4330  000032  4B76               	infsnz	_counter_5ms& (0+255),f,b
  4331  000034  2B77               	incf	(_counter_5ms+1)& (0+255),f,b
  4332  000036                     
  4333                           ; BSR set to: 0
  4334                           ;main.c: 23:         counter_50ms++;
  4335  000036  4B74               	infsnz	_counter_50ms& (0+255),f,b
  4336  000038  2B75               	incf	(_counter_50ms+1)& (0+255),f,b
  4337  00003A                     
  4338                           ; BSR set to: 0
  4339                           ;main.c: 24:         contador++;
  4340  00003A  4B70               	infsnz	_contador& (0+255),f,b
  4341  00003C  2B71               	incf	(_contador+1)& (0+255),f,b
  4342  00003E                     i2l62:
  4343  00003E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4344  000040  0011               	retfie		f
  4345  000042                     __end_of_interruptsManager:
  4346                           	callstack 0
  4347                           
  4348                           	psect	rparam
  4349  0000                     
  4350                           	psect	temp
  4351  00005F                     btemp:
  4352                           	callstack 0
  4353  00005F                     	ds	1
  4354  0000                     int$flags	set	btemp
  4355  0000                     wtemp8	set	btemp+1
  4356  0000                     ttemp5	set	btemp+1
  4357  0000                     ttemp6	set	btemp+4
  4358  0000                     ttemp7	set	btemp+8
  4359                           
  4360                           	psect	idloc
  4361                           
  4362                           ;Config register IDLOC0 @ 0x200000
  4363                           ;	unspecified, using default values
  4364  200000                     	org	2097152
  4365  200000  FF                 	db	255
  4366                           
  4367                           ;Config register IDLOC1 @ 0x200001
  4368                           ;	unspecified, using default values
  4369  200001                     	org	2097153
  4370  200001  FF                 	db	255
  4371                           
  4372                           ;Config register IDLOC2 @ 0x200002
  4373                           ;	unspecified, using default values
  4374  200002                     	org	2097154
  4375  200002  FF                 	db	255
  4376                           
  4377                           ;Config register IDLOC3 @ 0x200003
  4378                           ;	unspecified, using default values
  4379  200003                     	org	2097155
  4380  200003  FF                 	db	255
  4381                           
  4382                           ;Config register IDLOC4 @ 0x200004
  4383                           ;	unspecified, using default values
  4384  200004                     	org	2097156
  4385  200004  FF                 	db	255
  4386                           
  4387                           ;Config register IDLOC5 @ 0x200005
  4388                           ;	unspecified, using default values
  4389  200005                     	org	2097157
  4390  200005  FF                 	db	255
  4391                           
  4392                           ;Config register IDLOC6 @ 0x200006
  4393                           ;	unspecified, using default values
  4394  200006                     	org	2097158
  4395  200006  FF                 	db	255
  4396                           
  4397                           ;Config register IDLOC7 @ 0x200007
  4398                           ;	unspecified, using default values
  4399  200007                     	org	2097159
  4400  200007  FF                 	db	255
  4401                           
  4402                           	psect	config
  4403                           
  4404                           ; Padding undefined space
  4405  300000                     	org	3145728
  4406  300000  FF                 	db	255
  4407                           
  4408                           ;Config register CONFIG1H @ 0x300001
  4409                           ;	Oscillator Selection bits
  4410                           ;	FOSC = INTIO67, Internal oscillator block
  4411                           ;	4X PLL Enable
  4412                           ;	PLLCFG = ON, Oscillator multiplied by 4
  4413                           ;	Primary clock enable bit
  4414                           ;	PRICLKEN = ON, Primary clock is always enabled
  4415                           ;	Fail-Safe Clock Monitor Enable bit
  4416                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4417                           ;	Internal/External Oscillator Switchover bit
  4418                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4419  300001                     	org	3145729
  4420  300001  38                 	db	56
  4421                           
  4422                           ;Config register CONFIG2L @ 0x300002
  4423                           ;	Power-up Timer Enable bit
  4424                           ;	PWRTEN = OFF, Power up timer disabled
  4425                           ;	Brown-out Reset Enable bits
  4426                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4427                           ;	Brown Out Reset Voltage bits
  4428                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4429  300002                     	org	3145730
  4430  300002  1F                 	db	31
  4431                           
  4432                           ;Config register CONFIG2H @ 0x300003
  4433                           ;	Watchdog Timer Enable bits
  4434                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4435                           ;	Watchdog Timer Postscale Select bits
  4436                           ;	WDTPS = 32768, 1:32768
  4437  300003                     	org	3145731
  4438  300003  3C                 	db	60
  4439                           
  4440                           ; Padding undefined space
  4441  300004                     	org	3145732
  4442  300004  FF                 	db	255
  4443                           
  4444                           ;Config register CONFIG3H @ 0x300005
  4445                           ;	CCP2 MUX bit
  4446                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4447                           ;	PORTB A/D Enable bit
  4448                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4449                           ;	P3A/CCP3 Mux bit
  4450                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4451                           ;	HFINTOSC Fast Start-up
  4452                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4453                           ;	Timer3 Clock input mux bit
  4454                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4455                           ;	ECCP2 B output mux bit
  4456                           ;	P2BMX = PORTD2, P2B is on RD2
  4457                           ;	MCLR Pin Enable bit
  4458                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4459  300005                     	org	3145733
  4460  300005  BF                 	db	191
  4461                           
  4462                           ;Config register CONFIG4L @ 0x300006
  4463                           ;	Stack Full/Underflow Reset Enable bit
  4464                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4465                           ;	Single-Supply ICSP Enable bit
  4466                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4467                           ;	Extended Instruction Set Enable bit
  4468                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4469                           ;	Background Debug
  4470                           ;	DEBUG = 0x1, unprogrammed default
  4471  300006                     	org	3145734
  4472  300006  85                 	db	133
  4473                           
  4474                           ; Padding undefined space
  4475  300007                     	org	3145735
  4476  300007  FF                 	db	255
  4477                           
  4478                           ;Config register CONFIG5L @ 0x300008
  4479                           ;	Code Protection Block 0
  4480                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4481                           ;	Code Protection Block 1
  4482                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4483                           ;	Code Protection Block 2
  4484                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4485                           ;	Code Protection Block 3
  4486                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4487  300008                     	org	3145736
  4488  300008  0F                 	db	15
  4489                           
  4490                           ;Config register CONFIG5H @ 0x300009
  4491                           ;	Boot Block Code Protection bit
  4492                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4493                           ;	Data EEPROM Code Protection bit
  4494                           ;	CPD = OFF, Data EEPROM not code-protected
  4495  300009                     	org	3145737
  4496  300009  C0                 	db	192
  4497                           
  4498                           ;Config register CONFIG6L @ 0x30000A
  4499                           ;	Write Protection Block 0
  4500                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4501                           ;	Write Protection Block 1
  4502                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4503                           ;	Write Protection Block 2
  4504                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4505                           ;	Write Protection Block 3
  4506                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  4507  30000A                     	org	3145738
  4508  30000A  0F                 	db	15
  4509                           
  4510                           ;Config register CONFIG6H @ 0x30000B
  4511                           ;	Configuration Register Write Protection bit
  4512                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4513                           ;	Boot Block Write Protection bit
  4514                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4515                           ;	Data EEPROM Write Protection bit
  4516                           ;	WRTD = OFF, Data EEPROM not write-protected
  4517  30000B                     	org	3145739
  4518  30000B  E0                 	db	224
  4519                           
  4520                           ;Config register CONFIG7L @ 0x30000C
  4521                           ;	Table Read Protection Block 0
  4522                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4523                           ;	Table Read Protection Block 1
  4524                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4525                           ;	Table Read Protection Block 2
  4526                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4527                           ;	Table Read Protection Block 3
  4528                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4529  30000C                     	org	3145740
  4530  30000C  0F                 	db	15
  4531                           
  4532                           ;Config register CONFIG7H @ 0x30000D
  4533                           ;	Boot Block Table Read Protection bit
  4534                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4535  30000D                     	org	3145741
  4536  30000D  40                 	db	64
  4537                           tosu	equ	0xFFF
  4538                           tosh	equ	0xFFE
  4539                           tosl	equ	0xFFD
  4540                           stkptr	equ	0xFFC
  4541                           pclatu	equ	0xFFB
  4542                           pclath	equ	0xFFA
  4543                           pcl	equ	0xFF9
  4544                           tblptru	equ	0xFF8
  4545                           tblptrh	equ	0xFF7
  4546                           tblptrl	equ	0xFF6
  4547                           tablat	equ	0xFF5
  4548                           prodh	equ	0xFF4
  4549                           prodl	equ	0xFF3
  4550                           indf0	equ	0xFEF
  4551                           postinc0	equ	0xFEE
  4552                           postdec0	equ	0xFED
  4553                           preinc0	equ	0xFEC
  4554                           plusw0	equ	0xFEB
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           indf1	equ	0xFE7
  4559                           postinc1	equ	0xFE6
  4560                           postdec1	equ	0xFE5
  4561                           preinc1	equ	0xFE4
  4562                           plusw1	equ	0xFE3
  4563                           fsr1h	equ	0xFE2
  4564                           fsr1l	equ	0xFE1
  4565                           bsr	equ	0xFE0
  4566                           indf2	equ	0xFDF
  4567                           postinc2	equ	0xFDE
  4568                           postdec2	equ	0xFDD
  4569                           preinc2	equ	0xFDC
  4570                           plusw2	equ	0xFDB
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        38
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160      8     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> timer(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[7]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[7]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[7]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> timer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S779_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> timer(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> timer(BANK0[17]), 

    change_Message@new_Text	PTR unsigned char  size(2) Largest target is 17
		 -> timer(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _tempo5_ms->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Write_Display->_Write_caracter
    _initialize_LCD->_clear_Display
    _TaskAD->___lwdiv

Critical Paths under _interruptsManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _tempo5_ms->_sprintf

Critical Paths under _interruptsManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptsManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptsManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptsManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptsManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptsManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptsManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptsManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptsManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptsManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptsManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptsManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptsManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptsManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptsManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptsManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   15177
                        _Init_Timers
                             _TaskAD
                     _change_Message
                     _initialize_LCD
                            _sprintf
                          _tempo5_ms
 ---------------------------------------------------------------------------------
 (1) _tempo5_ms                                            0     0      0    7519
                      _Write_Display
                     _change_Message
                           _getMedia
                         _pinInverte
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6760
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _pinInverte                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getMedia                                             2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _change_Message                                       9     7      2     561
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Write_Display                                        2     2      0     198
                                              3 COMRAM     2     2      0
                           _Set_Line
                     _Write_caracter
 ---------------------------------------------------------------------------------
 (3) _Write_caracter                                       3     3      0     176
                                              0 COMRAM     3     3      0
                        _registra_RS
 ---------------------------------------------------------------------------------
 (4) _registra_RS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Set_Line                                             1     1      0      22
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (1) _initialize_LCD                                       2     2      0       0
                                              1 COMRAM     2     2      0
                      _clear_Display
                        _display_Off
                         _display_On
                     _entry_mode_Set
                       _function_Set
 ---------------------------------------------------------------------------------
 (2) _function_Set                                         0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _entry_mode_Set                                       0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_On                                           0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_Off                                          0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _clear_Display                                        1     1      0       0
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (4) _register_EN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TaskAD                                               0     0      0     337
                           _ADC_Read
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _interruptsManager                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Timers
   _TaskAD
     _ADC_Read
     ___lwdiv
   _change_Message
   _initialize_LCD
     _clear_Display
       _register_EN
     _display_Off
       _register_EN
     _display_On
       _register_EN
     _entry_mode_Set
       _register_EN
     _function_Set
       _register_EN
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _tempo5_ms
     _Write_Display
       _Set_Line
         _register_EN
       _Write_caracter
         _registra_RS
     _change_Message
     _getMedia
     _pinInverte
     _sprintf

 _interruptsManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D5      12        0.0%
DATA                 0      0      D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Apr 05 17:29:13 2023

              ?_display_Off 0001                          l71 1C3E                          l65 210E  
                        l68 20FC                          _ad 0072              _change_Message 18A8  
                       l132 1DEA                         l141 20D2                         l135 208A  
                       l144 20BA                         l160 17B4                         l233 1E42  
                       l129 20E8                         l209 19AC                         l226 1FD8  
                       l138 2050                         l147 20A2                         l180 186C  
                       l172 1824                         l164 17DC                         l156 1CB2  
                       l236 2118                         l229 2004                         l191 18A6  
                       l184 188A                         l176 184A                         l168 1804  
                       l353 1630                         l194 2072                         l186 188C  
                       l188 18A0                         l197 1F06                         l198 1F1C  
                       l366 1794                         l730 1D1E                         l737 1D26  
                       l917 1E94                         l944 1ABE                         l947 1B00  
                       l955 10B4                         l949 1B3C                         l957 10BC  
                       l982 14A8                         l975 12F4                         l993 1F94  
                       _GIE 007F97                         l996 1F9C                         l988 1D80  
                       l989 1D88                         u800 14EE                         u801 14EA  
                       u730 19C0                         u811 1518                         u731 19BC  
                       u820 153C                         u900 170C                         u740 19D2  
                       u821 1538                         u901 1708                         u741 19CE  
                       u830 1566                         u910 1754                         u750 19FA  
                       u831 1562                         u911 1750                         u751 19F6  
                       u840 15A6                         u760 1A30                         u920 1A88  
                       u841 15A2                         u761 1A2C                         u921 1A84  
                       u850 15F0                         u770 1ED8                         u930 1AAA  
                       u851 15EC                         u771 1ED4                         u931 1AA6  
                       u860 1644                         u780 1FC6                         u940 1B00  
                       u861 1640                         u781 1FC2                         u941 1AFC  
                       u790 14BC                         u870 1676                         u950 1B10  
                       u791 14B8                         u871 1672                         u951 1B0C  
                       u880 16B4                         u960 1F78                         u881 16B0  
                       u961 1F74                         u890 16DE                         u970 1044  
                       u891 16DA                         u971 103E                         u980 1046  
                       u990 105C                         u991 1058                         _abs 1F5E  
                       _pad 1A78                         wreg 000FE8                        l1008 1A76  
                      l1016 1ED8                        l2001 1DFE                        l1025 1FD2  
                      l2003 1E14                        l1019 211A                        ?_abs 0013  
                      l2005 1E30                        l2007 1E3A                        l2031 1B62  
                      l2023 1B3E                        l2041 1B98                        l2033 1B66  
                      l2025 1B52                        l2043 1B9C                        l2035 1B6A  
                      l2027 1B56                        l2045 1BBA                        l2037 1B6E  
                      l2029 1B5E                        l2039 1B8A                        l1601 15C8  
                      l1603 15DA                        l1605 15E0                        l1621 1668  
                      l1613 1632                        l1541 19D2                        l1701 1100  
                      l1607 15F0                        l1631 16D0                        l1623 1676  
                      l1615 1636                        l1543 19DC                        l1551 1E96  
                      l1711 120C                        l1703 1182                        l1801 17D6  
                      l1609 1610                        l1633 16DE                        l1641 1744  
                      l1625 1696                        l1617 1644                        l1545 19FA  
                      l1537 19AE                        l1553 1EA2                        l1561 1FAA  
                      l1721 1280                        l1713 122A                        l1705 1188  
                      l1811 1826                        l1803 17DE                        l1571 14AE  
                      l1643 1754                        l1635 170C                        l1627 16B4  
                      l1619 1664                        l1547 1A30                        l1539 19C0  
                      l1555 1EB4                        l1563 1FAE                        l1651 1A88  
                      l1731 12BC                        l1723 1290                        l1715 1244  
                      l1707 118E                        l1741 20DE                        l1901 20BC  
                      l1821 1884                        l1813 1844                        l1805 17FE  
                      l1581 150E                        l1573 14BC                        l1645 1774  
                      l1637 172C                        l1629 16BC                        l1557 1EB8  
                      l1565 1FC6                        l1661 1ADE                        l1653 1A9C  
                      l1725 1296                        l1733 12CC                        l1717 125E  
                      l1709 11F2                        l1903 20CE                        l1911 208C  
                      l1831 1EFE                        l1751 2070                        l1743 2052  
                      l1823 189A                        l1815 184C                        l1807 1806  
                      l1591 1558                        l1583 1512                        l1575 14DC  
                      l1639 173E                        l1671 1F5E                        l1559 1F9E  
                      l1663 1AE2                        l1655 1AAA                        l1727 12A8  
                      l1719 126E                        l1921 1FE6                        l1737 20D4  
                      l1905 202C                        l1913 209E                        l1745 2054  
                      l1825 18A2                        l1817 1866                        l1809 181E  
                      l1593 1566                        l1585 151E                        l1577 14E0  
                      l1569 14AA                        l1673 1F78                        l1665 1B10  
                      l1657 1AB6                        l1649 1A78                        l1729 12B4  
                      l1681 107C                        l1761 133E                        l1753 12F6  
                      l1841 1D3E                        l1923 1FFC                        l1931 1CCE  
                      l1739 20D6                        l1907 203E                        l1915 20A4  
                      l1827 1EDC                        l1747 205C                        l1819 186E  
                      l1851 1C7E                        l1595 1578                        l1587 153C  
                      l1579 14EE                        l1667 1B24                        l1659 1ACA  
                      l1691 10D6                        l1683 108C                        l1675 1014  
                      l1771 1406                        l1763 1362                        l1755 131A  
                      l1843 1D64                        l1941 1D08                        l1933 1CD6  
                      l1909 2042                        l1917 20B6                        l1829 1EEC  
                      l1749 2066                        l1853 1C88                        l1861 2110  
                      l1845 20EA                        l1597 15A6                        l1589 1544  
                      l1693 10E4                        l1685 108E                        l1677 1034  
                      l1773 142A                        l1781 1458                        l1765 1386  
                      l1757 1328                        l1837 1D28                        l1951 2102  
                      l1919 1FD4                        l1943 1D10                        l1935 1CDE  
                      l1927 1CB4                        l1855 1CA0                        l1847 1C40  
                      l1599 15C6                        l1695 10EA                        l1687 10A8  
                      l1679 105C                        l1783 1466                        l1775 1438  
                      l1767 13CE                        l1759 133A                        l1839 1D30  
                      l1871 1E82                        l1863 1E44                        l1953 2108  
                      l1945 1D12                        l1937 1CEC                        l1929 1CBC  
                      l1857 1CA8                        l1849 1C58                        l1881 1924  
                      l1697 10F2                        l1689 10C4                        l1777 144C  
                      l1865 1E56                        l1961 1BD0                        l1955 210A  
                      l1947 1D18                        l1939 1CF2                        l1795 1798  
                      l1859 1CAC                        l1891 1980                        l1883 1928  
                      l1875 18AA                        l1699 10FA                        l1787 1472  
                      l1867 1E5E                        l1971 1C06                        l1963 1BD4  
                      l1957 210C                        l1949 20FE                        l1981 1DA6  
                      l1797 17AE                        l1893 19A4                        l1885 1944  
                      l1877 18B6                        l1789 1496                        l1869 1E66  
                      l1973 1C14                        l1965 1BD8                        ?_pad 0011  
                      l1991 1DDE                        l1983 1DBA                        l1799 17B6  
                      l1887 1960                        l1879 18F4                        l1975 1C30  
                      l1967 1BE4                        l1959 1BC6                        l1897 2074  
                      l1993 1DE2                        l1985 1DD2                        l1977 1D8A  
                      l1969 1BEA                        l1899 2086                        l1995 1DE6  
                      l1987 1DD6                        l1979 1DA2                        l1997 1DEC  
                      l1989 1DDA                        l1999 1DFA                        STR_1 1001  
                      STR_2 100B                        STR_3 1001                        u1000 108C  
                      u1001 1088                        u1010 10A8                        u1011 10A4  
                      u1100 1290                        u1020 10D6                        u1101 128C  
                      u1021 10D2                        u1110 12A8                        u1030 10E4  
                      u1111 12A4                        u1031 10E0                        u1040 120C  
                      u1120 131A                        u1041 1208                        u1121 1316  
                      u1210 17FE                        u1050 122A                        u1130 1362  
                      u1211 17FA                        u1051 1226                        u1131 135E  
                      u1220 181E                        u1060 1244                        u1140 1386  
                      u1221 181A                        u1205 17E6                        u1061 1240  
                      u1141 1382                        u1230 1844                        u1310 1C58  
                      u1070 125E                        u1150 142A                        u1231 1840  
                      u1311 1C54                        u1071 125A                        u1151 1426  
                      u1400 1D08                        u1240 1866                        u1320 1CA0  
                      u1080 126E                        u1401 1D04                        u1241 1862  
                      u1321 1C9C                        u1305 20FC                        u1081 126A  
                      u1410 1E14                        u1250 1884                        u1170 17AE  
                      u1330 18F4                        u1090 1280                        u1411 1E10  
                      u1251 1880                        u1171 17AA                        u1331 18F0  
                      u1091 127C                        u1260 189A                        u1340 1944  
                      u1261 1896                        u1165 17A0                        u1341 1940  
                      u1270 1EEC                        u1190 17D6                        u1350 1960  
                      _LATB 000F8A                        u1271 1EE8                        u1191 17D2  
                      u1351 195C                        _LATC 000F8B                        u1360 197C  
                      u1280 1D80                        u1440 1BBA                        u1185 17BE  
                      u1361 1978                        u1281 1D7C                        u1441 1BB6  
                      u1370 1FE6                        u1290 20FA                        u1371 1FE2  
                      u1507 1DC4                        u1291 20F4                        u1380 1CCE  
                      u1381 1CCA                        u1517 2048                        u1390 1CEC  
                      u1391 1CE8                        u1527 20D8                        u1537 20E2  
                      u1457 2056                        u1467 2060                        u1477 206A  
                      u1487 1D94                        u1497 1DAC                        _PEIE 007F96  
            _contador_media 0068                        i2l62 003E            ??_initialize_LCD 0002  
                      _TMR0 000FD6                        abs@a 0013                        _dbuf 0078  
                      _main 1B3E                        _dtoa 1014                        _prec 0064  
                      _nout 0060                        _soma 006A                        pad@i 0018  
                      pad@p 0015                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        btemp 005F  
          __end_of_ADC_Read 2006                        prodh 000FF4                        prodl 000FF3  
                      start 0042                ___param_bank 000000               ??_Init_Timers 0001  
                     ??_abs 0015                       ??_pad 0017      __end_of_change_Message 19AE  
           __end_of___aodiv 1632                       ?_main 0001                       ?_dtoa 001C  
           __end_of___aomod 1796                       _T0CON 000FD5                       _LATB0 007C50  
                     _LATB1 007C51                       _LATC0 007C58                       _LATB2 007C52  
                     _LATB3 007C53                       _LATB4 007C54                       _LATB5 007C55  
                     _LATC4 007C5C                       _LATB6 007C56                       _LATC5 007C5D  
                     _LATB7 007C57             __end_of___lwdiv 1D28      __size_of_Write_Display 0074  
              vfpfcnvrt@fmt 0042                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _flags 0066                       _media 006C  
                     _fputc 19AE                       _fputs 1E96                       _timer 0098  
                     pad@fp 0011                       _width 0062                       _putch 211A  
                     dtoa@d 001E                       dtoa@i 003E                       dtoa@n 0036  
                     dtoa@p 0030                       dtoa@s 0034                       dtoa@w 0032  
                     tablat 000FF5                       ttemp5 0060                       ttemp6 0063  
                     ttemp7 0067                       status 000FD8                       wtemp8 0060  
           __end_of_sprintf 1E96             __initialization 1F1E                __end_of_main 1BC6  
              __end_of_dtoa 12F6             ?_change_Message 0001             change_Message@i 0008  
                    ??_main 005E                      ??_dtoa 0026       __end_of_clear_Display 2052  
          __end_of_Set_Line 1F1E         __end_of_Init_Timers 2110               __activetblptr 000001  
              ?_register_EN 0001                ?_registra_RS 0001                      _ADCON0 000FC2  
                    _ADCON1 000FC1                      _ADCON2 000FC0                      ?_fputc 0001  
                    ?_fputs 000A                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    ?_putch 0001                      i2l2011 0018                      i2l2021 003A  
                    i2l2013 0026                      i2l2015 002E                      i2l2017 0030  
                    i2l2009 000A                      i2l2019 0036                      _OSCCON 000FD3  
                    _TMR0IE 007F95               _Write_Display 1C40            __end_of_getMedia 211A  
                    _TaskAD 1DEC                vfprintf@cfmt 0056                   ??___aodiv 0011  
                 ??___aomod 0011                   ??___lwdiv 0005             ADC_Read@digital 0005  
                    clear_0 1F44               ?_function_Set 0001                      isa$std 000001  
                    pad@buf 0013        __size_of_display_Off 0018          change_Message@line 0007  
                    dtoa@fp 001C                      _strlen 1F9E                      fputc@c 0001  
                    fputs@c 000E                      fputs@i 000F                      fputs@s 000A  
                 ?_ADC_Read 0001                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8     __size_of_Write_caracter 0112  
                    putch@c 0001            __end_of_vfprintf 1D8A                   ??_sprintf 005E  
                __accesstop 0060     __end_of__initialization 1F4C              ?_Write_Display 0001  
             ___rparam_used 000001              __pcstackCOMRAM 0001                __pidataBANK0 2006  
               _Init_Timers 20FE               __end_of_fputc 1A78               __end_of_fputs 1EDA  
             __end_of_putch 211C              ??_function_Set 0001                  ??_ADC_Read 0003  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 0060                   ?_Set_Line 0001                     ?_TaskAD 0001  
        __size_of_tempo5_ms 007A                     ?_strlen 0001          __size_of_vfpfcnvrt 01B4  
                 ?_getMedia 0001        __size_of_register_EN 0016                  _display_On 20A4  
      __size_of_registra_RS 0022             ??_Write_Display 0004     __size_of_entry_mode_Set 0018  
                ??_Set_Line 0001                     __Hparam 0000            ??_change_Message 0003  
                   __Lparam 0000             __size_of_TaskAD 0058                     ___aodiv 14AA  
                   ___aomod 1632                     ___lwdiv 1CB4                   ?_vfprintf 0050  
              __psmallconst 1000                     __pcinit 1F1E                     __ramtop 1000  
                   __ptext0 1B3E                     __ptext1 1BC6                     __ptext2 1E44  
                   __ptext3 1D28                     __ptext4 12F6                     __ptext5 1014  
                   __ptext6 1A78                     __ptext7 1F9E                     __ptext8 1E96  
                   __ptext9 19AE             __size_of_strlen 0036                __size_of_abs 0040  
              __size_of_pad 00C6                  _pinInverte 20EA                     _message 00A9  
            _Write_caracter 1796                  ??_getMedia 0003                     _sprintf 1E44  
      end_of_initialization 1F4C        __end_of_function_Set 208C                     fputc@fp 0003  
                   fputs@fp 000C           __end_of_tempo5_ms 1C40           __end_of_vfpfcnvrt 14AA  
   __size_of_initialize_LCD 0062                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                ??_vfprintf 0056                     strlen@a 0003                     strlen@s 0001  
    __end_of_Write_caracter 18A8                 ?_display_On 0001           __size_of_ADC_Read 0032  
    change_Message@new_Text 0001      __size_of_clear_Display 0026              __end_of_TaskAD 1E44  
              ?_Init_Timers 0001               ??_display_Off 0001                 vfpfcnvrt@ap 0044  
               vfpfcnvrt@fp 0040                 vfpfcnvrt@ll 0048             ?_Write_caracter 0001  
               ?_pinInverte 0001              __end_of_strlen 1FD4         start_initialization 1F1E  
              Set_Line@line 0001                 __end_of_abs 1F9E                 __end_of_pad 1B3E  
              _counter_50ms 0074              _entry_mode_Set 208C                    ??_TaskAD 0008  
               vfprintf@fmt 0052           __size_of_Set_Line 0044         __size_of_display_On 0018  
               __pdataBANK0 00A9                    ??_strlen 0003               _clear_Display 202C  
       __end_of_display_Off 20D4                 __pbssCOMRAM 005E               __pcstackBANK0 00CF  
          ___aodiv@dividend 0001       __size_of_function_Set 0018           __size_of_getMedia 000A  
    __end_of_entry_mode_Set 20A4            ___lwdiv@dividend 0001         __size_of_pinInverte 0014  
            _initialize_LCD 1D8A                   __pintcode 0008                    ?___aodiv 0001  
                  ?___aomod 0001            ___aodiv@quotient 0013                    ?___lwdiv 0001  
                 _div_media 00CB                _function_Set 2074           __size_of_vfprintf 0062  
            ?_clear_Display 0001                 __smallconst 1000               ??_register_EN 0001  
             ??_registra_RS 0001                    _ADC_Read 1FD4           _interruptsManager 0008  
                 _linha_LCD 005E            ___lwdiv@quotient 0005                    ?_sprintf 0058  
            __size_of_fputc 00CA              __size_of_fputs 0044          ?_interruptsManager 0001  
            __size_of_putch 0002             ?_entry_mode_Set 0001       __end_of_Write_Display 1CB4  
       ??_interruptsManager 0001      __end_of_initialize_LCD 1DEC                    i2u142_40 0018  
                  i2u142_41 0014                    i2u143_40 0026                    i2u143_41 0022  
                 _tempo5_ms 1BC6                 _display_Off 20BC                   _vfpfcnvrt 12F6  
      __size_of_Init_Timers 0012                  _ADCON0bits 000FC2   __end_of_interruptsManager 0042  
              ??_display_On 0001                   copy_data0 1F32         __end_of_register_EN 20EA  
       __end_of_registra_RS 2074                 _counter_5ms 0076             ?_initialize_LCD 0001  
                  _Set_Line 1EDA                    __Hrparam 0000                  ?_tempo5_ms 0001  
                vfprintf@ap 0054                    __Lrparam 0000                  vfprintf@fp 0050  
              __Lsmallconst 1000             Write_caracter@c 0003            ??_Write_caracter 0001  
          __size_of___aodiv 0188            __size_of___aomod 0164          __end_of_display_On 20BC  
                ?_vfpfcnvrt 0040            __size_of___lwdiv 0074             ??_clear_Display 0001  
           ___aodiv@divisor 0009             ___aodiv@counter 0011     __size_of_change_Message 0106  
                sprintf@fmt 005A                ??_pinInverte 0001                    _dtoa$852 002E  
           ___lwdiv@divisor 0003                    _getMedia 2110             ___lwdiv@counter 0007  
                  __ptext10 211A                    __ptext11 1F5E                    __ptext20 1EDA  
                  __ptext12 1632                    __ptext21 1D8A                    __ptext13 14AA  
                  __ptext30 1FD4                    __ptext22 2074                    __ptext14 20EA  
                  __ptext31 20FE                    __ptext23 208C                    __ptext15 2110  
                  __ptext24 20A4                    __ptext16 18A8                    __ptext25 20BC  
                  __ptext17 1C40                    __ptext26 202C                    __ptext18 1796  
                  __ptext27 20D4                    __ptext19 2052                    __ptext28 1DEC  
                  __ptext29 1CB4                    _contador 0070            __size_of_sprintf 0052  
             __size_of_main 0088               __size_of_dtoa 02E2          __end_of_pinInverte 20FE  
                  isa$xinst 000000                    int$flags 005F                    _vfprintf 1D28  
          ___aomod@dividend 0001  __size_of_interruptsManager 003A                 _OSCTUNEbits 000F9B  
                _INTCONbits 000FF2                 _register_EN 20D4                 _registra_RS 2052  
                  intlevel2 0000          _status_LCD_startup 00CD                   sprintf@ap 00CF  
           _position_String 006E                 ??_tempo5_ms 005E             ___aomod@divisor 0009  
               ??_vfpfcnvrt 0046             ___aomod@counter 0011                    sprintf@f 00D1  
                  sprintf@s 0058            ??_entry_mode_Set 0001                ___aodiv@sign 0012  
              ___aomod@sign 0012  
