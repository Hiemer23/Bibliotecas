

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar 24 13:59:08 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 05/05/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F46K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataBANK0
    82  001ECC                     __pidataBANK0:
    83                           	callstack 0
    84                           
    85                           ;initializer for _message
    86  001ECC  42                 	db	66
    87  001ECD  65                 	db	101
    88  001ECE  6D                 	db	109
    89  001ECF  20                 	db	32
    90  001ED0  56                 	db	86
    91  001ED1  69                 	db	105
    92  001ED2  6E                 	db	110
    93  001ED3  64                 	db	100
    94  001ED4  6F                 	db	111
    95  001ED5  20                 	db	32
    96  001ED6  35                 	db	53
    97  001ED7  37                 	db	55
    98  001ED8  20                 	db	32
    99  001ED9  31                 	db	49
   100  001EDA  32                 	db	50
   101  001EDB  33                 	db	51
   102  001EDC  00                 	db	0
   103  001EDD  4C                 	db	76
   104  001EDE  43                 	db	67
   105  001EDF  44                 	db	68
   106  001EE0  20                 	db	32
   107  001EE1  61                 	db	97
   108  001EE2  6F                 	db	111
   109  001EE3  20                 	db	32
   110  001EE4  56                 	db	86
   111  001EE5  69                 	db	105
   112  001EE6  6E                 	db	110
   113  001EE7  64                 	db	100
   114  001EE8  6F                 	db	111
   115  001EE9  20                 	db	32
   116  001EEA  42                 	db	66
   117  001EEB  65                 	db	101
   118  001EEC  6D                 	db	109
   119  001EED  00                 	db	0
   120                           
   121                           ;initializer for _status_LCD_startup
   122  001EEE  0001               	dw	1
   123  0000                     _TMR0	set	4054
   124  0000                     _OSCCON	set	4051
   125  0000                     _LATC	set	3979
   126  0000                     _LATB	set	3978
   127  0000                     _TRISC	set	3988
   128  0000                     _TRISB	set	3987
   129  0000                     _T0CON	set	4053
   130  0000                     _INTCONbits	set	4082
   131  0000                     _LATB0	set	31824
   132  0000                     _LATB1	set	31825
   133  0000                     _LATB2	set	31826
   134  0000                     _LATB3	set	31827
   135  0000                     _LATB4	set	31828
   136  0000                     _LATB5	set	31829
   137  0000                     _LATB6	set	31830
   138  0000                     _LATB7	set	31831
   139  0000                     _LATC4	set	31836
   140  0000                     _LATC5	set	31837
   141  0000                     _GIE	set	32663
   142  0000                     _PEIE	set	32662
   143  0000                     _TMR0IE	set	32661
   144                           
   145                           	psect	smallconst
   146  001000                     __psmallconst:
   147                           	callstack 0
   148  001000  00                 	db	0
   149  001001                     STR_1:
   150  001001  54                 	db	84	;'T'
   151  001002  65                 	db	101	;'e'
   152  001003  6D                 	db	109	;'m'
   153  001004  70                 	db	112	;'p'
   154  001005  6F                 	db	111	;'o'
   155  001006  3A                 	db	58	;':'
   156  001007  20                 	db	32
   157  001008  25                 	db	37
   158  001009  64                 	db	100	;'d'
   159  00100A  00                 	db	0
   160  00100B  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  001DF0                     __pcinit:
   166                           	callstack 0
   167  001DF0                     start_initialization:
   168                           	callstack 0
   169  001DF0                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to BANK0 (36 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174  001DF0  0ECC               	movlw	low __pidataBANK0
   175  001DF2  6EF6               	movwf	tblptrl,c
   176  001DF4  0E1E               	movlw	high __pidataBANK0
   177  001DF6  6EF7               	movwf	tblptrh,c
   178  001DF8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179  001DFA  6EF8               	movwf	tblptru,c
   180  001DFC  EE00  F08E         	lfsr	0,__pdataBANK0
   181  001E00  EE10 F024          	lfsr	1,36
   182  001E04                     copy_data0:
   183  001E04  0009               	tblrd		*+
   184  001E06  CFF5 FFEE          	movff	tablat,postinc0
   185  001E0A  50E5               	movf	postdec1,w,c
   186  001E0C  50E1               	movf	fsr1l,w,c
   187  001E0E  E1FA               	bnz	copy_data0
   188                           
   189                           ; Clear objects allocated to BANK0 (46 bytes)
   190  001E10  EE00  F060         	lfsr	0,__pbssBANK0
   191  001E14  0E2E               	movlw	46
   192  001E16                     clear_0:
   193  001E16  6AEE               	clrf	postinc0,c
   194  001E18  06E8               	decf	wreg,f,c
   195  001E1A  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (1 bytes)
   198  001E1C  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   199  001E1E                     end_of_initialization:
   200                           	callstack 0
   201  001E1E                     __end_of__initialization:
   202                           	callstack 0
   203  001E1E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204  001E20  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205  001E22  0E00               	movlw	low (__Lsmallconst shr (0+16))
   206  001E24  6EF8               	movwf	tblptru,c
   207  001E26  0E10               	movlw	high __Lsmallconst
   208  001E28  6EF7               	movwf	tblptrh,c
   209  001E2A  0100               	movlb	0
   210  001E2C  EF9B  F00D         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213  00005E                     __pbssCOMRAM:
   214                           	callstack 0
   215  00005E                     _linha_LCD:
   216                           	callstack 0
   217  00005E                     	ds	1
   218                           
   219                           	psect	bssBANK0
   220  000060                     __pbssBANK0:
   221                           	callstack 0
   222  000060                     _nout:
   223                           	callstack 0
   224  000060                     	ds	2
   225  000062                     _width:
   226                           	callstack 0
   227  000062                     	ds	2
   228  000064                     _prec:
   229                           	callstack 0
   230  000064                     	ds	2
   231  000066                     _flags:
   232                           	callstack 0
   233  000066                     	ds	2
   234  000068                     _contador:
   235                           	callstack 0
   236  000068                     	ds	2
   237  00006A                     _counter_display:
   238                           	callstack 0
   239  00006A                     	ds	2
   240  00006C                     _position_String:
   241                           	callstack 0
   242  00006C                     	ds	2
   243  00006E                     _dbuf:
   244                           	callstack 0
   245  00006E                     	ds	32
   246                           
   247                           	psect	dataBANK0
   248  00008E                     __pdataBANK0:
   249                           	callstack 0
   250  00008E                     _message:
   251                           	callstack 0
   252  00008E                     	ds	34
   253  0000B0                     _status_LCD_startup:
   254                           	callstack 0
   255  0000B0                     	ds	2
   256                           
   257                           	psect	cstackBANK0
   258  0000B2                     __pcstackBANK0:
   259                           	callstack 0
   260  0000B2                     sprintf@ap:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  0000B2                     	ds	2
   265  0000B4                     sprintf@f:
   266                           	callstack 0
   267                           
   268                           ; 6 bytes @ 0x2
   269  0000B4                     	ds	6
   270  0000BA                     main@timer:
   271                           	callstack 0
   272                           
   273                           ; 17 bytes @ 0x8
   274  0000BA                     	ds	17
   275                           
   276                           	psect	cstackCOMRAM
   277  000001                     __pcstackCOMRAM:
   278                           	callstack 0
   279  000001                     ??_clear_Display:
   280  000001                     ??_Write_caracter:
   281  000001                     ?_strlen:
   282                           	callstack 0
   283  000001                     ?___aodiv:
   284                           	callstack 0
   285  000001                     ?___aomod:
   286                           	callstack 0
   287  000001                     Set_Line@line:
   288                           	callstack 0
   289  000001                     change_Message@new_Text:
   290                           	callstack 0
   291  000001                     fputc@c:
   292                           	callstack 0
   293  000001                     strlen@s:
   294                           	callstack 0
   295  000001                     ___aodiv@dividend:
   296                           	callstack 0
   297  000001                     ___aomod@dividend:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     ??_initialize_LCD:
   303                           
   304                           ; 1 bytes @ 0x1
   305  000002                     	ds	1
   306  000003                     ??_change_Message:
   307  000003                     Write_caracter@c:
   308                           	callstack 0
   309  000003                     fputc@fp:
   310                           	callstack 0
   311  000003                     strlen@a:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x2
   315  000003                     	ds	1
   316  000004                     ??_Write_Display:
   317                           
   318                           ; 1 bytes @ 0x3
   319  000004                     	ds	1
   320  000005                     ??_fputc:
   321                           
   322                           ; 1 bytes @ 0x4
   323  000005                     	ds	2
   324  000007                     change_Message@line:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x6
   328  000007                     	ds	1
   329  000008                     change_Message@i:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x7
   333  000008                     	ds	1
   334  000009                     ___aodiv@divisor:
   335                           	callstack 0
   336  000009                     ___aomod@divisor:
   337                           	callstack 0
   338                           
   339                           ; 8 bytes @ 0x8
   340  000009                     	ds	1
   341  00000A                     fputs@s:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x9
   345  00000A                     	ds	2
   346  00000C                     fputs@fp:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xB
   350  00000C                     	ds	2
   351  00000E                     fputs@c:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xD
   355  00000E                     	ds	1
   356  00000F                     fputs@i:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0xE
   360  00000F                     	ds	2
   361  000011                     ?_pad:
   362                           	callstack 0
   363  000011                     ___aodiv@counter:
   364                           	callstack 0
   365  000011                     ___aomod@counter:
   366                           	callstack 0
   367  000011                     pad@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x10
   371  000011                     	ds	1
   372  000012                     ___aodiv@sign:
   373                           	callstack 0
   374  000012                     ___aomod@sign:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x11
   378  000012                     	ds	1
   379  000013                     ?_abs:
   380                           	callstack 0
   381  000013                     pad@buf:
   382                           	callstack 0
   383  000013                     abs@a:
   384                           	callstack 0
   385  000013                     ___aodiv@quotient:
   386                           	callstack 0
   387                           
   388                           ; 8 bytes @ 0x12
   389  000013                     	ds	2
   390  000015                     ??_abs:
   391  000015                     pad@p:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x14
   395  000015                     	ds	2
   396  000017                     ??_pad:
   397                           
   398                           ; 1 bytes @ 0x16
   399  000017                     	ds	1
   400  000018                     pad@i:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x17
   404  000018                     	ds	2
   405  00001A                     pad@w:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x19
   409  00001A                     	ds	2
   410  00001C                     ?_dtoa:
   411                           	callstack 0
   412  00001C                     dtoa@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x1B
   416  00001C                     	ds	2
   417  00001E                     dtoa@d:
   418                           	callstack 0
   419                           
   420                           ; 8 bytes @ 0x1D
   421  00001E                     	ds	8
   422  000026                     ??_dtoa:
   423                           
   424                           ; 1 bytes @ 0x25
   425  000026                     	ds	8
   426  00002E                     _dtoa$718:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2D
   430  00002E                     	ds	2
   431  000030                     dtoa@p:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x2F
   435  000030                     	ds	2
   436  000032                     dtoa@w:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x31
   440  000032                     	ds	2
   441  000034                     dtoa@s:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x33
   445  000034                     	ds	2
   446  000036                     dtoa@n:
   447                           	callstack 0
   448                           
   449                           ; 8 bytes @ 0x35
   450  000036                     	ds	8
   451  00003E                     dtoa@i:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x3D
   455  00003E                     	ds	2
   456  000040                     ?_vfpfcnvrt:
   457                           	callstack 0
   458  000040                     vfpfcnvrt@fp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x3F
   462  000040                     	ds	2
   463  000042                     vfpfcnvrt@fmt:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x41
   467  000042                     	ds	2
   468  000044                     vfpfcnvrt@ap:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x43
   472  000044                     	ds	2
   473  000046                     ??_vfpfcnvrt:
   474                           
   475                           ; 1 bytes @ 0x45
   476  000046                     	ds	2
   477  000048                     vfpfcnvrt@ll:
   478                           	callstack 0
   479                           
   480                           ; 8 bytes @ 0x47
   481  000048                     	ds	8
   482  000050                     ?_vfprintf:
   483                           	callstack 0
   484  000050                     vfprintf@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x4F
   488  000050                     	ds	2
   489  000052                     vfprintf@fmt:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x51
   493  000052                     	ds	2
   494  000054                     vfprintf@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x53
   498  000054                     	ds	2
   499  000056                     vfprintf@cfmt:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x55
   503  000056                     	ds	2
   504  000058                     ?_sprintf:
   505                           	callstack 0
   506  000058                     sprintf@s:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x57
   510  000058                     	ds	2
   511  00005A                     sprintf@fmt:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x59
   515  00005A                     	ds	4
   516  00005E                     
   517                           ; 1 bytes @ 0x5D
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 41 in file "main.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  timer          17    8[BANK0 ] unsigned char [17]
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:       17 bytes
   542 ;; Hardware stack levels required when called: 9
   543 ;; This function calls:
   544 ;;		_Init_Timers
   545 ;;		_Write_Display
   546 ;;		_change_Message
   547 ;;		_initialize_LCD
   548 ;;		_sprintf
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text0
   555  001B36                     __ptext0:
   556                           	callstack 0
   557  001B36                     _main:
   558                           	callstack 22
   559  001B36                     
   560                           ;main.c: 44:     TRISB = 0x00;
   561  001B36  0E00               	movlw	0
   562  001B38  6E93               	movwf	147,c	;volatile
   563                           
   564                           ;main.c: 45:     TRISC = 0x00;
   565  001B3A  0E00               	movlw	0
   566  001B3C  6E94               	movwf	148,c	;volatile
   567                           
   568                           ;main.c: 47:     LATB = 0x00;
   569  001B3E  0E00               	movlw	0
   570  001B40  6E8A               	movwf	138,c	;volatile
   571                           
   572                           ;main.c: 48:     LATC = 0x00;
   573  001B42  0E00               	movlw	0
   574  001B44  6E8B               	movwf	139,c	;volatile
   575                           
   576                           ;main.c: 50:     OSCCON = 0b11111100;
   577  001B46  0EFC               	movlw	252
   578  001B48  6ED3               	movwf	211,c	;volatile
   579  001B4A                     
   580                           ;main.c: 51:     Init_Timers();
   581  001B4A  ECBC  F00F         	call	_Init_Timers	;wreg free
   582  001B4E                     
   583                           ;main.c: 53:     TMR0 = 6;
   584  001B4E  0E00               	movlw	0
   585  001B50  6ED7               	movwf	215,c	;volatile
   586  001B52  0E06               	movlw	6
   587  001B54  6ED6               	movwf	214,c	;volatile
   588  001B56                     
   589                           ;main.c: 56:     initialize_LCD();
   590  001B56  EC5E  F00E         	call	_initialize_LCD	;wreg free
   591  001B5A                     
   592                           ;main.c: 57:     char timer[17];;main.c: 58:     sprintf(timer, "Tempo: %d", contador);
   593  001B5A  0EBA               	movlw	low main@timer
   594  001B5C  6E58               	movwf	sprintf@s^0,c
   595  001B5E  0E00               	movlw	high main@timer
   596  001B60  6E59               	movwf	(sprintf@s+1)^0,c
   597  001B62  0E01               	movlw	low STR_1
   598  001B64  6E5A               	movwf	sprintf@fmt^0,c
   599  001B66  0E10               	movlw	high STR_1
   600  001B68  6E5B               	movwf	(sprintf@fmt+1)^0,c
   601  001B6A  C068  F05C         	movff	_contador,?_sprintf+4
   602  001B6E  C069  F05D         	movff	_contador+1,?_sprintf+5
   603  001B72  EC8B  F00E         	call	_sprintf	;wreg free
   604  001B76                     
   605                           ;main.c: 59:     change_Message(0, timer);
   606  001B76  0EBA               	movlw	low main@timer
   607  001B78  6E01               	movwf	change_Message@new_Text^0,c
   608  001B7A  0E00               	movlw	high main@timer
   609  001B7C  6E02               	movwf	(change_Message@new_Text+1)^0,c
   610  001B7E  0E00               	movlw	0
   611  001B80  EC50  F00C         	call	_change_Message
   612  001B84                     l1836:
   613                           
   614                           ;main.c: 61:         if (counter_display >= 5) {
   615  001B84  0100               	movlb	0	; () banked
   616  001B86  BF6B               	btfsc	(_counter_display+1)& (0+255),7,b
   617  001B88  EFCF  F00D         	goto	u1301
   618  001B8C  516B               	movf	(_counter_display+1)& (0+255),w,b
   619  001B8E  E109               	bnz	u1300
   620  001B90  0E05               	movlw	5
   621  001B92  5D6A               	subwf	_counter_display& (0+255),w,b
   622  001B94  A0D8               	btfss	status,0,c
   623  001B96  EFCF  F00D         	goto	u1301
   624  001B9A  EFD1  F00D         	goto	u1300
   625  001B9E                     u1301:
   626  001B9E  EFC2  F00D         	goto	l1836
   627  001BA2                     u1300:
   628  001BA2                     
   629                           ; BSR set to: 0
   630                           ;main.c: 62:             Write_Display();
   631  001BA2  ECF3  F00D         	call	_Write_Display	;wreg free
   632  001BA6                     
   633                           ;main.c: 63:             counter_display = 0;
   634  001BA6  0E00               	movlw	0
   635  001BA8  0100               	movlb	0	; () banked
   636  001BAA  6F6B               	movwf	(_counter_display+1)& (0+255),b
   637  001BAC  0E00               	movlw	0
   638  001BAE  6F6A               	movwf	_counter_display& (0+255),b
   639  001BB0                     
   640                           ; BSR set to: 0
   641                           ;main.c: 64:             *timer = '\0';
   642  001BB0  0E00               	movlw	0
   643  001BB2  6FBA               	movwf	main@timer& (0+255),b
   644  001BB4                     
   645                           ; BSR set to: 0
   646                           ;main.c: 65:             sprintf(timer, "Tempo: %d", contador);
   647  001BB4  0EBA               	movlw	low main@timer
   648  001BB6  6E58               	movwf	sprintf@s^0,c
   649  001BB8  0E00               	movlw	high main@timer
   650  001BBA  6E59               	movwf	(sprintf@s+1)^0,c
   651  001BBC  0E01               	movlw	low STR_1
   652  001BBE  6E5A               	movwf	sprintf@fmt^0,c
   653  001BC0  0E10               	movlw	high STR_1
   654  001BC2  6E5B               	movwf	(sprintf@fmt+1)^0,c
   655  001BC4  C068  F05C         	movff	_contador,?_sprintf+4
   656  001BC8  C069  F05D         	movff	_contador+1,?_sprintf+5
   657  001BCC  EC8B  F00E         	call	_sprintf	;wreg free
   658  001BD0                     
   659                           ;main.c: 66:             change_Message(0, timer);
   660  001BD0  0EBA               	movlw	low main@timer
   661  001BD2  6E01               	movwf	change_Message@new_Text^0,c
   662  001BD4  0E00               	movlw	high main@timer
   663  001BD6  6E02               	movwf	(change_Message@new_Text+1)^0,c
   664  001BD8  0E00               	movlw	0
   665  001BDA  EC50  F00C         	call	_change_Message
   666  001BDE  EFC2  F00D         	goto	l1836
   667  001BE2  EF1F  F000         	goto	start
   668  001BE6                     __end_of_main:
   669                           	callstack 0
   670                           
   671 ;; *************** function _sprintf *****************
   672 ;; Defined at:
   673 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  s               2   87[COMRAM] PTR unsigned char 
   676 ;;		 -> main@timer(17), 
   677 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   678 ;;		 -> STR_2(10), STR_1(10), 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  f               6    2[BANK0 ] struct _IO_FILE
   681 ;;  ap              2    0[BANK0 ] PTR void [1]
   682 ;;		 -> ?_sprintf(2), 
   683 ;;  ret             2    0        int 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  2   87[COMRAM] int 
   686 ;; Registers used:
   687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   693 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;Total ram usage:       14 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 8
   700 ;; This function calls:
   701 ;;		_vfprintf
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text1
   708  001D16                     __ptext1:
   709                           	callstack 0
   710  001D16                     _sprintf:
   711                           	callstack 22
   712  001D16  0E5C               	movlw	low (?_sprintf+4)
   713  001D18  0100               	movlb	0	; () banked
   714  001D1A  6FB2               	movwf	sprintf@ap& (0+255),b
   715  001D1C  0E00               	movlw	high (?_sprintf+4)
   716  001D1E  6FB3               	movwf	(sprintf@ap+1)& (0+255),b
   717  001D20  C058  F0B4         	movff	sprintf@s,sprintf@f
   718  001D24  C059  F0B5         	movff	sprintf@s+1,sprintf@f+1
   719  001D28                     
   720                           ; BSR set to: 0
   721  001D28  0E00               	movlw	0
   722  001D2A  6FB7               	movwf	(sprintf@f+3)& (0+255),b
   723  001D2C  0E00               	movlw	0
   724  001D2E  6FB6               	movwf	(sprintf@f+2)& (0+255),b
   725  001D30                     
   726                           ; BSR set to: 0
   727  001D30  0E00               	movlw	0
   728  001D32  6FB9               	movwf	(sprintf@f+5)& (0+255),b
   729  001D34  0E00               	movlw	0
   730  001D36  6FB8               	movwf	(sprintf@f+4)& (0+255),b
   731  001D38                     
   732                           ; BSR set to: 0
   733  001D38  0EB4               	movlw	low sprintf@f
   734  001D3A  6E50               	movwf	vfprintf@fp^0,c
   735  001D3C  0E00               	movlw	high sprintf@f
   736  001D3E  6E51               	movwf	(vfprintf@fp+1)^0,c
   737  001D40  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   738  001D44  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   739  001D48  0EB2               	movlw	low sprintf@ap
   740  001D4A  6E54               	movwf	vfprintf@ap^0,c
   741  001D4C  0E00               	movlw	high sprintf@ap
   742  001D4E  6E55               	movwf	(vfprintf@ap+1)^0,c
   743  001D50  EC2D  F00E         	call	_vfprintf	;wreg free
   744  001D54  0100               	movlb	0	; () banked
   745  001D56  51B6               	movf	(sprintf@f+2)& (0+255),w,b
   746  001D58  2458               	addwf	sprintf@s^0,w,c
   747  001D5A  6ED9               	movwf	fsr2l,c
   748  001D5C  51B7               	movf	(sprintf@f+3)& (0+255),w,b
   749  001D5E  2059               	addwfc	(sprintf@s+1)^0,w,c
   750  001D60  6EDA               	movwf	fsr2h,c
   751  001D62  0E00               	movlw	0
   752  001D64  6EDF               	movwf	indf2,c
   753  001D66                     
   754                           ; BSR set to: 0
   755  001D66  0012               	return		;funcret
   756  001D68                     __end_of_sprintf:
   757                           	callstack 0
   758                           
   759 ;; *************** function _vfprintf *****************
   760 ;; Defined at:
   761 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   764 ;;		 -> sprintf@f(6), 
   765 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   766 ;;		 -> STR_2(10), STR_1(10), 
   767 ;;  ap              2   83[COMRAM] PTR PTR void 
   768 ;;		 -> sprintf@ap(2), 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   771 ;;		 -> STR_2(10), STR_1(10), 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2   79[COMRAM] int 
   774 ;; Registers used:
   775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   781 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;Total ram usage:        8 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 7
   788 ;; This function calls:
   789 ;;		_vfpfcnvrt
   790 ;; This function is called by:
   791 ;;		_sprintf
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796  001C5A                     __ptext2:
   797                           	callstack 0
   798  001C5A                     _vfprintf:
   799                           	callstack 22
   800  001C5A                     
   801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   802  001C5A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
   803  001C5E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   804  001C62                     
   805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   806  001C62  0E00               	movlw	0
   807  001C64  0100               	movlb	0	; () banked
   808  001C66  6F61               	movwf	(_nout+1)& (0+255),b
   809  001C68  0E00               	movlw	0
   810  001C6A  6F60               	movwf	_nout& (0+255),b
   811                           
   812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   813  001C6C  EF4B  F00E         	goto	l1734
   814  001C70                     l1732:
   815                           
   816                           ; BSR set to: 0
   817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   818  001C70  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
   819  001C74  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   820  001C78  0E56               	movlw	low vfprintf@cfmt
   821  001C7A  6E42               	movwf	vfpfcnvrt@fmt^0,c
   822  001C7C  0E00               	movlw	high vfprintf@cfmt
   823  001C7E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
   824  001C80  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
   825  001C84  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   826  001C88  EC77  F009         	call	_vfpfcnvrt	;wreg free
   827  001C8C  5040               	movf	?_vfpfcnvrt^0,w,c
   828  001C8E  0100               	movlb	0	; () banked
   829  001C90  2760               	addwf	_nout& (0+255),f,b
   830  001C92  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
   831  001C94  2361               	addwfc	(_nout+1)& (0+255),f,b
   832  001C96                     l1734:
   833                           
   834                           ; BSR set to: 0
   835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   836  001C96  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
   837  001C9A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   838  001C9E                     	if	0	;tblptru may be non-zero
   839  001C9E                     	endif
   840  001C9E                     	if	0	;tblptru may be non-zero
   841  001C9E                     	endif
   842  001C9E  0008               	tblrd		*
   843  001CA0  50F5               	movf	tablat,w,c
   844  001CA2  0900               	iorlw	0
   845  001CA4  A4D8               	btfss	status,2,c
   846  001CA6  EF57  F00E         	goto	u1211
   847  001CAA  EF59  F00E         	goto	u1210
   848  001CAE                     u1211:
   849  001CAE  EF38  F00E         	goto	l1732
   850  001CB2                     u1210:
   851  001CB2                     
   852                           ; BSR set to: 0
   853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   854  001CB2  C060  F050         	movff	_nout,?_vfprintf
   855  001CB6  C061  F051         	movff	_nout+1,?_vfprintf+1
   856  001CBA                     
   857                           ; BSR set to: 0
   858  001CBA  0012               	return		;funcret
   859  001CBC                     __end_of_vfprintf:
   860                           	callstack 0
   861                           
   862 ;; *************** function _vfpfcnvrt *****************
   863 ;; Defined at:
   864 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
   867 ;;		 -> sprintf@f(6), 
   868 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
   869 ;;		 -> vfprintf@cfmt(2), 
   870 ;;  ap              2   67[COMRAM] PTR PTR void 
   871 ;;		 -> sprintf@ap(2), 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  ll              8   71[COMRAM] long long 
   874 ;;  llu             8    0        unsigned long long 
   875 ;;  f               4    0        unsigned long long 
   876 ;;  vp              3    0        PTR void 
   877 ;;  ct              3    0        unsigned char [3]
   878 ;;  cp              3    0        PTR unsigned char 
   879 ;;  i               2    0        int 
   880 ;;  done            2    0        int 
   881 ;;  c               1    0        unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  2   63[COMRAM] int 
   884 ;; Registers used:
   885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   891 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   892 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;Total ram usage:       16 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 6
   898 ;; This function calls:
   899 ;;		_dtoa
   900 ;;		_fputc
   901 ;; This function is called by:
   902 ;;		_vfprintf
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text3
   907  0012EE                     __ptext3:
   908                           	callstack 0
   909  0012EE                     _vfpfcnvrt:
   910                           	callstack 22
   911  0012EE                     
   912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   913  0012EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   914  0012F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   915  0012F6  CFDE FFF6          	movff	postinc2,tblptrl
   916  0012FA  CFDD FFF7          	movff	postdec2,tblptrh
   917  0012FE                     	if	0	;tblptru may be non-zero
   918  0012FE                     	endif
   919  0012FE                     	if	0	;tblptru may be non-zero
   920  0012FE                     	endif
   921  0012FE  0008               	tblrd		*
   922  001300  50F5               	movf	tablat,w,c
   923  001302  0A25               	xorlw	37
   924  001304  A4D8               	btfss	status,2,c
   925  001306  EF87  F009         	goto	u1051
   926  00130A  EF89  F009         	goto	u1050
   927  00130E                     u1051:
   928  00130E  EF35  F00A         	goto	l1656
   929  001312                     u1050:
   930  001312                     
   931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   932  001312  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   933  001316  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   934  00131A  2ADE               	incf	postinc2,f,c
   935  00131C  0E00               	movlw	0
   936  00131E  22DD               	addwfc	postdec2,f,c
   937  001320                     
   938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   939  001320  0E00               	movlw	0
   940  001322  0100               	movlb	0	; () banked
   941  001324  6F63               	movwf	(_width+1)& (0+255),b
   942  001326  0E00               	movlw	0
   943  001328  6F62               	movwf	_width& (0+255),b
   944  00132A  C062  F066         	movff	_width,_flags
   945  00132E  C063  F067         	movff	_width+1,_flags+1
   946  001332                     
   947                           ; BSR set to: 0
   948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   949  001332  6964               	setf	_prec& (0+255),b
   950  001334  6965               	setf	(_prec+1)& (0+255),b
   951  001336                     
   952                           ; BSR set to: 0
   953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   954  001336  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   955  00133A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   956  00133E  CFDE FFF6          	movff	postinc2,tblptrl
   957  001342  CFDD FFF7          	movff	postdec2,tblptrh
   958  001346                     	if	0	;tblptru may be non-zero
   959  001346                     	endif
   960  001346                     	if	0	;tblptru may be non-zero
   961  001346                     	endif
   962  001346  0008               	tblrd		*
   963  001348  50F5               	movf	tablat,w,c
   964  00134A  0A64               	xorlw	100
   965  00134C  B4D8               	btfsc	status,2,c
   966  00134E  EFAB  F009         	goto	u1061
   967  001352  EFAD  F009         	goto	u1060
   968  001356                     u1061:
   969  001356  EFBF  F009         	goto	l1634
   970  00135A                     u1060:
   971  00135A                     
   972                           ; BSR set to: 0
   973  00135A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   974  00135E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   975  001362  CFDE FFF6          	movff	postinc2,tblptrl
   976  001366  CFDD FFF7          	movff	postdec2,tblptrh
   977  00136A                     	if	0	;tblptru may be non-zero
   978  00136A                     	endif
   979  00136A                     	if	0	;tblptru may be non-zero
   980  00136A                     	endif
   981  00136A  0008               	tblrd		*
   982  00136C  50F5               	movf	tablat,w,c
   983  00136E  0A69               	xorlw	105
   984  001370  A4D8               	btfss	status,2,c
   985  001372  EFBD  F009         	goto	u1071
   986  001376  EFBF  F009         	goto	u1070
   987  00137A                     u1071:
   988  00137A  EFFF  F009         	goto	l1640
   989  00137E                     u1070:
   990  00137E                     l1634:
   991                           
   992                           ; BSR set to: 0
   993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
   994  00137E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   995  001382  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   996  001386  2ADE               	incf	postinc2,f,c
   997  001388  0E00               	movlw	0
   998  00138A  22DD               	addwfc	postdec2,f,c
   999                           
  1000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1001  00138C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1002  001390  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1003  001394  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1004  001398  0E02               	movlw	2
  1005  00139A  26DE               	addwf	postinc2,f,c
  1006  00139C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1007  0013A0  0E00               	movlw	0
  1008  0013A2  22DD               	addwfc	postdec2,f,c
  1009  0013A4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1010  0013A8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1011  0013AC  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1012  0013B0  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1013  0013B4  0E00               	movlw	0
  1014  0013B6  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1015  0013B8  0EFF               	movlw	-1
  1016  0013BA  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1017  0013BC  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1018  0013BE  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1019  0013C0  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1020  0013C2  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1021  0013C4  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1022  0013C6                     
  1023                           ; BSR set to: 0
  1024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1025  0013C6  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1026  0013CA  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1027  0013CE  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1028  0013D2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1029  0013D6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1030  0013DA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1031  0013DE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1032  0013E2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1033  0013E6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1034  0013EA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1035  0013EE  EC06  F008         	call	_dtoa	;wreg free
  1036  0013F2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1037  0013F6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1038  0013FA  EF50  F00A         	goto	l939
  1039  0013FE                     l1640:
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1043  0013FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1044  001402  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1045  001406  CFDE FFF6          	movff	postinc2,tblptrl
  1046  00140A  CFDD FFF7          	movff	postdec2,tblptrh
  1047  00140E                     	if	0	;tblptru may be non-zero
  1048  00140E                     	endif
  1049  00140E                     	if	0	;tblptru may be non-zero
  1050  00140E                     	endif
  1051  00140E  0008               	tblrd		*
  1052  001410  50F5               	movf	tablat,w,c
  1053  001412  0A25               	xorlw	37
  1054  001414  A4D8               	btfss	status,2,c
  1055  001416  EF0F  F00A         	goto	u1081
  1056  00141A  EF11  F00A         	goto	u1080
  1057  00141E                     u1081:
  1058  00141E  EF28  F00A         	goto	l1650
  1059  001422                     u1080:
  1060  001422                     
  1061                           ; BSR set to: 0
  1062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1063  001422  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1064  001426  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1065  00142A  2ADE               	incf	postinc2,f,c
  1066  00142C  0E00               	movlw	0
  1067  00142E  22DD               	addwfc	postdec2,f,c
  1068  001430                     
  1069                           ; BSR set to: 0
  1070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1071  001430  0E00               	movlw	0
  1072  001432  6E02               	movwf	(fputc@c+1)^0,c
  1073  001434  0E25               	movlw	37
  1074  001436  6E01               	movwf	fputc@c^0,c
  1075  001438  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1076  00143C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1077  001440  ECD3  F00C         	call	_fputc	;wreg free
  1078  001444                     l1646:
  1079                           
  1080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1081  001444  0E00               	movlw	0
  1082  001446  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1083  001448  0E01               	movlw	1
  1084  00144A  6E40               	movwf	?_vfpfcnvrt^0,c
  1085  00144C  EF50  F00A         	goto	l939
  1086  001450                     l1650:
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1090  001450  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1091  001454  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1092  001458  2ADE               	incf	postinc2,f,c
  1093  00145A  0E00               	movlw	0
  1094  00145C  22DD               	addwfc	postdec2,f,c
  1095  00145E                     
  1096                           ; BSR set to: 0
  1097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1098  00145E  0E00               	movlw	0
  1099  001460  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1100  001462  0E00               	movlw	0
  1101  001464  6E40               	movwf	?_vfpfcnvrt^0,c
  1102  001466  EF50  F00A         	goto	l939
  1103  00146A                     l1656:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1106  00146A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1107  00146E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1108  001472  CFDE FFF6          	movff	postinc2,tblptrl
  1109  001476  CFDD FFF7          	movff	postdec2,tblptrh
  1110  00147A                     	if	0	;tblptru may be non-zero
  1111  00147A                     	endif
  1112  00147A                     	if	0	;tblptru may be non-zero
  1113  00147A                     	endif
  1114  00147A  0008               	tblrd		*
  1115  00147C  50F5               	movf	tablat,w,c
  1116  00147E  6E01               	movwf	fputc@c^0,c
  1117  001480  6A02               	clrf	(fputc@c+1)^0,c
  1118  001482  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1119  001486  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1120  00148A  ECD3  F00C         	call	_fputc	;wreg free
  1121  00148E                     
  1122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1123  00148E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1124  001492  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1125  001496  2ADE               	incf	postinc2,f,c
  1126  001498  0E00               	movlw	0
  1127  00149A  22DD               	addwfc	postdec2,f,c
  1128  00149C  EF22  F00A         	goto	l1646
  1129  0014A0                     l939:
  1130  0014A0  0012               	return		;funcret
  1131  0014A2                     __end_of_vfpfcnvrt:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _dtoa *****************
  1135 ;; Defined at:
  1136 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1139 ;;		 -> sprintf@f(6), 
  1140 ;;  d               8   29[COMRAM] long long 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  n               8   53[COMRAM] long long 
  1143 ;;  i               2   61[COMRAM] int 
  1144 ;;  s               2   51[COMRAM] int 
  1145 ;;  w               2   49[COMRAM] int 
  1146 ;;  p               2   47[COMRAM] int 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2   27[COMRAM] int 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1156 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;Total ram usage:       36 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 5
  1163 ;; This function calls:
  1164 ;;		___aodiv
  1165 ;;		___aomod
  1166 ;;		_abs
  1167 ;;		_pad
  1168 ;; This function is called by:
  1169 ;;		_vfpfcnvrt
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           	psect	text4
  1174  00100C                     __ptext4:
  1175                           	callstack 0
  1176  00100C                     _dtoa:
  1177                           	callstack 22
  1178  00100C                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1180  00100C  C01E  F036         	movff	dtoa@d,dtoa@n
  1181  001010  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1182  001014  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1183  001018  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1184  00101C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1185  001020  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1186  001024  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1187  001028  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1188  00102C                     
  1189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1190  00102C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1191  00102E  EF1B  F008         	goto	u901
  1192  001032  EF1E  F008         	goto	u900
  1193  001036                     u901:
  1194  001036  0E01               	movlw	1
  1195  001038  EF1F  F008         	goto	u910
  1196  00103C                     u900:
  1197  00103C  0E00               	movlw	0
  1198  00103E                     u910:
  1199  00103E  6E34               	movwf	dtoa@s^0,c
  1200  001040  6A35               	clrf	(dtoa@s+1)^0,c
  1201                           
  1202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1203  001042  5034               	movf	dtoa@s^0,w,c
  1204  001044  1035               	iorwf	(dtoa@s+1)^0,w,c
  1205  001046  B4D8               	btfsc	status,2,c
  1206  001048  EF28  F008         	goto	u921
  1207  00104C  EF2A  F008         	goto	u920
  1208  001050                     u921:
  1209  001050  EF3A  F008         	goto	l1560
  1210  001054                     u920:
  1211  001054                     
  1212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1213  001054  1E3D               	comf	(dtoa@n+7)^0,f,c
  1214  001056  1E3C               	comf	(dtoa@n+6)^0,f,c
  1215  001058  1E3B               	comf	(dtoa@n+5)^0,f,c
  1216  00105A  1E3A               	comf	(dtoa@n+4)^0,f,c
  1217  00105C  1E39               	comf	(dtoa@n+3)^0,f,c
  1218  00105E  1E38               	comf	(dtoa@n+2)^0,f,c
  1219  001060  1E37               	comf	(dtoa@n+1)^0,f,c
  1220  001062  6C36               	negf	dtoa@n^0,c
  1221  001064  0E00               	movlw	0
  1222  001066  2237               	addwfc	(dtoa@n+1)^0,f,c
  1223  001068  2238               	addwfc	(dtoa@n+2)^0,f,c
  1224  00106A  2239               	addwfc	(dtoa@n+3)^0,f,c
  1225  00106C  223A               	addwfc	(dtoa@n+4)^0,f,c
  1226  00106E  223B               	addwfc	(dtoa@n+5)^0,f,c
  1227  001070  223C               	addwfc	(dtoa@n+6)^0,f,c
  1228  001072  223D               	addwfc	(dtoa@n+7)^0,f,c
  1229  001074                     l1560:
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1232  001074  0100               	movlb	0	; () banked
  1233  001076  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1234  001078  EF40  F008         	goto	u931
  1235  00107C  EF42  F008         	goto	u930
  1236  001080                     u931:
  1237  001080  EF43  F008         	goto	l1564
  1238  001084                     u930:
  1239  001084                     
  1240                           ; BSR set to: 0
  1241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1242  001084  9366               	bcf	_flags& (0+255),1,b
  1243  001086                     l1564:
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1247  001086  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1248  001088  EF50  F008         	goto	u940
  1249  00108C  5165               	movf	(_prec+1)& (0+255),w,b
  1250  00108E  E106               	bnz	u941
  1251  001090  0564               	decf	_prec& (0+255),w,b
  1252  001092  B0D8               	btfsc	status,0,c
  1253  001094  EF4E  F008         	goto	u941
  1254  001098  EF50  F008         	goto	u940
  1255  00109C                     u941:
  1256  00109C  EF56  F008         	goto	l912
  1257  0010A0                     u940:
  1258  0010A0                     
  1259                           ; BSR set to: 0
  1260  0010A0  0E00               	movlw	0
  1261  0010A2  6E31               	movwf	(dtoa@p+1)^0,c
  1262  0010A4  0E01               	movlw	1
  1263  0010A6  6E30               	movwf	dtoa@p^0,c
  1264  0010A8  EF5A  F008         	goto	l914
  1265  0010AC                     l912:
  1266                           
  1267                           ; BSR set to: 0
  1268  0010AC  C064  F030         	movff	_prec,dtoa@p
  1269  0010B0  C065  F031         	movff	_prec+1,dtoa@p+1
  1270  0010B4                     l914:
  1271                           
  1272                           ; BSR set to: 0
  1273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1274  0010B4  C062  F032         	movff	_width,dtoa@w
  1275  0010B8  C063  F033         	movff	_width+1,dtoa@w+1
  1276  0010BC                     
  1277                           ; BSR set to: 0
  1278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1279  0010BC  5034               	movf	dtoa@s^0,w,c
  1280  0010BE  1035               	iorwf	(dtoa@s+1)^0,w,c
  1281  0010C0  A4D8               	btfss	status,2,c
  1282  0010C2  EF65  F008         	goto	u951
  1283  0010C6  EF67  F008         	goto	u950
  1284  0010CA                     u951:
  1285  0010CA  EF6E  F008         	goto	l1572
  1286  0010CE                     u950:
  1287  0010CE                     
  1288                           ; BSR set to: 0
  1289  0010CE  A566               	btfss	_flags& (0+255),2,b
  1290  0010D0  EF6C  F008         	goto	u961
  1291  0010D4  EF6E  F008         	goto	u960
  1292  0010D8                     u961:
  1293  0010D8  EF71  F008         	goto	l1574
  1294  0010DC                     u960:
  1295  0010DC                     l1572:
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1299  0010DC  0632               	decf	dtoa@w^0,f,c
  1300  0010DE  A0D8               	btfss	status,0,c
  1301  0010E0  0633               	decf	(dtoa@w+1)^0,f,c
  1302  0010E2                     l1574:
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1306  0010E2  0E00               	movlw	0
  1307  0010E4  6E3F               	movwf	(dtoa@i+1)^0,c
  1308  0010E6  0E1F               	movlw	31
  1309  0010E8  6E3E               	movwf	dtoa@i^0,c
  1310  0010EA                     
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1313  0010EA  0E00               	movlw	0
  1314  0010EC  6F8D               	movwf	(_dbuf+31)& (0+255),b
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1317  0010EE  EFF5  F008         	goto	l1588
  1318  0010F2                     l1578:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1321  0010F2  063E               	decf	dtoa@i^0,f,c
  1322  0010F4  A0D8               	btfss	status,0,c
  1323  0010F6  063F               	decf	(dtoa@i+1)^0,f,c
  1324  0010F8                     
  1325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1326  0010F8  0E6E               	movlw	low _dbuf
  1327  0010FA  243E               	addwf	dtoa@i^0,w,c
  1328  0010FC  6ED9               	movwf	fsr2l,c
  1329  0010FE  0E00               	movlw	high _dbuf
  1330  001100  203F               	addwfc	(dtoa@i+1)^0,w,c
  1331  001102  6EDA               	movwf	fsr2h,c
  1332  001104  C036  F001         	movff	dtoa@n,___aomod@dividend
  1333  001108  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1334  00110C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1335  001110  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1336  001114  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1337  001118  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1338  00111C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1339  001120  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1340  001124  0E0A               	movlw	10
  1341  001126  6E09               	movwf	___aomod@divisor^0,c
  1342  001128  0E00               	movlw	0
  1343  00112A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1344  00112C  0E00               	movlw	0
  1345  00112E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1346  001130  0E00               	movlw	0
  1347  001132  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1348  001134  0E00               	movlw	0
  1349  001136  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1350  001138  0E00               	movlw	0
  1351  00113A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1352  00113C  0E00               	movlw	0
  1353  00113E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1354  001140  0E00               	movlw	0
  1355  001142  6E10               	movwf	(___aomod@divisor+7)^0,c
  1356  001144  EC15  F00B         	call	___aomod	;wreg free
  1357  001148  C001  F026         	movff	?___aomod,??_dtoa
  1358  00114C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1359  001150  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1360  001154  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1361  001158  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1362  00115C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1363  001160  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1364  001164  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1365  001168  C026  F013         	movff	??_dtoa,abs@a
  1366  00116C  C028  F014         	movff	??_dtoa+2,abs@a+1
  1367  001170  EC18  F00F         	call	_abs	;wreg free
  1368  001174  5013               	movf	?_abs^0,w,c
  1369  001176  0F30               	addlw	48
  1370  001178  6EDF               	movwf	indf2,c
  1371  00117A                     
  1372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1373  00117A  0630               	decf	dtoa@p^0,f,c
  1374  00117C  A0D8               	btfss	status,0,c
  1375  00117E  0631               	decf	(dtoa@p+1)^0,f,c
  1376  001180                     
  1377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1378  001180  0632               	decf	dtoa@w^0,f,c
  1379  001182  A0D8               	btfss	status,0,c
  1380  001184  0633               	decf	(dtoa@w+1)^0,f,c
  1381  001186                     
  1382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1383  001186  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1384  00118A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1385  00118E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1386  001192  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1387  001196  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1388  00119A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1389  00119E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1390  0011A2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1391  0011A6  0E0A               	movlw	10
  1392  0011A8  6E09               	movwf	___aodiv@divisor^0,c
  1393  0011AA  0E00               	movlw	0
  1394  0011AC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1395  0011AE  0E00               	movlw	0
  1396  0011B0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1397  0011B2  0E00               	movlw	0
  1398  0011B4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1399  0011B6  0E00               	movlw	0
  1400  0011B8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1401  0011BA  0E00               	movlw	0
  1402  0011BC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1403  0011BE  0E00               	movlw	0
  1404  0011C0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1405  0011C2  0E00               	movlw	0
  1406  0011C4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1407  0011C6  EC51  F00A         	call	___aodiv	;wreg free
  1408  0011CA  C001  F036         	movff	?___aodiv,dtoa@n
  1409  0011CE  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1410  0011D2  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1411  0011D6  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1412  0011DA  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1413  0011DE  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1414  0011E2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1415  0011E6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1416  0011EA                     l1588:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1419  0011EA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1420  0011EC  EF00  F009         	goto	u971
  1421  0011F0  503F               	movf	(dtoa@i+1)^0,w,c
  1422  0011F2  E108               	bnz	u970
  1423  0011F4  043E               	decf	dtoa@i^0,w,c
  1424  0011F6  A0D8               	btfss	status,0,c
  1425  0011F8  EF00  F009         	goto	u971
  1426  0011FC  EF02  F009         	goto	u970
  1427  001200                     u971:
  1428  001200  EF33  F009         	goto	l1598
  1429  001204                     u970:
  1430  001204  5036               	movf	dtoa@n^0,w,c
  1431  001206  1037               	iorwf	(dtoa@n+1)^0,w,c
  1432  001208  1038               	iorwf	(dtoa@n+2)^0,w,c
  1433  00120A  1039               	iorwf	(dtoa@n+3)^0,w,c
  1434  00120C  103A               	iorwf	(dtoa@n+4)^0,w,c
  1435  00120E  103B               	iorwf	(dtoa@n+5)^0,w,c
  1436  001210  103C               	iorwf	(dtoa@n+6)^0,w,c
  1437  001212  103D               	iorwf	(dtoa@n+7)^0,w,c
  1438  001214  A4D8               	btfss	status,2,c
  1439  001216  EF0F  F009         	goto	u981
  1440  00121A  EF11  F009         	goto	u980
  1441  00121E                     u981:
  1442  00121E  EF79  F008         	goto	l1578
  1443  001222                     u980:
  1444  001222  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1445  001224  EF1E  F009         	goto	u990
  1446  001228  5031               	movf	(dtoa@p+1)^0,w,c
  1447  00122A  E106               	bnz	u991
  1448  00122C  0430               	decf	dtoa@p^0,w,c
  1449  00122E  B0D8               	btfsc	status,0,c
  1450  001230  EF1C  F009         	goto	u991
  1451  001234  EF1E  F009         	goto	u990
  1452  001238                     u991:
  1453  001238  EF79  F008         	goto	l1578
  1454  00123C                     u990:
  1455  00123C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1456  00123E  EF29  F009         	goto	u1001
  1457  001242  5033               	movf	(dtoa@w+1)^0,w,c
  1458  001244  E108               	bnz	u1000
  1459  001246  0432               	decf	dtoa@w^0,w,c
  1460  001248  A0D8               	btfss	status,0,c
  1461  00124A  EF29  F009         	goto	u1001
  1462  00124E  EF2B  F009         	goto	u1000
  1463  001252                     u1001:
  1464  001252  EF33  F009         	goto	l1598
  1465  001256                     u1000:
  1466  001256  0100               	movlb	0	; () banked
  1467  001258  B366               	btfsc	_flags& (0+255),1,b
  1468  00125A  EF31  F009         	goto	u1011
  1469  00125E  EF33  F009         	goto	u1010
  1470  001262                     u1011:
  1471  001262  EF79  F008         	goto	l1578
  1472  001266                     u1010:
  1473  001266                     l1598:
  1474                           
  1475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1476  001266  5034               	movf	dtoa@s^0,w,c
  1477  001268  1035               	iorwf	(dtoa@s+1)^0,w,c
  1478  00126A  A4D8               	btfss	status,2,c
  1479  00126C  EF3A  F009         	goto	u1021
  1480  001270  EF3C  F009         	goto	u1020
  1481  001274                     u1021:
  1482  001274  EF44  F009         	goto	l1602
  1483  001278                     u1020:
  1484  001278  0100               	movlb	0	; () banked
  1485  00127A  A566               	btfss	_flags& (0+255),2,b
  1486  00127C  EF42  F009         	goto	u1031
  1487  001280  EF44  F009         	goto	u1030
  1488  001284                     u1031:
  1489  001284  EF62  F009         	goto	l1612
  1490  001288                     u1030:
  1491  001288                     l1602:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1494  001288  063E               	decf	dtoa@i^0,f,c
  1495  00128A  A0D8               	btfss	status,0,c
  1496  00128C  063F               	decf	(dtoa@i+1)^0,f,c
  1497  00128E                     
  1498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1499  00128E  5034               	movf	dtoa@s^0,w,c
  1500  001290  1035               	iorwf	(dtoa@s+1)^0,w,c
  1501  001292  A4D8               	btfss	status,2,c
  1502  001294  EF4E  F009         	goto	u1041
  1503  001298  EF50  F009         	goto	u1040
  1504  00129C                     u1041:
  1505  00129C  EF56  F009         	goto	l1608
  1506  0012A0                     u1040:
  1507  0012A0  0E00               	movlw	0
  1508  0012A2  6E2F               	movwf	(_dtoa$718+1)^0,c
  1509  0012A4  0E2B               	movlw	43
  1510  0012A6  6E2E               	movwf	_dtoa$718^0,c
  1511  0012A8  EF5A  F009         	goto	l1610
  1512  0012AC                     l1608:
  1513  0012AC  0E00               	movlw	0
  1514  0012AE  6E2F               	movwf	(_dtoa$718+1)^0,c
  1515  0012B0  0E2D               	movlw	45
  1516  0012B2  6E2E               	movwf	_dtoa$718^0,c
  1517  0012B4                     l1610:
  1518  0012B4  0E6E               	movlw	low _dbuf
  1519  0012B6  243E               	addwf	dtoa@i^0,w,c
  1520  0012B8  6ED9               	movwf	fsr2l,c
  1521  0012BA  0E00               	movlw	high _dbuf
  1522  0012BC  203F               	addwfc	(dtoa@i+1)^0,w,c
  1523  0012BE  6EDA               	movwf	fsr2h,c
  1524  0012C0  C02E  FFDF         	movff	_dtoa$718,indf2
  1525  0012C4                     l1612:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1528  0012C4  C01C  F011         	movff	dtoa@fp,pad@fp
  1529  0012C8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1530  0012CC  0E6E               	movlw	low _dbuf
  1531  0012CE  243E               	addwf	dtoa@i^0,w,c
  1532  0012D0  6E13               	movwf	pad@buf^0,c
  1533  0012D2  0E00               	movlw	high _dbuf
  1534  0012D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  1535  0012D6  6E14               	movwf	(pad@buf+1)^0,c
  1536  0012D8  C032  F015         	movff	dtoa@w,pad@p
  1537  0012DC  C033  F016         	movff	dtoa@w+1,pad@p+1
  1538  0012E0  EC38  F00D         	call	_pad	;wreg free
  1539  0012E4  C011  F01C         	movff	?_pad,?_dtoa
  1540  0012E8  C012  F01D         	movff	?_pad+1,?_dtoa+1
  1541  0012EC  0012               	return		;funcret
  1542  0012EE                     __end_of_dtoa:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _pad *****************
  1546 ;; Defined at:
  1547 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1550 ;;		 -> sprintf@f(6), 
  1551 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1552 ;;		 -> dbuf(32), 
  1553 ;;  p               2   20[COMRAM] int 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  w               2   25[COMRAM] int 
  1556 ;;  i               2   23[COMRAM] int 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   16[COMRAM] int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1566 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;Total ram usage:       11 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 4
  1573 ;; This function calls:
  1574 ;;		_fputc
  1575 ;;		_fputs
  1576 ;;		_strlen
  1577 ;; This function is called by:
  1578 ;;		_dtoa
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text5
  1583  001A70                     __ptext5:
  1584                           	callstack 0
  1585  001A70                     _pad:
  1586                           	callstack 22
  1587  001A70                     
  1588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1589  001A70  0100               	movlb	0	; () banked
  1590  001A72  A166               	btfss	_flags& (0+255),0,b
  1591  001A74  EF3E  F00D         	goto	u851
  1592  001A78  EF40  F00D         	goto	u850
  1593  001A7C                     u851:
  1594  001A7C  EF4A  F00D         	goto	l1532
  1595  001A80                     u850:
  1596  001A80                     
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1599  001A80  C013  F00A         	movff	pad@buf,fputs@s
  1600  001A84  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1601  001A88  C011  F00C         	movff	pad@fp,fputs@fp
  1602  001A8C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1603  001A90  ECB4  F00E         	call	_fputs	;wreg free
  1604  001A94                     l1532:
  1605                           
  1606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1607  001A94  BE16               	btfsc	(pad@p+1)^0,7,c
  1608  001A96  EF4F  F00D         	goto	u861
  1609  001A9A  EF51  F00D         	goto	u860
  1610  001A9E                     u861:
  1611  001A9E  EF57  F00D         	goto	l1536
  1612  001AA2                     u860:
  1613  001AA2  C015  F01A         	movff	pad@p,pad@w
  1614  001AA6  C016  F01B         	movff	pad@p+1,pad@w+1
  1615  001AAA  EF5B  F00D         	goto	l901
  1616  001AAE                     l1536:
  1617  001AAE  0E00               	movlw	0
  1618  001AB0  6E1B               	movwf	(pad@w+1)^0,c
  1619  001AB2  0E00               	movlw	0
  1620  001AB4  6E1A               	movwf	pad@w^0,c
  1621  001AB6                     l901:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1624  001AB6  0E00               	movlw	0
  1625  001AB8  6E19               	movwf	(pad@i+1)^0,c
  1626  001ABA  0E00               	movlw	0
  1627  001ABC  6E18               	movwf	pad@i^0,c
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1630  001ABE  EF6D  F00D         	goto	l1542
  1631  001AC2                     l1538:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1634  001AC2  0E00               	movlw	0
  1635  001AC4  6E02               	movwf	(fputc@c+1)^0,c
  1636  001AC6  0E20               	movlw	32
  1637  001AC8  6E01               	movwf	fputc@c^0,c
  1638  001ACA  C011  F003         	movff	pad@fp,fputc@fp
  1639  001ACE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1640  001AD2  ECD3  F00C         	call	_fputc	;wreg free
  1641  001AD6                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1643  001AD6  4A18               	infsnz	pad@i^0,f,c
  1644  001AD8  2A19               	incf	(pad@i+1)^0,f,c
  1645  001ADA                     l1542:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1648  001ADA  501A               	movf	pad@w^0,w,c
  1649  001ADC  5C18               	subwf	pad@i^0,w,c
  1650  001ADE  5019               	movf	(pad@i+1)^0,w,c
  1651  001AE0  0A80               	xorlw	128
  1652  001AE2  6E17               	movwf	??_pad^0,c
  1653  001AE4  501B               	movf	(pad@w+1)^0,w,c
  1654  001AE6  0A80               	xorlw	128
  1655  001AE8  5817               	subwfb	??_pad^0,w,c
  1656  001AEA  A0D8               	btfss	status,0,c
  1657  001AEC  EF7A  F00D         	goto	u871
  1658  001AF0  EF7C  F00D         	goto	u870
  1659  001AF4                     u871:
  1660  001AF4  EF61  F00D         	goto	l1538
  1661  001AF8                     u870:
  1662  001AF8                     
  1663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1664  001AF8  0100               	movlb	0	; () banked
  1665  001AFA  B166               	btfsc	_flags& (0+255),0,b
  1666  001AFC  EF82  F00D         	goto	u881
  1667  001B00  EF84  F00D         	goto	u880
  1668  001B04                     u881:
  1669  001B04  EF8E  F00D         	goto	l1546
  1670  001B08                     u880:
  1671  001B08                     
  1672                           ; BSR set to: 0
  1673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1674  001B08  C013  F00A         	movff	pad@buf,fputs@s
  1675  001B0C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1676  001B10  C011  F00C         	movff	pad@fp,fputs@fp
  1677  001B14  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1678  001B18  ECB4  F00E         	call	_fputs	;wreg free
  1679  001B1C                     l1546:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1682  001B1C  C013  F001         	movff	pad@buf,strlen@s
  1683  001B20  C014  F002         	movff	pad@buf+1,strlen@s+1
  1684  001B24  EC38  F00F         	call	_strlen	;wreg free
  1685  001B28  501A               	movf	pad@w^0,w,c
  1686  001B2A  2401               	addwf	?_strlen^0,w,c
  1687  001B2C  6E11               	movwf	?_pad^0,c
  1688  001B2E  501B               	movf	(pad@w+1)^0,w,c
  1689  001B30  2002               	addwfc	(?_strlen+1)^0,w,c
  1690  001B32  6E12               	movwf	(?_pad+1)^0,c
  1691  001B34  0012               	return		;funcret
  1692  001B36                     __end_of_pad:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _strlen *****************
  1696 ;; Defined at:
  1697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1700 ;;		 -> dbuf(32), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1703 ;;		 -> dbuf(32), 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    0[COMRAM] unsigned int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        4 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 1
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_pad
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text6
  1728  001E70                     __ptext6:
  1729                           	callstack 0
  1730  001E70                     _strlen:
  1731                           	callstack 24
  1732  001E70  C001  F003         	movff	strlen@s,strlen@a
  1733  001E74  C002  F004         	movff	strlen@s+1,strlen@a+1
  1734  001E78  EF40  F00F         	goto	l1442
  1735  001E7C                     l1440:
  1736  001E7C  4A01               	infsnz	strlen@s^0,f,c
  1737  001E7E  2A02               	incf	(strlen@s+1)^0,f,c
  1738  001E80                     l1442:
  1739  001E80  C001  FFD9         	movff	strlen@s,fsr2l
  1740  001E84  C002  FFDA         	movff	strlen@s+1,fsr2h
  1741  001E88  50DF               	movf	indf2,w,c
  1742  001E8A  A4D8               	btfss	status,2,c
  1743  001E8C  EF4A  F00F         	goto	u711
  1744  001E90  EF4C  F00F         	goto	u710
  1745  001E94                     u711:
  1746  001E94  EF3E  F00F         	goto	l1440
  1747  001E98                     u710:
  1748  001E98  5003               	movf	strlen@a^0,w,c
  1749  001E9A  5C01               	subwf	strlen@s^0,w,c
  1750  001E9C  6E01               	movwf	?_strlen^0,c
  1751  001E9E  5004               	movf	(strlen@a+1)^0,w,c
  1752  001EA0  5802               	subwfb	(strlen@s+1)^0,w,c
  1753  001EA2  6E02               	movwf	(?_strlen+1)^0,c
  1754  001EA4  0012               	return		;funcret
  1755  001EA6                     __end_of_strlen:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _fputs *****************
  1759 ;; Defined at:
  1760 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1763 ;;		 -> dbuf(32), 
  1764 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1765 ;;		 -> sprintf@f(6), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  i               2   14[COMRAM] int 
  1768 ;;  c               1   13[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2    9[COMRAM] int 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;Total ram usage:        7 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 3
  1785 ;; This function calls:
  1786 ;;		_fputc
  1787 ;; This function is called by:
  1788 ;;		_pad
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text7
  1793  001D68                     __ptext7:
  1794                           	callstack 0
  1795  001D68                     _fputs:
  1796                           	callstack 22
  1797  001D68  0E00               	movlw	0
  1798  001D6A  6E10               	movwf	(fputs@i+1)^0,c
  1799  001D6C  0E00               	movlw	0
  1800  001D6E  6E0F               	movwf	fputs@i^0,c
  1801  001D70  EFC5  F00E         	goto	l1436
  1802  001D74                     l1432:
  1803  001D74  C00E  F001         	movff	fputs@c,fputc@c
  1804  001D78  6A02               	clrf	(fputc@c+1)^0,c
  1805  001D7A  C00C  F003         	movff	fputs@fp,fputc@fp
  1806  001D7E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1807  001D82  ECD3  F00C         	call	_fputc	;wreg free
  1808  001D86  4A0F               	infsnz	fputs@i^0,f,c
  1809  001D88  2A10               	incf	(fputs@i+1)^0,f,c
  1810  001D8A                     l1436:
  1811  001D8A  500F               	movf	fputs@i^0,w,c
  1812  001D8C  240A               	addwf	fputs@s^0,w,c
  1813  001D8E  6ED9               	movwf	fsr2l,c
  1814  001D90  5010               	movf	(fputs@i+1)^0,w,c
  1815  001D92  200B               	addwfc	(fputs@s+1)^0,w,c
  1816  001D94  6EDA               	movwf	fsr2h,c
  1817  001D96  50DF               	movf	indf2,w,c
  1818  001D98  6E0E               	movwf	fputs@c^0,c
  1819  001D9A  500E               	movf	fputs@c^0,w,c
  1820  001D9C  A4D8               	btfss	status,2,c
  1821  001D9E  EFD3  F00E         	goto	u701
  1822  001DA2  EFD5  F00E         	goto	u700
  1823  001DA6                     u701:
  1824  001DA6  EFBA  F00E         	goto	l1432
  1825  001DAA                     u700:
  1826  001DAA  0012               	return		;funcret
  1827  001DAC                     __end_of_fputs:
  1828                           	callstack 0
  1829                           
  1830 ;; *************** function _fputc *****************
  1831 ;; Defined at:
  1832 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  c               2    0[COMRAM] int 
  1835 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1836 ;;		 -> sprintf@f(6), 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2    0[COMRAM] int 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;Total ram usage:        9 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 2
  1855 ;; This function calls:
  1856 ;;		_putch
  1857 ;; This function is called by:
  1858 ;;		_pad
  1859 ;;		_vfpfcnvrt
  1860 ;;		_fputs
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text8
  1865  0019A6                     __ptext8:
  1866                           	callstack 0
  1867  0019A6                     _fputc:
  1868                           	callstack 25
  1869  0019A6  5003               	movf	fputc@fp^0,w,c
  1870  0019A8  1004               	iorwf	(fputc@fp+1)^0,w,c
  1871  0019AA  B4D8               	btfsc	status,2,c
  1872  0019AC  EFDA  F00C         	goto	u661
  1873  0019B0  EFDC  F00C         	goto	u660
  1874  0019B4                     u661:
  1875  0019B4  EFE5  F00C         	goto	l1420
  1876  0019B8                     u660:
  1877  0019B8  5003               	movf	fputc@fp^0,w,c
  1878  0019BA  1004               	iorwf	(fputc@fp+1)^0,w,c
  1879  0019BC  A4D8               	btfss	status,2,c
  1880  0019BE  EFE3  F00C         	goto	u671
  1881  0019C2  EFE5  F00C         	goto	u670
  1882  0019C6                     u671:
  1883  0019C6  EFEA  F00C         	goto	l1422
  1884  0019CA                     u670:
  1885  0019CA                     l1420:
  1886  0019CA  5001               	movf	fputc@c^0,w,c
  1887  0019CC  ECC2  F00F         	call	_putch
  1888  0019D0  EF37  F00D         	goto	l965
  1889  0019D4                     l1422:
  1890  0019D4  EE20 F004          	lfsr	2,4
  1891  0019D8  5003               	movf	fputc@fp^0,w,c
  1892  0019DA  26D9               	addwf	fsr2l,f,c
  1893  0019DC  5004               	movf	(fputc@fp+1)^0,w,c
  1894  0019DE  22DA               	addwfc	fsr2h,f,c
  1895  0019E0  50DE               	movf	postinc2,w,c
  1896  0019E2  10DE               	iorwf	postinc2,w,c
  1897  0019E4  B4D8               	btfsc	status,2,c
  1898  0019E6  EFF7  F00C         	goto	u681
  1899  0019EA  EFF9  F00C         	goto	u680
  1900  0019EE                     u681:
  1901  0019EE  EF14  F00D         	goto	l1426
  1902  0019F2                     u680:
  1903  0019F2  EE20 F004          	lfsr	2,4
  1904  0019F6  5003               	movf	fputc@fp^0,w,c
  1905  0019F8  26D9               	addwf	fsr2l,f,c
  1906  0019FA  5004               	movf	(fputc@fp+1)^0,w,c
  1907  0019FC  22DA               	addwfc	fsr2h,f,c
  1908  0019FE  EE10 F002          	lfsr	1,2
  1909  001A02  5003               	movf	fputc@fp^0,w,c
  1910  001A04  26E1               	addwf	fsr1l,f,c
  1911  001A06  5004               	movf	(fputc@fp+1)^0,w,c
  1912  001A08  22E2               	addwfc	fsr1h,f,c
  1913  001A0A  50DE               	movf	postinc2,w,c
  1914  001A0C  5CE6               	subwf	postinc1,w,c
  1915  001A0E  50E6               	movf	postinc1,w,c
  1916  001A10  0A80               	xorlw	128
  1917  001A12  6E09               	movwf	(??_fputc+4)^0,c
  1918  001A14  50DE               	movf	postinc2,w,c
  1919  001A16  0A80               	xorlw	128
  1920  001A18  5809               	subwfb	(??_fputc+4)^0,w,c
  1921  001A1A  B0D8               	btfsc	status,0,c
  1922  001A1C  EF12  F00D         	goto	u691
  1923  001A20  EF14  F00D         	goto	u690
  1924  001A24                     u691:
  1925  001A24  EF37  F00D         	goto	l965
  1926  001A28                     u690:
  1927  001A28                     l1426:
  1928  001A28  EE20 F002          	lfsr	2,2
  1929  001A2C  5003               	movf	fputc@fp^0,w,c
  1930  001A2E  26D9               	addwf	fsr2l,f,c
  1931  001A30  5004               	movf	(fputc@fp+1)^0,w,c
  1932  001A32  22DA               	addwfc	fsr2h,f,c
  1933  001A34  CFDE F005          	movff	postinc2,??_fputc
  1934  001A38  CFDD F006          	movff	postdec2,??_fputc+1
  1935  001A3C  C003  FFD9         	movff	fputc@fp,fsr2l
  1936  001A40  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1937  001A44  CFDE F007          	movff	postinc2,??_fputc+2
  1938  001A48  CFDD F008          	movff	postdec2,??_fputc+3
  1939  001A4C  5005               	movf	??_fputc^0,w,c
  1940  001A4E  2407               	addwf	(??_fputc+2)^0,w,c
  1941  001A50  6ED9               	movwf	fsr2l,c
  1942  001A52  5006               	movf	(??_fputc+1)^0,w,c
  1943  001A54  2008               	addwfc	(??_fputc+3)^0,w,c
  1944  001A56  6EDA               	movwf	fsr2h,c
  1945  001A58  C001  FFDF         	movff	fputc@c,indf2
  1946  001A5C  EE20 F002          	lfsr	2,2
  1947  001A60  5003               	movf	fputc@fp^0,w,c
  1948  001A62  26D9               	addwf	fsr2l,f,c
  1949  001A64  5004               	movf	(fputc@fp+1)^0,w,c
  1950  001A66  22DA               	addwfc	fsr2h,f,c
  1951  001A68  2ADE               	incf	postinc2,f,c
  1952  001A6A  0E00               	movlw	0
  1953  001A6C  22DD               	addwfc	postdec2,f,c
  1954  001A6E                     l965:
  1955  001A6E  0012               	return		;funcret
  1956  001A70                     __end_of_fputc:
  1957                           	callstack 0
  1958                           
  1959 ;; *************** function _putch *****************
  1960 ;; Defined at:
  1961 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  c               1    wreg     unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  c               1    0[COMRAM] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_fputc
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text9
  1990  001F84                     __ptext9:
  1991                           	callstack 0
  1992  001F84                     _putch:
  1993                           	callstack 25
  1994  001F84  0012               	return		;funcret
  1995  001F86                     __end_of_putch:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _abs *****************
  1999 ;; Defined at:
  2000 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  a               2   18[COMRAM] int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  2   18[COMRAM] int 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        4 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_dtoa
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text10
  2029  001E30                     __ptext10:
  2030                           	callstack 0
  2031  001E30                     _abs:
  2032                           	callstack 25
  2033  001E30  BE14               	btfsc	(abs@a+1)^0,7,c
  2034  001E32  EF25  F00F         	goto	u890
  2035  001E36  5014               	movf	(abs@a+1)^0,w,c
  2036  001E38  E106               	bnz	u891
  2037  001E3A  0413               	decf	abs@a^0,w,c
  2038  001E3C  B0D8               	btfsc	status,0,c
  2039  001E3E  EF23  F00F         	goto	u891
  2040  001E42  EF25  F00F         	goto	u890
  2041  001E46                     u891:
  2042  001E46  EF33  F00F         	goto	l950
  2043  001E4A                     u890:
  2044  001E4A  C013  F015         	movff	abs@a,??_abs
  2045  001E4E  C014  F016         	movff	abs@a+1,??_abs+1
  2046  001E52  1E15               	comf	??_abs^0,f,c
  2047  001E54  1E16               	comf	(??_abs+1)^0,f,c
  2048  001E56  4A15               	infsnz	??_abs^0,f,c
  2049  001E58  2A16               	incf	(??_abs+1)^0,f,c
  2050  001E5A  C015  F013         	movff	??_abs,?_abs
  2051  001E5E  C016  F014         	movff	??_abs+1,?_abs+1
  2052  001E62  EF37  F00F         	goto	l953
  2053  001E66                     l950:
  2054  001E66  C013  F013         	movff	abs@a,?_abs
  2055  001E6A  C014  F014         	movff	abs@a+1,?_abs+1
  2056  001E6E                     l953:
  2057  001E6E  0012               	return		;funcret
  2058  001E70                     __end_of_abs:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function ___aomod *****************
  2062 ;; Defined at:
  2063 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  dividend        8    0[COMRAM] long long 
  2066 ;;  divisor         8    8[COMRAM] long long 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  sign            1   17[COMRAM] unsigned char 
  2069 ;;  counter         1   16[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  8    0[COMRAM] long long 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:       18 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_dtoa
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text11
  2094  00162A                     __ptext11:
  2095                           	callstack 0
  2096  00162A                     ___aomod:
  2097                           	callstack 25
  2098  00162A  0E00               	movlw	0
  2099  00162C  6E12               	movwf	___aomod@sign^0,c
  2100  00162E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2101  001630  EF1E  F00B         	goto	u790
  2102  001634  EF1C  F00B         	goto	u791
  2103  001638                     u791:
  2104  001638  EF30  F00B         	goto	l1500
  2105  00163C                     u790:
  2106  00163C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2107  00163E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2108  001640  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2109  001642  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2110  001644  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2111  001646  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2112  001648  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2113  00164A  6C01               	negf	___aomod@dividend^0,c
  2114  00164C  0E00               	movlw	0
  2115  00164E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2116  001650  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2117  001652  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2118  001654  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2119  001656  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2120  001658  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2121  00165A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2122  00165C  0E01               	movlw	1
  2123  00165E  6E12               	movwf	___aomod@sign^0,c
  2124  001660                     l1500:
  2125  001660  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2126  001662  EF37  F00B         	goto	u800
  2127  001666  EF35  F00B         	goto	u801
  2128  00166A                     u801:
  2129  00166A  EF47  F00B         	goto	l1504
  2130  00166E                     u800:
  2131  00166E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2132  001670  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2133  001672  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2134  001674  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2135  001676  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2136  001678  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2137  00167A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2138  00167C  6C09               	negf	___aomod@divisor^0,c
  2139  00167E  0E00               	movlw	0
  2140  001680  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2141  001682  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2142  001684  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2143  001686  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2144  001688  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2145  00168A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2146  00168C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2147  00168E                     l1504:
  2148  00168E  5009               	movf	___aomod@divisor^0,w,c
  2149  001690  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2150  001692  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2151  001694  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2152  001696  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2153  001698  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2154  00169A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2155  00169C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2156  00169E  B4D8               	btfsc	status,2,c
  2157  0016A0  EF54  F00B         	goto	u811
  2158  0016A4  EF56  F00B         	goto	u810
  2159  0016A8                     u811:
  2160  0016A8  EF9E  F00B         	goto	l1520
  2161  0016AC                     u810:
  2162  0016AC  0E01               	movlw	1
  2163  0016AE  6E11               	movwf	___aomod@counter^0,c
  2164  0016B0  EF64  F00B         	goto	l1510
  2165  0016B4                     l1508:
  2166  0016B4  90D8               	bcf	status,0,c
  2167  0016B6  3609               	rlcf	___aomod@divisor^0,f,c
  2168  0016B8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2169  0016BA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2170  0016BC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2171  0016BE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2172  0016C0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2173  0016C2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2174  0016C4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2175  0016C6  2A11               	incf	___aomod@counter^0,f,c
  2176  0016C8                     l1510:
  2177  0016C8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2178  0016CA  EF69  F00B         	goto	u821
  2179  0016CE  EF6B  F00B         	goto	u820
  2180  0016D2                     u821:
  2181  0016D2  EF5A  F00B         	goto	l1508
  2182  0016D6                     u820:
  2183  0016D6                     l1512:
  2184  0016D6  5009               	movf	___aomod@divisor^0,w,c
  2185  0016D8  5C01               	subwf	___aomod@dividend^0,w,c
  2186  0016DA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2187  0016DC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2188  0016DE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2189  0016E0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2190  0016E2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2191  0016E4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2192  0016E6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2193  0016E8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2194  0016EA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2195  0016EC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2196  0016EE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2197  0016F0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2198  0016F2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2199  0016F4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2200  0016F6  A0D8               	btfss	status,0,c
  2201  0016F8  EF80  F00B         	goto	u831
  2202  0016FC  EF82  F00B         	goto	u830
  2203  001700                     u831:
  2204  001700  EF92  F00B         	goto	l1516
  2205  001704                     u830:
  2206  001704  5009               	movf	___aomod@divisor^0,w,c
  2207  001706  5E01               	subwf	___aomod@dividend^0,f,c
  2208  001708  500A               	movf	(___aomod@divisor+1)^0,w,c
  2209  00170A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2210  00170C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2211  00170E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2212  001710  500C               	movf	(___aomod@divisor+3)^0,w,c
  2213  001712  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2214  001714  500D               	movf	(___aomod@divisor+4)^0,w,c
  2215  001716  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2216  001718  500E               	movf	(___aomod@divisor+5)^0,w,c
  2217  00171A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2218  00171C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2219  00171E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2220  001720  5010               	movf	(___aomod@divisor+7)^0,w,c
  2221  001722  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2222  001724                     l1516:
  2223  001724  90D8               	bcf	status,0,c
  2224  001726  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2225  001728  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2226  00172A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2227  00172C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2228  00172E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2229  001730  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2230  001732  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2231  001734  3209               	rrcf	___aomod@divisor^0,f,c
  2232  001736  2E11               	decfsz	___aomod@counter^0,f,c
  2233  001738  EF6B  F00B         	goto	l1512
  2234  00173C                     l1520:
  2235  00173C  5012               	movf	___aomod@sign^0,w,c
  2236  00173E  B4D8               	btfsc	status,2,c
  2237  001740  EFA4  F00B         	goto	u841
  2238  001744  EFA6  F00B         	goto	u840
  2239  001748                     u841:
  2240  001748  EFB6  F00B         	goto	l1524
  2241  00174C                     u840:
  2242  00174C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2243  00174E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2244  001750  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2245  001752  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2246  001754  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2247  001756  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2248  001758  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2249  00175A  6C01               	negf	___aomod@dividend^0,c
  2250  00175C  0E00               	movlw	0
  2251  00175E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2252  001760  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2253  001762  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2254  001764  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2255  001766  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2256  001768  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2257  00176A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2258  00176C                     l1524:
  2259  00176C  C001  F001         	movff	___aomod@dividend,?___aomod
  2260  001770  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2261  001774  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2262  001778  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2263  00177C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2264  001780  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2265  001784  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2266  001788  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2267  00178C  0012               	return		;funcret
  2268  00178E                     __end_of___aomod:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function ___aodiv *****************
  2272 ;; Defined at:
  2273 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  dividend        8    0[COMRAM] long long 
  2276 ;;  divisor         8    8[COMRAM] long long 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  quotient        8   18[COMRAM] long long 
  2279 ;;  sign            1   17[COMRAM] unsigned char 
  2280 ;;  counter         1   16[COMRAM] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  8    0[COMRAM] long long 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2290 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;Total ram usage:       26 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_dtoa
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text12
  2305  0014A2                     __ptext12:
  2306                           	callstack 0
  2307  0014A2                     ___aodiv:
  2308                           	callstack 25
  2309  0014A2  0E00               	movlw	0
  2310  0014A4  6E12               	movwf	___aodiv@sign^0,c
  2311  0014A6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2312  0014A8  EF5A  F00A         	goto	u720
  2313  0014AC  EF58  F00A         	goto	u721
  2314  0014B0                     u721:
  2315  0014B0  EF6C  F00A         	goto	l1456
  2316  0014B4                     u720:
  2317  0014B4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2318  0014B6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2319  0014B8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2320  0014BA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2321  0014BC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2322  0014BE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2323  0014C0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2324  0014C2  6C09               	negf	___aodiv@divisor^0,c
  2325  0014C4  0E00               	movlw	0
  2326  0014C6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2327  0014C8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2328  0014CA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2329  0014CC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2330  0014CE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2331  0014D0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2332  0014D2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2333  0014D4  0E01               	movlw	1
  2334  0014D6  6E12               	movwf	___aodiv@sign^0,c
  2335  0014D8                     l1456:
  2336  0014D8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2337  0014DA  EF73  F00A         	goto	u730
  2338  0014DE  EF71  F00A         	goto	u731
  2339  0014E2                     u731:
  2340  0014E2  EF85  F00A         	goto	l1462
  2341  0014E6                     u730:
  2342  0014E6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2343  0014E8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2344  0014EA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2345  0014EC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2346  0014EE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2347  0014F0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2348  0014F2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2349  0014F4  6C01               	negf	___aodiv@dividend^0,c
  2350  0014F6  0E00               	movlw	0
  2351  0014F8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2352  0014FA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2353  0014FC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2354  0014FE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2355  001500  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2356  001502  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2357  001504  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2358  001506  0E01               	movlw	1
  2359  001508  1A12               	xorwf	___aodiv@sign^0,f,c
  2360  00150A                     l1462:
  2361  00150A  EE20  F013         	lfsr	2,___aodiv@quotient
  2362  00150E  0E07               	movlw	7
  2363  001510                     u741:
  2364  001510  6ADE               	clrf	postinc2,c
  2365  001512  06E8               	decf	wreg,f,c
  2366  001514  E2FD               	bc	u741
  2367  001516  5009               	movf	___aodiv@divisor^0,w,c
  2368  001518  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2369  00151A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2370  00151C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2371  00151E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2372  001520  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2373  001522  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2374  001524  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2375  001526  B4D8               	btfsc	status,2,c
  2376  001528  EF98  F00A         	goto	u751
  2377  00152C  EF9A  F00A         	goto	u750
  2378  001530                     u751:
  2379  001530  EFEC  F00A         	goto	l1484
  2380  001534                     u750:
  2381  001534  0E01               	movlw	1
  2382  001536  6E11               	movwf	___aodiv@counter^0,c
  2383  001538  EFA8  F00A         	goto	l1470
  2384  00153C                     l1468:
  2385  00153C  90D8               	bcf	status,0,c
  2386  00153E  3609               	rlcf	___aodiv@divisor^0,f,c
  2387  001540  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2388  001542  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2389  001544  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2390  001546  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2391  001548  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2392  00154A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2393  00154C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2394  00154E  2A11               	incf	___aodiv@counter^0,f,c
  2395  001550                     l1470:
  2396  001550  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2397  001552  EFAD  F00A         	goto	u761
  2398  001556  EFAF  F00A         	goto	u760
  2399  00155A                     u761:
  2400  00155A  EF9E  F00A         	goto	l1468
  2401  00155E                     u760:
  2402  00155E                     l1472:
  2403  00155E  90D8               	bcf	status,0,c
  2404  001560  3613               	rlcf	___aodiv@quotient^0,f,c
  2405  001562  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2406  001564  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2407  001566  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2408  001568  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2409  00156A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2410  00156C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2411  00156E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2412  001570  5009               	movf	___aodiv@divisor^0,w,c
  2413  001572  5C01               	subwf	___aodiv@dividend^0,w,c
  2414  001574  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2415  001576  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2416  001578  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2417  00157A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2418  00157C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2419  00157E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2420  001580  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2421  001582  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2422  001584  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2423  001586  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2424  001588  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2425  00158A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2426  00158C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2427  00158E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2428  001590  A0D8               	btfss	status,0,c
  2429  001592  EFCD  F00A         	goto	u771
  2430  001596  EFCF  F00A         	goto	u770
  2431  00159A                     u771:
  2432  00159A  EFE0  F00A         	goto	l1480
  2433  00159E                     u770:
  2434  00159E  5009               	movf	___aodiv@divisor^0,w,c
  2435  0015A0  5E01               	subwf	___aodiv@dividend^0,f,c
  2436  0015A2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2437  0015A4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2438  0015A6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2439  0015A8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2440  0015AA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2441  0015AC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2442  0015AE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2443  0015B0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2444  0015B2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2445  0015B4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2446  0015B6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2447  0015B8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2448  0015BA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2449  0015BC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2450  0015BE  8013               	bsf	___aodiv@quotient^0,0,c
  2451  0015C0                     l1480:
  2452  0015C0  90D8               	bcf	status,0,c
  2453  0015C2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2454  0015C4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2455  0015C6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2456  0015C8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2457  0015CA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2458  0015CC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2459  0015CE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2460  0015D0  3209               	rrcf	___aodiv@divisor^0,f,c
  2461  0015D2  2E11               	decfsz	___aodiv@counter^0,f,c
  2462  0015D4  EFAF  F00A         	goto	l1472
  2463  0015D8                     l1484:
  2464  0015D8  5012               	movf	___aodiv@sign^0,w,c
  2465  0015DA  B4D8               	btfsc	status,2,c
  2466  0015DC  EFF2  F00A         	goto	u781
  2467  0015E0  EFF4  F00A         	goto	u780
  2468  0015E4                     u781:
  2469  0015E4  EF04  F00B         	goto	l1488
  2470  0015E8                     u780:
  2471  0015E8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2472  0015EA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2473  0015EC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2474  0015EE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2475  0015F0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2476  0015F2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2477  0015F4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2478  0015F6  6C13               	negf	___aodiv@quotient^0,c
  2479  0015F8  0E00               	movlw	0
  2480  0015FA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2481  0015FC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2482  0015FE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2483  001600  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2484  001602  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2485  001604  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2486  001606  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2487  001608                     l1488:
  2488  001608  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2489  00160C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2490  001610  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2491  001614  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2492  001618  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2493  00161C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2494  001620  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2495  001624  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2496  001628  0012               	return		;funcret
  2497  00162A                     __end_of___aodiv:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _initialize_LCD *****************
  2501 ;; Defined at:
  2502 ;;		line 10 in file "LCD_16x2.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 3
  2523 ;; This function calls:
  2524 ;;		_clear_Display
  2525 ;;		_display_Off
  2526 ;;		_display_On
  2527 ;;		_entry_mode_Set
  2528 ;;		_function_Set
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text13
  2535  001CBC                     __ptext13:
  2536                           	callstack 0
  2537  001CBC                     _initialize_LCD:
  2538                           	callstack 27
  2539  001CBC                     
  2540                           ;LCD_16x2.c: 11:     _delay((unsigned long)((16)*(16000000/4000.0)));
  2541  001CBC  0E54               	movlw	84
  2542  001CBE  6E02               	movwf	??_initialize_LCD^0,c
  2543  001CC0  0E1C               	movlw	28
  2544  001CC2                     u1317:
  2545  001CC2  2EE8               	decfsz	wreg,f,c
  2546  001CC4  D7FE               	bra	u1317
  2547  001CC6  2E02               	decfsz	??_initialize_LCD^0,f,c
  2548  001CC8  D7FC               	bra	u1317
  2549  001CCA  D000               	nop2	
  2550  001CCC                     
  2551                           ;LCD_16x2.c: 12:     function_Set();
  2552  001CCC  EC78  F00F         	call	_function_Set	;wreg free
  2553  001CD0                     
  2554                           ;LCD_16x2.c: 13:     _delay((unsigned long)((5)*(16000000/4000.0)));
  2555  001CD0  0E1A               	movlw	26
  2556  001CD2  6E02               	movwf	??_initialize_LCD^0,c
  2557  001CD4  0EF8               	movlw	248
  2558  001CD6                     u1327:
  2559  001CD6  2EE8               	decfsz	wreg,f,c
  2560  001CD8  D7FE               	bra	u1327
  2561  001CDA  2E02               	decfsz	??_initialize_LCD^0,f,c
  2562  001CDC  D7FC               	bra	u1327
  2563  001CDE  D000               	nop2	
  2564                           
  2565                           ;LCD_16x2.c: 14:     function_Set();
  2566  001CE0  EC78  F00F         	call	_function_Set	;wreg free
  2567  001CE4                     
  2568                           ;LCD_16x2.c: 15:     _delay((unsigned long)((100)*(16000000/4000.0)));
  2569  001CE4  0E03               	movlw	3
  2570  001CE6  6E03               	movwf	(??_initialize_LCD+1)^0,c
  2571  001CE8  0E08               	movlw	8
  2572  001CEA  6E02               	movwf	??_initialize_LCD^0,c
  2573  001CEC  0E77               	movlw	119
  2574  001CEE                     u1337:
  2575  001CEE  2EE8               	decfsz	wreg,f,c
  2576  001CF0  D7FE               	bra	u1337
  2577  001CF2  2E02               	decfsz	??_initialize_LCD^0,f,c
  2578  001CF4  D7FC               	bra	u1337
  2579  001CF6  2E03               	decfsz	(??_initialize_LCD+1)^0,f,c
  2580  001CF8  D7FA               	bra	u1337
  2581  001CFA  F000               	nop	
  2582  001CFC                     
  2583                           ;LCD_16x2.c: 16:     function_Set();
  2584  001CFC  EC78  F00F         	call	_function_Set	;wreg free
  2585  001D00                     
  2586                           ;LCD_16x2.c: 17:     function_Set();
  2587  001D00  EC78  F00F         	call	_function_Set	;wreg free
  2588  001D04                     
  2589                           ;LCD_16x2.c: 18:     display_Off();
  2590  001D04  EC9C  F00F         	call	_display_Off	;wreg free
  2591  001D08                     
  2592                           ;LCD_16x2.c: 19:     clear_Display();
  2593  001D08  EC53  F00F         	call	_clear_Display	;wreg free
  2594  001D0C                     
  2595                           ;LCD_16x2.c: 20:     entry_mode_Set();
  2596  001D0C  EC84  F00F         	call	_entry_mode_Set	;wreg free
  2597  001D10                     
  2598                           ;LCD_16x2.c: 21:     display_On();
  2599  001D10  EC90  F00F         	call	_display_On	;wreg free
  2600  001D14  0012               	return		;funcret
  2601  001D16                     __end_of_initialize_LCD:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _function_Set *****************
  2605 ;; Defined at:
  2606 ;;		line 24 in file "LCD_16x2.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 2
  2627 ;; This function calls:
  2628 ;;		_register_EN
  2629 ;; This function is called by:
  2630 ;;		_initialize_LCD
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text14
  2635  001EF0                     __ptext14:
  2636                           	callstack 0
  2637  001EF0                     _function_Set:
  2638                           	callstack 27
  2639  001EF0                     
  2640                           ;LCD_16x2.c: 25:     (LATC4=0);
  2641  001EF0  988B               	bcf	3979,4,c	;volatile
  2642                           
  2643                           ;LCD_16x2.c: 26:     (LATB7=0);
  2644  001EF2  9E8A               	bcf	3978,7,c	;volatile
  2645                           
  2646                           ;LCD_16x2.c: 27:     (LATB6=0);
  2647  001EF4  9C8A               	bcf	3978,6,c	;volatile
  2648                           
  2649                           ;LCD_16x2.c: 28:     (LATB5=1);
  2650  001EF6  8A8A               	bsf	3978,5,c	;volatile
  2651                           
  2652                           ;LCD_16x2.c: 29:     (LATB4=1);
  2653  001EF8  888A               	bsf	3978,4,c	;volatile
  2654                           
  2655                           ;LCD_16x2.c: 30:     (LATB3=1);
  2656  001EFA  868A               	bsf	3978,3,c	;volatile
  2657                           
  2658                           ;LCD_16x2.c: 31:     (LATB2=0);
  2659  001EFC  948A               	bcf	3978,2,c	;volatile
  2660                           
  2661                           ;LCD_16x2.c: 32:     (LATB1=0);
  2662  001EFE  928A               	bcf	3978,1,c	;volatile
  2663                           
  2664                           ;LCD_16x2.c: 33:     (LATB0=0);
  2665  001F00  908A               	bcf	3978,0,c	;volatile
  2666  001F02                     
  2667                           ;LCD_16x2.c: 34:     register_EN();
  2668  001F02  ECB3  F00F         	call	_register_EN	;wreg free
  2669  001F06  0012               	return		;funcret
  2670  001F08                     __end_of_function_Set:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _entry_mode_Set *****************
  2674 ;; Defined at:
  2675 ;;		line 77 in file "LCD_16x2.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 2
  2696 ;; This function calls:
  2697 ;;		_register_EN
  2698 ;; This function is called by:
  2699 ;;		_initialize_LCD
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text15
  2704  001F08                     __ptext15:
  2705                           	callstack 0
  2706  001F08                     _entry_mode_Set:
  2707                           	callstack 27
  2708  001F08                     
  2709                           ;LCD_16x2.c: 78:     (LATC4=0);
  2710  001F08  988B               	bcf	3979,4,c	;volatile
  2711                           
  2712                           ;LCD_16x2.c: 79:     (LATB7=0);
  2713  001F0A  9E8A               	bcf	3978,7,c	;volatile
  2714                           
  2715                           ;LCD_16x2.c: 80:     (LATB6=0);
  2716  001F0C  9C8A               	bcf	3978,6,c	;volatile
  2717                           
  2718                           ;LCD_16x2.c: 81:     (LATB5=0);
  2719  001F0E  9A8A               	bcf	3978,5,c	;volatile
  2720                           
  2721                           ;LCD_16x2.c: 82:     (LATB4=0);
  2722  001F10  988A               	bcf	3978,4,c	;volatile
  2723                           
  2724                           ;LCD_16x2.c: 83:     (LATB3=0);
  2725  001F12  968A               	bcf	3978,3,c	;volatile
  2726                           
  2727                           ;LCD_16x2.c: 84:     (LATB2=1);
  2728  001F14  848A               	bsf	3978,2,c	;volatile
  2729                           
  2730                           ;LCD_16x2.c: 85:     (LATB1=1);
  2731  001F16  828A               	bsf	3978,1,c	;volatile
  2732                           
  2733                           ;LCD_16x2.c: 86:     (LATB0=0);
  2734  001F18  908A               	bcf	3978,0,c	;volatile
  2735  001F1A                     
  2736                           ;LCD_16x2.c: 87:     register_EN();
  2737  001F1A  ECB3  F00F         	call	_register_EN	;wreg free
  2738  001F1E  0012               	return		;funcret
  2739  001F20                     __end_of_entry_mode_Set:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _display_On *****************
  2743 ;; Defined at:
  2744 ;;		line 64 in file "LCD_16x2.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 2
  2765 ;; This function calls:
  2766 ;;		_register_EN
  2767 ;; This function is called by:
  2768 ;;		_initialize_LCD
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text16
  2773  001F20                     __ptext16:
  2774                           	callstack 0
  2775  001F20                     _display_On:
  2776                           	callstack 27
  2777  001F20                     
  2778                           ;LCD_16x2.c: 65:     (LATC4=0);
  2779  001F20  988B               	bcf	3979,4,c	;volatile
  2780                           
  2781                           ;LCD_16x2.c: 66:     (LATB7=0);
  2782  001F22  9E8A               	bcf	3978,7,c	;volatile
  2783                           
  2784                           ;LCD_16x2.c: 67:     (LATB6=0);
  2785  001F24  9C8A               	bcf	3978,6,c	;volatile
  2786                           
  2787                           ;LCD_16x2.c: 68:     (LATB5=0);
  2788  001F26  9A8A               	bcf	3978,5,c	;volatile
  2789                           
  2790                           ;LCD_16x2.c: 69:     (LATB4=0);
  2791  001F28  988A               	bcf	3978,4,c	;volatile
  2792                           
  2793                           ;LCD_16x2.c: 70:     (LATB3=1);
  2794  001F2A  868A               	bsf	3978,3,c	;volatile
  2795                           
  2796                           ;LCD_16x2.c: 71:     (LATB2=1);
  2797  001F2C  848A               	bsf	3978,2,c	;volatile
  2798                           
  2799                           ;LCD_16x2.c: 72:     (LATB1=1);
  2800  001F2E  828A               	bsf	3978,1,c	;volatile
  2801                           
  2802                           ;LCD_16x2.c: 73:     (LATB0=1);
  2803  001F30  808A               	bsf	3978,0,c	;volatile
  2804  001F32                     
  2805                           ;LCD_16x2.c: 74:     register_EN();
  2806  001F32  ECB3  F00F         	call	_register_EN	;wreg free
  2807  001F36  0012               	return		;funcret
  2808  001F38                     __end_of_display_On:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _display_Off *****************
  2812 ;; Defined at:
  2813 ;;		line 51 in file "LCD_16x2.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        0 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 2
  2834 ;; This function calls:
  2835 ;;		_register_EN
  2836 ;; This function is called by:
  2837 ;;		_initialize_LCD
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text17
  2842  001F38                     __ptext17:
  2843                           	callstack 0
  2844  001F38                     _display_Off:
  2845                           	callstack 27
  2846  001F38                     
  2847                           ;LCD_16x2.c: 52:     (LATC4=0);
  2848  001F38  988B               	bcf	3979,4,c	;volatile
  2849                           
  2850                           ;LCD_16x2.c: 53:     (LATB7=0);
  2851  001F3A  9E8A               	bcf	3978,7,c	;volatile
  2852                           
  2853                           ;LCD_16x2.c: 54:     (LATB6=0);
  2854  001F3C  9C8A               	bcf	3978,6,c	;volatile
  2855                           
  2856                           ;LCD_16x2.c: 55:     (LATB5=0);
  2857  001F3E  9A8A               	bcf	3978,5,c	;volatile
  2858                           
  2859                           ;LCD_16x2.c: 56:     (LATB4=0);
  2860  001F40  988A               	bcf	3978,4,c	;volatile
  2861                           
  2862                           ;LCD_16x2.c: 57:     (LATB3=1);
  2863  001F42  868A               	bsf	3978,3,c	;volatile
  2864                           
  2865                           ;LCD_16x2.c: 58:     (LATB2=0);
  2866  001F44  948A               	bcf	3978,2,c	;volatile
  2867                           
  2868                           ;LCD_16x2.c: 59:     (LATB1=0);
  2869  001F46  928A               	bcf	3978,1,c	;volatile
  2870                           
  2871                           ;LCD_16x2.c: 60:     (LATB0=0);
  2872  001F48  908A               	bcf	3978,0,c	;volatile
  2873  001F4A                     
  2874                           ;LCD_16x2.c: 61:     register_EN();
  2875  001F4A  ECB3  F00F         	call	_register_EN	;wreg free
  2876  001F4E  0012               	return		;funcret
  2877  001F50                     __end_of_display_Off:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _clear_Display *****************
  2881 ;; Defined at:
  2882 ;;		line 37 in file "LCD_16x2.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        1 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 2
  2903 ;; This function calls:
  2904 ;;		_register_EN
  2905 ;; This function is called by:
  2906 ;;		_initialize_LCD
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text18
  2911  001EA6                     __ptext18:
  2912                           	callstack 0
  2913  001EA6                     _clear_Display:
  2914                           	callstack 27
  2915  001EA6                     
  2916                           ;LCD_16x2.c: 38:     (LATC4=0);
  2917  001EA6  988B               	bcf	3979,4,c	;volatile
  2918                           
  2919                           ;LCD_16x2.c: 39:     (LATB7=0);
  2920  001EA8  9E8A               	bcf	3978,7,c	;volatile
  2921                           
  2922                           ;LCD_16x2.c: 40:     (LATB6=0);
  2923  001EAA  9C8A               	bcf	3978,6,c	;volatile
  2924                           
  2925                           ;LCD_16x2.c: 41:     (LATB5=0);
  2926  001EAC  9A8A               	bcf	3978,5,c	;volatile
  2927                           
  2928                           ;LCD_16x2.c: 42:     (LATB4=0);
  2929  001EAE  988A               	bcf	3978,4,c	;volatile
  2930                           
  2931                           ;LCD_16x2.c: 43:     (LATB3=0);
  2932  001EB0  968A               	bcf	3978,3,c	;volatile
  2933                           
  2934                           ;LCD_16x2.c: 44:     (LATB2=0);
  2935  001EB2  948A               	bcf	3978,2,c	;volatile
  2936                           
  2937                           ;LCD_16x2.c: 45:     (LATB1=0);
  2938  001EB4  928A               	bcf	3978,1,c	;volatile
  2939                           
  2940                           ;LCD_16x2.c: 46:     (LATB0=1);
  2941  001EB6  808A               	bsf	3978,0,c	;volatile
  2942  001EB8                     
  2943                           ;LCD_16x2.c: 47:     register_EN();
  2944  001EB8  ECB3  F00F         	call	_register_EN	;wreg free
  2945  001EBC                     
  2946                           ;LCD_16x2.c: 48:     _delay((unsigned long)((1500)*(16000000/4000000.0)));
  2947  001EBC  0E08               	movlw	8
  2948  001EBE  6E01               	movwf	??_clear_Display^0,c
  2949  001EC0  0ECA               	movlw	202
  2950  001EC2                     u1347:
  2951  001EC2  2EE8               	decfsz	wreg,f,c
  2952  001EC4  D7FE               	bra	u1347
  2953  001EC6  2E01               	decfsz	??_clear_Display^0,f,c
  2954  001EC8  D7FC               	bra	u1347
  2955  001ECA  0012               	return		;funcret
  2956  001ECC                     __end_of_clear_Display:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _change_Message *****************
  2960 ;; Defined at:
  2961 ;;		line 151 in file "LCD_16x2.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  line            1    wreg     unsigned char 
  2964 ;;  new_Text        2    0[COMRAM] PTR unsigned char 
  2965 ;;		 -> main@timer(17), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  line            1    6[COMRAM] unsigned char 
  2968 ;;  i               2    7[COMRAM] int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;Total ram usage:        9 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 1
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_main
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text19
  2993  0018A0                     __ptext19:
  2994                           	callstack 0
  2995  0018A0                     _change_Message:
  2996                           	callstack 29
  2997                           
  2998                           ;incstack = 0
  2999                           ;change_Message@line stored from wreg
  3000  0018A0  6E07               	movwf	change_Message@line^0,c
  3001  0018A2                     
  3002                           ;LCD_16x2.c: 152:     int i = 0;
  3003  0018A2  0E00               	movlw	0
  3004  0018A4  6E09               	movwf	(change_Message@i+1)^0,c
  3005  0018A6  0E00               	movlw	0
  3006  0018A8  6E08               	movwf	change_Message@i^0,c
  3007                           
  3008                           ;LCD_16x2.c: 154:     while (new_Text[i] != '\0' && i < 16) {
  3009  0018AA  EF90  F00C         	goto	l1784
  3010  0018AE                     l1778:
  3011                           
  3012                           ;LCD_16x2.c: 156:         if (message[line][i] != new_Text[i]) {
  3013  0018AE  5008               	movf	change_Message@i^0,w,c
  3014  0018B0  2401               	addwf	change_Message@new_Text^0,w,c
  3015  0018B2  6ED9               	movwf	fsr2l,c
  3016  0018B4  5009               	movf	(change_Message@i+1)^0,w,c
  3017  0018B6  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3018  0018B8  6EDA               	movwf	fsr2h,c
  3019  0018BA  5007               	movf	change_Message@line^0,w,c
  3020  0018BC  0D11               	mullw	17
  3021  0018BE  0E8E               	movlw	low _message
  3022  0018C0  6E04               	movwf	(??_change_Message+1)^0,c
  3023  0018C2  0E00               	movlw	high _message
  3024  0018C4  6E05               	movwf	(??_change_Message+2)^0,c
  3025  0018C6  50F3               	movf	243,w,c
  3026  0018C8  2604               	addwf	(??_change_Message+1)^0,f,c
  3027  0018CA  50F4               	movf	244,w,c
  3028  0018CC  2205               	addwfc	(??_change_Message+2)^0,f,c
  3029  0018CE  5008               	movf	change_Message@i^0,w,c
  3030  0018D0  2404               	addwf	(??_change_Message+1)^0,w,c
  3031  0018D2  6EE1               	movwf	fsr1l,c
  3032  0018D4  5009               	movf	(change_Message@i+1)^0,w,c
  3033  0018D6  2005               	addwfc	(??_change_Message+2)^0,w,c
  3034  0018D8  6EE2               	movwf	fsr1h,c
  3035  0018DA  50DE               	movf	postinc2,w,c
  3036  0018DC  18E6               	xorwf	postinc1,w,c
  3037  0018DE  B4D8               	btfsc	status,2,c
  3038  0018E0  EF74  F00C         	goto	u1221
  3039  0018E4  EF76  F00C         	goto	u1220
  3040  0018E8                     u1221:
  3041  0018E8  EF8E  F00C         	goto	l1782
  3042  0018EC                     u1220:
  3043  0018EC                     
  3044                           ;LCD_16x2.c: 157:                 message[line][i] = new_Text[i];
  3045  0018EC  5008               	movf	change_Message@i^0,w,c
  3046  0018EE  2401               	addwf	change_Message@new_Text^0,w,c
  3047  0018F0  6ED9               	movwf	fsr2l,c
  3048  0018F2  5009               	movf	(change_Message@i+1)^0,w,c
  3049  0018F4  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3050  0018F6  6EDA               	movwf	fsr2h,c
  3051  0018F8  5007               	movf	change_Message@line^0,w,c
  3052  0018FA  0D11               	mullw	17
  3053  0018FC  0E8E               	movlw	low _message
  3054  0018FE  6E03               	movwf	??_change_Message^0,c
  3055  001900  0E00               	movlw	high _message
  3056  001902  6E04               	movwf	(??_change_Message+1)^0,c
  3057  001904  50F3               	movf	243,w,c
  3058  001906  2603               	addwf	??_change_Message^0,f,c
  3059  001908  50F4               	movf	244,w,c
  3060  00190A  2204               	addwfc	(??_change_Message+1)^0,f,c
  3061  00190C  5008               	movf	change_Message@i^0,w,c
  3062  00190E  2403               	addwf	??_change_Message^0,w,c
  3063  001910  6EE1               	movwf	fsr1l,c
  3064  001912  5009               	movf	(change_Message@i+1)^0,w,c
  3065  001914  2004               	addwfc	(??_change_Message+1)^0,w,c
  3066  001916  6EE2               	movwf	fsr1h,c
  3067  001918  CFDF FFE7          	movff	indf2,indf1
  3068  00191C                     l1782:
  3069                           
  3070                           ;LCD_16x2.c: 159:         i++;
  3071  00191C  4A08               	infsnz	change_Message@i^0,f,c
  3072  00191E  2A09               	incf	(change_Message@i+1)^0,f,c
  3073  001920                     l1784:
  3074                           
  3075                           ;LCD_16x2.c: 154:     while (new_Text[i] != '\0' && i < 16) {
  3076  001920  5008               	movf	change_Message@i^0,w,c
  3077  001922  2401               	addwf	change_Message@new_Text^0,w,c
  3078  001924  6ED9               	movwf	fsr2l,c
  3079  001926  5009               	movf	(change_Message@i+1)^0,w,c
  3080  001928  2002               	addwfc	(change_Message@new_Text+1)^0,w,c
  3081  00192A  6EDA               	movwf	fsr2h,c
  3082  00192C  50DF               	movf	indf2,w,c
  3083  00192E  B4D8               	btfsc	status,2,c
  3084  001930  EF9C  F00C         	goto	u1231
  3085  001934  EF9E  F00C         	goto	u1230
  3086  001938                     u1231:
  3087  001938  EFAC  F00C         	goto	l1788
  3088  00193C                     u1230:
  3089  00193C  BE09               	btfsc	(change_Message@i+1)^0,7,c
  3090  00193E  EFAA  F00C         	goto	u1241
  3091  001942  5009               	movf	(change_Message@i+1)^0,w,c
  3092  001944  E109               	bnz	u1240
  3093  001946  0E10               	movlw	16
  3094  001948  5C08               	subwf	change_Message@i^0,w,c
  3095  00194A  A0D8               	btfss	status,0,c
  3096  00194C  EFAA  F00C         	goto	u1241
  3097  001950  EFAC  F00C         	goto	u1240
  3098  001954                     u1241:
  3099  001954  EF57  F00C         	goto	l1778
  3100  001958                     u1240:
  3101  001958                     l1788:
  3102  001958  BE09               	btfsc	(change_Message@i+1)^0,7,c
  3103  00195A  EFB8  F00C         	goto	u1251
  3104  00195E  5009               	movf	(change_Message@i+1)^0,w,c
  3105  001960  E109               	bnz	u1250
  3106  001962  0E10               	movlw	16
  3107  001964  5C08               	subwf	change_Message@i^0,w,c
  3108  001966  A0D8               	btfss	status,0,c
  3109  001968  EFB8  F00C         	goto	u1251
  3110  00196C  EFBA  F00C         	goto	u1250
  3111  001970                     u1251:
  3112  001970  EFBC  F00C         	goto	l1792
  3113  001974                     u1250:
  3114  001974  EFD2  F00C         	goto	l193
  3115  001978                     l1792:
  3116                           
  3117                           ;LCD_16x2.c: 162:         message[line][i] = ' ';
  3118  001978  5007               	movf	change_Message@line^0,w,c
  3119  00197A  0D11               	mullw	17
  3120  00197C  0E8E               	movlw	low _message
  3121  00197E  6E03               	movwf	??_change_Message^0,c
  3122  001980  0E00               	movlw	high _message
  3123  001982  6E04               	movwf	(??_change_Message+1)^0,c
  3124  001984  50F3               	movf	243,w,c
  3125  001986  2603               	addwf	??_change_Message^0,f,c
  3126  001988  50F4               	movf	244,w,c
  3127  00198A  2204               	addwfc	(??_change_Message+1)^0,f,c
  3128  00198C  5008               	movf	change_Message@i^0,w,c
  3129  00198E  2403               	addwf	??_change_Message^0,w,c
  3130  001990  6ED9               	movwf	fsr2l,c
  3131  001992  5009               	movf	(change_Message@i+1)^0,w,c
  3132  001994  2004               	addwfc	(??_change_Message+1)^0,w,c
  3133  001996  6EDA               	movwf	fsr2h,c
  3134  001998  0E20               	movlw	32
  3135  00199A  6EDF               	movwf	indf2,c
  3136  00199C                     
  3137                           ;LCD_16x2.c: 163:     }
  3138  00199C  4A08               	infsnz	change_Message@i^0,f,c
  3139  00199E  2A09               	incf	(change_Message@i+1)^0,f,c
  3140  0019A0  EFAC  F00C         	goto	l1788
  3141  0019A4                     l193:
  3142  0019A4  0012               	return		;funcret
  3143  0019A6                     __end_of_change_Message:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _Write_Display *****************
  3147 ;; Defined at:
  3148 ;;		line 90 in file "LCD_16x2.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;Total ram usage:        2 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 3
  3169 ;; This function calls:
  3170 ;;		_Set_Line
  3171 ;;		_Write_caracter
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text20
  3178  001BE6                     __ptext20:
  3179                           	callstack 0
  3180  001BE6                     _Write_Display:
  3181                           	callstack 27
  3182  001BE6                     
  3183                           ;LCD_16x2.c: 92:     if (position_String < 16) {
  3184  001BE6  0100               	movlb	0	; () banked
  3185  001BE8  516D               	movf	(_position_String+1)& (0+255),w,b
  3186  001BEA  E107               	bnz	u1261
  3187  001BEC  0E10               	movlw	16
  3188  001BEE  5D6C               	subwf	_position_String& (0+255),w,b
  3189  001BF0  B0D8               	btfsc	status,0,c
  3190  001BF2  EFFD  F00D         	goto	u1261
  3191  001BF6  EFFF  F00D         	goto	u1260
  3192  001BFA                     u1261:
  3193  001BFA  EF17  F00E         	goto	l1804
  3194  001BFE                     u1260:
  3195  001BFE                     
  3196                           ; BSR set to: 0
  3197                           ;LCD_16x2.c: 93:         Write_caracter(message[linha_LCD][position_String]);
  3198  001BFE  505E               	movf	_linha_LCD^0,w,c
  3199  001C00  0D11               	mullw	17
  3200  001C02  0E8E               	movlw	low _message
  3201  001C04  6E04               	movwf	??_Write_Display^0,c
  3202  001C06  0E00               	movlw	high _message
  3203  001C08  6E05               	movwf	(??_Write_Display+1)^0,c
  3204  001C0A  50F3               	movf	243,w,c
  3205  001C0C  2604               	addwf	??_Write_Display^0,f,c
  3206  001C0E  50F4               	movf	244,w,c
  3207  001C10  2205               	addwfc	(??_Write_Display+1)^0,f,c
  3208  001C12  516C               	movf	_position_String& (0+255),w,b
  3209  001C14  2404               	addwf	??_Write_Display^0,w,c
  3210  001C16  6ED9               	movwf	fsr2l,c
  3211  001C18  516D               	movf	(_position_String+1)& (0+255),w,b
  3212  001C1A  2005               	addwfc	(??_Write_Display+1)^0,w,c
  3213  001C1C  6EDA               	movwf	fsr2h,c
  3214  001C1E  50DF               	movf	indf2,w,c
  3215  001C20  ECC7  F00B         	call	_Write_caracter
  3216  001C24                     
  3217                           ;LCD_16x2.c: 94:         position_String++;
  3218  001C24  0100               	movlb	0	; () banked
  3219  001C26  4B6C               	infsnz	_position_String& (0+255),f,b
  3220  001C28  2B6D               	incf	(_position_String+1)& (0+255),f,b
  3221                           
  3222                           ;LCD_16x2.c: 95:     } else {
  3223  001C2A  EF2C  F00E         	goto	l140
  3224  001C2E                     l1804:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;LCD_16x2.c: 96:         position_String = 0;
  3228  001C2E  0E00               	movlw	0
  3229  001C30  6F6D               	movwf	(_position_String+1)& (0+255),b
  3230  001C32  0E00               	movlw	0
  3231  001C34  6F6C               	movwf	_position_String& (0+255),b
  3232                           
  3233                           ;LCD_16x2.c: 97:         (linha_LCD == 0) ? (linha_LCD = 1) : (linha_LCD = 0);
  3234  001C36  505E               	movf	_linha_LCD^0,w,c
  3235  001C38  A4D8               	btfss	status,2,c
  3236  001C3A  EF21  F00E         	goto	u1271
  3237  001C3E  EF23  F00E         	goto	u1270
  3238  001C42                     u1271:
  3239  001C42  EF27  F00E         	goto	l1808
  3240  001C46                     u1270:
  3241  001C46                     
  3242                           ; BSR set to: 0
  3243  001C46  0E01               	movlw	1
  3244  001C48  6E5E               	movwf	_linha_LCD^0,c
  3245  001C4A  EF29  F00E         	goto	l1810
  3246  001C4E                     l1808:
  3247                           
  3248                           ; BSR set to: 0
  3249  001C4E  0E00               	movlw	0
  3250  001C50  6E5E               	movwf	_linha_LCD^0,c
  3251  001C52                     l1810:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;LCD_16x2.c: 98:         Set_Line(linha_LCD);
  3255  001C52  505E               	movf	_linha_LCD^0,w,c
  3256  001C54  ECD6  F00E         	call	_Set_Line
  3257  001C58                     l140:
  3258  001C58  0012               	return		;funcret
  3259  001C5A                     __end_of_Write_Display:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _Write_caracter *****************
  3263 ;; Defined at:
  3264 ;;		line 103 in file "LCD_16x2.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  c               1    wreg     unsigned char 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  c               1    2[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        3 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 2
  3285 ;; This function calls:
  3286 ;;		_registra_RS
  3287 ;; This function is called by:
  3288 ;;		_Write_Display
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text21
  3293  00178E                     __ptext21:
  3294                           	callstack 0
  3295  00178E                     _Write_caracter:
  3296                           	callstack 27
  3297                           
  3298                           ;incstack = 0
  3299                           ;Write_caracter@c stored from wreg
  3300  00178E  6E03               	movwf	Write_caracter@c^0,c
  3301  001790                     
  3302                           ;LCD_16x2.c: 104:     ((c >> 7)&(0x01)) ? (LATB7=1) : (LATB7=0);
  3303  001790  6A01               	clrf	??_Write_caracter^0,c
  3304  001792  AE03               	btfss	Write_caracter@c^0,7,c
  3305  001794  D001               	bra	u1095
  3306  001796  2A01               	incf	??_Write_caracter^0,f,c
  3307  001798                     u1095:
  3308  001798  A001               	btfss	??_Write_caracter^0,0,c
  3309  00179A  EFD1  F00B         	goto	u1101
  3310  00179E  EFD3  F00B         	goto	u1100
  3311  0017A2                     u1101:
  3312  0017A2  EFD6  F00B         	goto	l144
  3313  0017A6                     u1100:
  3314  0017A6  8E8A               	bsf	3978,7,c	;volatile
  3315  0017A8  EFD7  F00B         	goto	l1690
  3316  0017AC                     l144:
  3317  0017AC  9E8A               	bcf	3978,7,c	;volatile
  3318  0017AE                     l1690:
  3319                           
  3320                           ;LCD_16x2.c: 105:     ((c >> 6)&(0x01)) ? (LATB6=1) : (LATB6=0);
  3321  0017AE  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3322  0017B2  0E06               	movlw	6
  3323  0017B4  6E02               	movwf	(??_Write_caracter+1)^0,c
  3324  0017B6                     u1115:
  3325  0017B6  90D8               	bcf	status,0,c
  3326  0017B8  3201               	rrcf	??_Write_caracter^0,f,c
  3327  0017BA  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3328  0017BC  EFDB  F00B         	goto	u1115
  3329  0017C0  A001               	btfss	??_Write_caracter^0,0,c
  3330  0017C2  EFE5  F00B         	goto	u1121
  3331  0017C6  EFE7  F00B         	goto	u1120
  3332  0017CA                     u1121:
  3333  0017CA  EFEA  F00B         	goto	l148
  3334  0017CE                     u1120:
  3335  0017CE  8C8A               	bsf	3978,6,c	;volatile
  3336  0017D0  EFEB  F00B         	goto	l1694
  3337  0017D4                     l148:
  3338  0017D4  9C8A               	bcf	3978,6,c	;volatile
  3339  0017D6                     l1694:
  3340                           
  3341                           ;LCD_16x2.c: 106:     ((c >> 5)&(0x01)) ? (LATB5=1) : (LATB5=0);
  3342  0017D6  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3343  0017DA  0E05               	movlw	5
  3344  0017DC  6E02               	movwf	(??_Write_caracter+1)^0,c
  3345  0017DE                     u1135:
  3346  0017DE  90D8               	bcf	status,0,c
  3347  0017E0  3201               	rrcf	??_Write_caracter^0,f,c
  3348  0017E2  2E02               	decfsz	(??_Write_caracter+1)^0,f,c
  3349  0017E4  EFEF  F00B         	goto	u1135
  3350  0017E8  A001               	btfss	??_Write_caracter^0,0,c
  3351  0017EA  EFF9  F00B         	goto	u1141
  3352  0017EE  EFFB  F00B         	goto	u1140
  3353  0017F2                     u1141:
  3354  0017F2  EFFE  F00B         	goto	l152
  3355  0017F6                     u1140:
  3356  0017F6  8A8A               	bsf	3978,5,c	;volatile
  3357  0017F8  EFFF  F00B         	goto	l1698
  3358  0017FC                     l152:
  3359  0017FC  9A8A               	bcf	3978,5,c	;volatile
  3360  0017FE                     l1698:
  3361                           
  3362                           ;LCD_16x2.c: 107:     ((c >> 4)&(0x01)) ? (LATB4=1) : (LATB4=0);
  3363  0017FE  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3364  001802  3A01               	swapf	??_Write_caracter^0,f,c
  3365  001804  0E0F               	movlw	15
  3366  001806  1601               	andwf	??_Write_caracter^0,f,c
  3367  001808  A001               	btfss	??_Write_caracter^0,0,c
  3368  00180A  EF09  F00C         	goto	u1151
  3369  00180E  EF0B  F00C         	goto	u1150
  3370  001812                     u1151:
  3371  001812  EF0E  F00C         	goto	l156
  3372  001816                     u1150:
  3373  001816  888A               	bsf	3978,4,c	;volatile
  3374  001818  EF0F  F00C         	goto	l1702
  3375  00181C                     l156:
  3376  00181C  988A               	bcf	3978,4,c	;volatile
  3377  00181E                     l1702:
  3378                           
  3379                           ;LCD_16x2.c: 108:     ((c >> 3)&(0x01)) ? (LATB3=1) : (LATB3=0);
  3380  00181E  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3381  001822  90D8               	bcf	status,0,c
  3382  001824  3201               	rrcf	??_Write_caracter^0,f,c
  3383  001826  90D8               	bcf	status,0,c
  3384  001828  3201               	rrcf	??_Write_caracter^0,f,c
  3385  00182A  90D8               	bcf	status,0,c
  3386  00182C  3201               	rrcf	??_Write_caracter^0,f,c
  3387  00182E  A001               	btfss	??_Write_caracter^0,0,c
  3388  001830  EF1C  F00C         	goto	u1161
  3389  001834  EF1E  F00C         	goto	u1160
  3390  001838                     u1161:
  3391  001838  EF21  F00C         	goto	l160
  3392  00183C                     u1160:
  3393  00183C  868A               	bsf	3978,3,c	;volatile
  3394  00183E  EF22  F00C         	goto	l1706
  3395  001842                     l160:
  3396  001842  968A               	bcf	3978,3,c	;volatile
  3397  001844                     l1706:
  3398                           
  3399                           ;LCD_16x2.c: 109:     ((c >> 2)&(0x01)) ? (LATB2=1) : (LATB2=0);
  3400  001844  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3401  001848  90D8               	bcf	status,0,c
  3402  00184A  3201               	rrcf	??_Write_caracter^0,f,c
  3403  00184C  90D8               	bcf	status,0,c
  3404  00184E  3201               	rrcf	??_Write_caracter^0,f,c
  3405  001850  A001               	btfss	??_Write_caracter^0,0,c
  3406  001852  EF2D  F00C         	goto	u1171
  3407  001856  EF2F  F00C         	goto	u1170
  3408  00185A                     u1171:
  3409  00185A  EF32  F00C         	goto	l164
  3410  00185E                     u1170:
  3411  00185E  848A               	bsf	3978,2,c	;volatile
  3412  001860  EF33  F00C         	goto	l1710
  3413  001864                     l164:
  3414  001864  948A               	bcf	3978,2,c	;volatile
  3415  001866                     l1710:
  3416                           
  3417                           ;LCD_16x2.c: 110:     ((c >> 1)&(0x01)) ? (LATB1=1) : (LATB1=0);
  3418  001866  C003  F001         	movff	Write_caracter@c,??_Write_caracter
  3419  00186A  90D8               	bcf	status,0,c
  3420  00186C  3201               	rrcf	??_Write_caracter^0,f,c
  3421  00186E  A001               	btfss	??_Write_caracter^0,0,c
  3422  001870  EF3C  F00C         	goto	u1181
  3423  001874  EF3E  F00C         	goto	u1180
  3424  001878                     u1181:
  3425  001878  EF41  F00C         	goto	l168
  3426  00187C                     u1180:
  3427  00187C  828A               	bsf	3978,1,c	;volatile
  3428  00187E  EF42  F00C         	goto	l170
  3429  001882                     l168:
  3430  001882  928A               	bcf	3978,1,c	;volatile
  3431  001884                     l170:
  3432                           
  3433                           ;LCD_16x2.c: 111:     ((c >> 0)&(0x01)) ? (LATB0=1) : (LATB0=0);
  3434  001884  A003               	btfss	Write_caracter@c^0,0,c
  3435  001886  EF47  F00C         	goto	u1191
  3436  00188A  EF49  F00C         	goto	u1190
  3437  00188E                     u1191:
  3438  00188E  EF4C  F00C         	goto	l172
  3439  001892                     u1190:
  3440  001892  808A               	bsf	3978,0,c	;volatile
  3441  001894  EF4D  F00C         	goto	l1716
  3442  001898                     l172:
  3443  001898  908A               	bcf	3978,0,c	;volatile
  3444  00189A                     l1716:
  3445                           
  3446                           ;LCD_16x2.c: 112:     registra_RS();
  3447  00189A  ECA8  F00F         	call	_registra_RS	;wreg free
  3448  00189E  0012               	return		;funcret
  3449  0018A0                     __end_of_Write_caracter:
  3450                           	callstack 0
  3451                           
  3452 ;; *************** function _registra_RS *****************
  3453 ;; Defined at:
  3454 ;;		line 115 in file "LCD_16x2.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		None
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;Total ram usage:        0 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_Write_caracter
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text22
  3483  001F50                     __ptext22:
  3484                           	callstack 0
  3485  001F50                     _registra_RS:
  3486                           	callstack 27
  3487  001F50                     
  3488                           ;LCD_16x2.c: 116:     (LATC4=1);
  3489  001F50  888B               	bsf	3979,4,c	;volatile
  3490                           
  3491                           ;LCD_16x2.c: 117:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3492  001F52  D000               	nop2		;2 cycle nop
  3493  001F54  D000               	nop2		;2 cycle nop
  3494                           
  3495                           ;LCD_16x2.c: 118:     (LATC5=1);
  3496  001F56  8A8B               	bsf	3979,5,c	;volatile
  3497                           
  3498                           ;LCD_16x2.c: 119:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3499  001F58  D000               	nop2		;2 cycle nop
  3500  001F5A  D000               	nop2		;2 cycle nop
  3501                           
  3502                           ;LCD_16x2.c: 120:     (LATC5=0);
  3503  001F5C  9A8B               	bcf	3979,5,c	;volatile
  3504                           
  3505                           ;LCD_16x2.c: 121:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3506  001F5E  D000               	nop2		;2 cycle nop
  3507  001F60  D000               	nop2		;2 cycle nop
  3508                           
  3509                           ;LCD_16x2.c: 122:     (LATC4=0);
  3510  001F62  988B               	bcf	3979,4,c	;volatile
  3511  001F64  0012               	return		;funcret
  3512  001F66                     __end_of_registra_RS:
  3513                           	callstack 0
  3514                           
  3515 ;; *************** function _Set_Line *****************
  3516 ;; Defined at:
  3517 ;;		line 125 in file "LCD_16x2.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  line            1    wreg     unsigned char 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  line            1    0[COMRAM] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;Total ram usage:        1 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; Hardware stack levels required when called: 2
  3538 ;; This function calls:
  3539 ;;		_register_EN
  3540 ;; This function is called by:
  3541 ;;		_Write_Display
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text23
  3546  001DAC                     __ptext23:
  3547                           	callstack 0
  3548  001DAC                     _Set_Line:
  3549                           	callstack 27
  3550                           
  3551                           ;incstack = 0
  3552                           ;Set_Line@line stored from wreg
  3553  001DAC  6E01               	movwf	Set_Line@line^0,c
  3554  001DAE                     
  3555                           ;LCD_16x2.c: 126:     if (line == 0) {
  3556  001DAE  5001               	movf	Set_Line@line^0,w,c
  3557  001DB0  A4D8               	btfss	status,2,c
  3558  001DB2  EFDD  F00E         	goto	u1201
  3559  001DB6  EFDF  F00E         	goto	u1200
  3560  001DBA                     u1201:
  3561  001DBA  EFEC  F00E         	goto	l181
  3562  001DBE                     u1200:
  3563  001DBE                     
  3564                           ;LCD_16x2.c: 127:         (LATC4=0);
  3565  001DBE  988B               	bcf	3979,4,c	;volatile
  3566                           
  3567                           ;LCD_16x2.c: 128:         (LATB7=1);
  3568  001DC0  8E8A               	bsf	3978,7,c	;volatile
  3569                           
  3570                           ;LCD_16x2.c: 129:         (LATB6=0);
  3571  001DC2  9C8A               	bcf	3978,6,c	;volatile
  3572                           
  3573                           ;LCD_16x2.c: 130:         (LATB5=0);
  3574  001DC4  9A8A               	bcf	3978,5,c	;volatile
  3575                           
  3576                           ;LCD_16x2.c: 131:         (LATB4=0);
  3577  001DC6  988A               	bcf	3978,4,c	;volatile
  3578                           
  3579                           ;LCD_16x2.c: 132:         (LATB3=0);
  3580  001DC8  968A               	bcf	3978,3,c	;volatile
  3581                           
  3582                           ;LCD_16x2.c: 133:         (LATB2=0);
  3583  001DCA  948A               	bcf	3978,2,c	;volatile
  3584                           
  3585                           ;LCD_16x2.c: 134:         (LATB1=0);
  3586  001DCC  928A               	bcf	3978,1,c	;volatile
  3587                           
  3588                           ;LCD_16x2.c: 135:         (LATB0=0);
  3589  001DCE  908A               	bcf	3978,0,c	;volatile
  3590  001DD0                     l1722:
  3591                           
  3592                           ;LCD_16x2.c: 136:         register_EN();
  3593  001DD0  ECB3  F00F         	call	_register_EN	;wreg free
  3594  001DD4  EFF7  F00E         	goto	l182
  3595  001DD8                     l181:
  3596                           
  3597                           ;LCD_16x2.c: 139:     (LATC4=0);
  3598  001DD8  988B               	bcf	3979,4,c	;volatile
  3599                           
  3600                           ;LCD_16x2.c: 140:     (LATB7=1);
  3601  001DDA  8E8A               	bsf	3978,7,c	;volatile
  3602                           
  3603                           ;LCD_16x2.c: 141:     (LATB6=1);
  3604  001DDC  8C8A               	bsf	3978,6,c	;volatile
  3605                           
  3606                           ;LCD_16x2.c: 142:     (LATB5=0);
  3607  001DDE  9A8A               	bcf	3978,5,c	;volatile
  3608                           
  3609                           ;LCD_16x2.c: 143:     (LATB4=0);
  3610  001DE0  988A               	bcf	3978,4,c	;volatile
  3611                           
  3612                           ;LCD_16x2.c: 144:     (LATB3=0);
  3613  001DE2  968A               	bcf	3978,3,c	;volatile
  3614                           
  3615                           ;LCD_16x2.c: 145:     (LATB2=0);
  3616  001DE4  948A               	bcf	3978,2,c	;volatile
  3617                           
  3618                           ;LCD_16x2.c: 146:     (LATB1=0);
  3619  001DE6  928A               	bcf	3978,1,c	;volatile
  3620                           
  3621                           ;LCD_16x2.c: 147:     (LATB0=0);
  3622  001DE8  908A               	bcf	3978,0,c	;volatile
  3623  001DEA  EFE8  F00E         	goto	l1722
  3624  001DEE                     l182:
  3625  001DEE  0012               	return		;funcret
  3626  001DF0                     __end_of_Set_Line:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _register_EN *****************
  3630 ;; Defined at:
  3631 ;;		line 3 in file "LCD_16x2.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_function_Set
  3656 ;;		_clear_Display
  3657 ;;		_display_Off
  3658 ;;		_display_On
  3659 ;;		_entry_mode_Set
  3660 ;;		_Set_Line
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text24
  3665  001F66                     __ptext24:
  3666                           	callstack 0
  3667  001F66                     _register_EN:
  3668                           	callstack 27
  3669  001F66                     
  3670                           ;LCD_16x2.c: 4:     (LATC5=1);
  3671  001F66  8A8B               	bsf	3979,5,c	;volatile
  3672                           
  3673                           ;LCD_16x2.c: 5:     _delay((unsigned long)((1)*(16000000/4000000.0)));
  3674  001F68  D000               	nop2		;2 cycle nop
  3675  001F6A  D000               	nop2		;2 cycle nop
  3676                           
  3677                           ;LCD_16x2.c: 6:     (LATC5=0);
  3678  001F6C  9A8B               	bcf	3979,5,c	;volatile
  3679  001F6E                     
  3680                           ;LCD_16x2.c: 7:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3681  001F6E  0E35               	movlw	53
  3682  001F70                     u1357:
  3683  001F70  2EE8               	decfsz	wreg,f,c
  3684  001F72  D7FE               	bra	u1357
  3685  001F74  F000               	nop	
  3686  001F76  0012               	return		;funcret
  3687  001F78                     __end_of_register_EN:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _Init_Timers *****************
  3691 ;; Defined at:
  3692 ;;		line 28 in file "main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text25
  3721  001F78                     __ptext25:
  3722                           	callstack 0
  3723  001F78                     _Init_Timers:
  3724                           	callstack 29
  3725  001F78                     
  3726                           ;main.c: 32:     T0CON = 0b11000011;
  3727  001F78  0EC3               	movlw	195
  3728  001F7A  6ED5               	movwf	213,c	;volatile
  3729  001F7C                     
  3730                           ;main.c: 33:     TMR0IE = 1;
  3731  001F7C  8AF2               	bsf	4082,5,c	;volatile
  3732  001F7E                     
  3733                           ;main.c: 35:     PEIE = 1;
  3734  001F7E  8CF2               	bsf	4082,6,c	;volatile
  3735  001F80                     
  3736                           ;main.c: 37:     GIE = 1;
  3737  001F80  8EF2               	bsf	4082,7,c	;volatile
  3738  001F82  0012               	return		;funcret
  3739  001F84                     __end_of_Init_Timers:
  3740                           	callstack 0
  3741                           
  3742 ;; *************** function _interruptsManager *****************
  3743 ;; Defined at:
  3744 ;;		line 17 in file "main.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;		None
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:        0 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		Interrupt level 2
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	intcode
  3772  000008                     __pintcode:
  3773                           	callstack 0
  3774  000008                     _interruptsManager:
  3775                           	callstack 22
  3776                           
  3777                           ;incstack = 0
  3778  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3779  00000A                     
  3780                           ;main.c: 19:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  3781  00000A  AAF2               	btfss	242,5,c	;volatile
  3782  00000C  EF0A  F000         	goto	i2u128_41
  3783  000010  EF0C  F000         	goto	i2u128_40
  3784  000014                     i2u128_41:
  3785  000014  EF1D  F000         	goto	i2l48
  3786  000018                     i2u128_40:
  3787  000018  A4F2               	btfss	242,2,c	;volatile
  3788  00001A  EF11  F000         	goto	i2u129_41
  3789  00001E  EF13  F000         	goto	i2u129_40
  3790  000022                     i2u129_41:
  3791  000022  EF1D  F000         	goto	i2l48
  3792  000026                     i2u129_40:
  3793  000026                     
  3794                           ;main.c: 20:         TMR0 = 6;
  3795  000026  0E00               	movlw	0
  3796  000028  6ED7               	movwf	215,c	;volatile
  3797  00002A  0E06               	movlw	6
  3798  00002C  6ED6               	movwf	214,c	;volatile
  3799  00002E                     
  3800                           ;main.c: 21:         INTCONbits.TMR0IF = 0;
  3801  00002E  94F2               	bcf	242,2,c	;volatile
  3802  000030                     
  3803                           ;main.c: 22:         counter_display++;
  3804  000030  0100               	movlb	0	; () banked
  3805  000032  4B6A               	infsnz	_counter_display& (0+255),f,b
  3806  000034  2B6B               	incf	(_counter_display+1)& (0+255),f,b
  3807  000036                     
  3808                           ; BSR set to: 0
  3809                           ;main.c: 23:         contador++;
  3810  000036  4B68               	infsnz	_contador& (0+255),f,b
  3811  000038  2B69               	incf	(_contador+1)& (0+255),f,b
  3812  00003A                     i2l48:
  3813  00003A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3814  00003C  0011               	retfie		f
  3815  00003E                     __end_of_interruptsManager:
  3816                           	callstack 0
  3817                           
  3818                           	psect	rparam
  3819  0000                     
  3820                           	psect	temp
  3821  00005F                     btemp:
  3822                           	callstack 0
  3823  00005F                     	ds	1
  3824  0000                     int$flags	set	btemp
  3825  0000                     wtemp8	set	btemp+1
  3826  0000                     ttemp5	set	btemp+1
  3827  0000                     ttemp6	set	btemp+4
  3828  0000                     ttemp7	set	btemp+8
  3829                           
  3830                           	psect	idloc
  3831                           
  3832                           ;Config register IDLOC0 @ 0x200000
  3833                           ;	unspecified, using default values
  3834  200000                     	org	2097152
  3835  200000  FF                 	db	255
  3836                           
  3837                           ;Config register IDLOC1 @ 0x200001
  3838                           ;	unspecified, using default values
  3839  200001                     	org	2097153
  3840  200001  FF                 	db	255
  3841                           
  3842                           ;Config register IDLOC2 @ 0x200002
  3843                           ;	unspecified, using default values
  3844  200002                     	org	2097154
  3845  200002  FF                 	db	255
  3846                           
  3847                           ;Config register IDLOC3 @ 0x200003
  3848                           ;	unspecified, using default values
  3849  200003                     	org	2097155
  3850  200003  FF                 	db	255
  3851                           
  3852                           ;Config register IDLOC4 @ 0x200004
  3853                           ;	unspecified, using default values
  3854  200004                     	org	2097156
  3855  200004  FF                 	db	255
  3856                           
  3857                           ;Config register IDLOC5 @ 0x200005
  3858                           ;	unspecified, using default values
  3859  200005                     	org	2097157
  3860  200005  FF                 	db	255
  3861                           
  3862                           ;Config register IDLOC6 @ 0x200006
  3863                           ;	unspecified, using default values
  3864  200006                     	org	2097158
  3865  200006  FF                 	db	255
  3866                           
  3867                           ;Config register IDLOC7 @ 0x200007
  3868                           ;	unspecified, using default values
  3869  200007                     	org	2097159
  3870  200007  FF                 	db	255
  3871                           
  3872                           	psect	config
  3873                           
  3874                           ; Padding undefined space
  3875  300000                     	org	3145728
  3876  300000  FF                 	db	255
  3877                           
  3878                           ;Config register CONFIG1H @ 0x300001
  3879                           ;	Oscillator Selection bits
  3880                           ;	FOSC = INTIO67, Internal oscillator block
  3881                           ;	4X PLL Enable
  3882                           ;	PLLCFG = ON, Oscillator multiplied by 4
  3883                           ;	Primary clock enable bit
  3884                           ;	PRICLKEN = ON, Primary clock is always enabled
  3885                           ;	Fail-Safe Clock Monitor Enable bit
  3886                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3887                           ;	Internal/External Oscillator Switchover bit
  3888                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3889  300001                     	org	3145729
  3890  300001  38                 	db	56
  3891                           
  3892                           ;Config register CONFIG2L @ 0x300002
  3893                           ;	Power-up Timer Enable bit
  3894                           ;	PWRTEN = OFF, Power up timer disabled
  3895                           ;	Brown-out Reset Enable bits
  3896                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3897                           ;	Brown Out Reset Voltage bits
  3898                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3899  300002                     	org	3145730
  3900  300002  1F                 	db	31
  3901                           
  3902                           ;Config register CONFIG2H @ 0x300003
  3903                           ;	Watchdog Timer Enable bits
  3904                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3905                           ;	Watchdog Timer Postscale Select bits
  3906                           ;	WDTPS = 32768, 1:32768
  3907  300003                     	org	3145731
  3908  300003  3C                 	db	60
  3909                           
  3910                           ; Padding undefined space
  3911  300004                     	org	3145732
  3912  300004  FF                 	db	255
  3913                           
  3914                           ;Config register CONFIG3H @ 0x300005
  3915                           ;	CCP2 MUX bit
  3916                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3917                           ;	PORTB A/D Enable bit
  3918                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  3919                           ;	P3A/CCP3 Mux bit
  3920                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3921                           ;	HFINTOSC Fast Start-up
  3922                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3923                           ;	Timer3 Clock input mux bit
  3924                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3925                           ;	ECCP2 B output mux bit
  3926                           ;	P2BMX = PORTD2, P2B is on RD2
  3927                           ;	MCLR Pin Enable bit
  3928                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3929  300005                     	org	3145733
  3930  300005  BF                 	db	191
  3931                           
  3932                           ;Config register CONFIG4L @ 0x300006
  3933                           ;	Stack Full/Underflow Reset Enable bit
  3934                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3935                           ;	Single-Supply ICSP Enable bit
  3936                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3937                           ;	Extended Instruction Set Enable bit
  3938                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3939                           ;	Background Debug
  3940                           ;	DEBUG = 0x1, unprogrammed default
  3941  300006                     	org	3145734
  3942  300006  85                 	db	133
  3943                           
  3944                           ; Padding undefined space
  3945  300007                     	org	3145735
  3946  300007  FF                 	db	255
  3947                           
  3948                           ;Config register CONFIG5L @ 0x300008
  3949                           ;	Code Protection Block 0
  3950                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3951                           ;	Code Protection Block 1
  3952                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3953                           ;	Code Protection Block 2
  3954                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3955                           ;	Code Protection Block 3
  3956                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3957  300008                     	org	3145736
  3958  300008  0F                 	db	15
  3959                           
  3960                           ;Config register CONFIG5H @ 0x300009
  3961                           ;	Boot Block Code Protection bit
  3962                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3963                           ;	Data EEPROM Code Protection bit
  3964                           ;	CPD = OFF, Data EEPROM not code-protected
  3965  300009                     	org	3145737
  3966  300009  C0                 	db	192
  3967                           
  3968                           ;Config register CONFIG6L @ 0x30000A
  3969                           ;	Write Protection Block 0
  3970                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3971                           ;	Write Protection Block 1
  3972                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3973                           ;	Write Protection Block 2
  3974                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3975                           ;	Write Protection Block 3
  3976                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3977  30000A                     	org	3145738
  3978  30000A  0F                 	db	15
  3979                           
  3980                           ;Config register CONFIG6H @ 0x30000B
  3981                           ;	Configuration Register Write Protection bit
  3982                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3983                           ;	Boot Block Write Protection bit
  3984                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3985                           ;	Data EEPROM Write Protection bit
  3986                           ;	WRTD = OFF, Data EEPROM not write-protected
  3987  30000B                     	org	3145739
  3988  30000B  E0                 	db	224
  3989                           
  3990                           ;Config register CONFIG7L @ 0x30000C
  3991                           ;	Table Read Protection Block 0
  3992                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3993                           ;	Table Read Protection Block 1
  3994                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3995                           ;	Table Read Protection Block 2
  3996                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3997                           ;	Table Read Protection Block 3
  3998                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3999  30000C                     	org	3145740
  4000  30000C  0F                 	db	15
  4001                           
  4002                           ;Config register CONFIG7H @ 0x30000D
  4003                           ;	Boot Block Table Read Protection bit
  4004                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4005  30000D                     	org	3145741
  4006  30000D  40                 	db	64
  4007                           tosu	equ	0xFFF
  4008                           tosh	equ	0xFFE
  4009                           tosl	equ	0xFFD
  4010                           stkptr	equ	0xFFC
  4011                           pclatu	equ	0xFFB
  4012                           pclath	equ	0xFFA
  4013                           pcl	equ	0xFF9
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           prodh	equ	0xFF4
  4019                           prodl	equ	0xFF3
  4020                           indf0	equ	0xFEF
  4021                           postinc0	equ	0xFEE
  4022                           postdec0	equ	0xFED
  4023                           preinc0	equ	0xFEC
  4024                           plusw0	equ	0xFEB
  4025                           fsr0h	equ	0xFEA
  4026                           fsr0l	equ	0xFE9
  4027                           wreg	equ	0xFE8
  4028                           indf1	equ	0xFE7
  4029                           postinc1	equ	0xFE6
  4030                           postdec1	equ	0xFE5
  4031                           preinc1	equ	0xFE4
  4032                           plusw1	equ	0xFE3
  4033                           fsr1h	equ	0xFE2
  4034                           fsr1l	equ	0xFE1
  4035                           bsr	equ	0xFE0
  4036                           indf2	equ	0xFDF
  4037                           postinc2	equ	0xFDE
  4038                           postdec2	equ	0xFDD
  4039                           preinc2	equ	0xFDC
  4040                           plusw2	equ	0xFDB
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8

Data Sizes:
    Strings     10
    Constant    0
    Data        36
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     25     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), STR_1(CODE[10]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S645_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 

    change_Message@new_Text	PTR unsigned char  size(2) Largest target is 17
		 -> main@timer(BANK0[17]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _initialize_LCD->_clear_Display
    _Write_Display->_Write_caracter

Critical Paths under _interruptsManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _interruptsManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptsManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptsManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptsManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptsManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptsManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptsManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptsManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptsManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptsManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptsManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptsManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptsManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptsManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptsManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptsManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    7387
                                              8 BANK0     17    17      0
                        _Init_Timers
                      _Write_Display
                     _change_Message
                     _initialize_LCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6608
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _initialize_LCD                                       2     2      0       0
                                              1 COMRAM     2     2      0
                      _clear_Display
                        _display_Off
                         _display_On
                     _entry_mode_Set
                       _function_Set
 ---------------------------------------------------------------------------------
 (2) _function_Set                                         0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _entry_mode_Set                                       0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_On                                           0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _display_Off                                          0     0      0       0
                        _register_EN
 ---------------------------------------------------------------------------------
 (2) _clear_Display                                        1     1      0       0
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (1) _change_Message                                       9     7      2     485
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Write_Display                                        2     2      0     198
                                              3 COMRAM     2     2      0
                           _Set_Line
                     _Write_caracter
 ---------------------------------------------------------------------------------
 (2) _Write_caracter                                       3     3      0     176
                                              0 COMRAM     3     3      0
                        _registra_RS
 ---------------------------------------------------------------------------------
 (3) _registra_RS                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Set_Line                                             1     1      0      22
                                              0 COMRAM     1     1      0
                        _register_EN
 ---------------------------------------------------------------------------------
 (3) _register_EN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Timers                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interruptsManager                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Timers
   _Write_Display
     _Set_Line
       _register_EN
     _Write_caracter
       _registra_RS
   _change_Message
   _initialize_LCD
     _clear_Display
       _register_EN
     _display_Off
       _register_EN
     _display_On
       _register_EN
     _entry_mode_Set
       _register_EN
     _function_Set
       _register_EN
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc

 _interruptsManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      6B       5       66.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9      12        0.0%
DATA                 0      0      C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar 24 13:59:08 2023

              ?_display_Off 0001                          l51 1F82              _change_Message 18A0  
                       l113 1F76                         l122 1ECA                         l131 1F1E  
                       l140 1C58                         l116 1D14                         l125 1F4E  
                       l310 1628                         l119 1F06                         l160 1842  
                       l152 17FC                         l144 17AC                         l128 1F36  
                       l170 1884                         l323 178C                         l172 1898  
                       l164 1864                         l156 181C                         l148 17D4  
                       l181 1DD8                         l182 1DEE                         l175 189E  
                       l168 1882                         l193 19A4                         l178 1F64  
                       l901 1AB6                         l904 1AF8                         l912 10AC  
                       l906 1B34                         l914 10B4                         l932 12EC  
                       l950 1E66                         l953 1E6E                         l945 1CB2  
                       l946 1CBA                         l874 1D66                         l939 14A0  
                       l965 1A6E                         l973 1DAA                         l982 1EA4  
                       l976 1F84                         _GIE 007F97                         u700 1DAA  
                       u701 1DA6                         u710 1E98                         u711 1E94  
                       u720 14B4                         u800 166E                         u721 14B0  
                       u801 166A                         u730 14E6                         u810 16AC  
                       u731 14E2                         u811 16A8                         u820 16D6  
                       u660 19B8                         u900 103C                         u741 1510  
                       u821 16D2                         u661 19B4                         u901 1036  
                       u750 1534                         u830 1704                         u670 19CA  
                       u910 103E                         u751 1530                         u831 1700  
                       u671 19C6                         u760 155E                         u840 174C  
                       u680 19F2                         u920 1054                         u761 155A  
                       u841 1748                         u681 19EE                         u921 1050  
                       u770 159E                         u690 1A28                         u850 1A80  
                       u930 1084                         u771 159A                         u691 1A24  
                       u851 1A7C                         u931 1080                         u780 15E8  
                       u860 1AA2                         u940 10A0                         u781 15E4  
                       u861 1A9E                         u941 109C                         u790 163C  
                       u870 1AF8                         u950 10CE                         u791 1638  
                       u871 1AF4                         u951 10CA                         u880 1B08  
                       u960 10DC                         u881 1B04                         u961 10D8  
                       u890 1E4A                         u970 1204                         u891 1E46  
                       u971 1200                         u980 1222                         u981 121E  
                       u990 123C                         u991 1238                         _abs 1E30  
                       _pad 1A70                         wreg 000FE8                        ?_abs 0013  
                      l1500 1660                        l1420 19CA                        l1510 16C8  
                      l1502 166E                        l1422 19D4                        l1430 1D68  
                      l1512 16D6                        l1520 173C                        l1504 168E  
                      l1424 19F2                        l1416 19A6                        l1432 1D74  
                      l1440 1E7C                        l1600 1278                        l1450 14A6  
                      l1522 174C                        l1514 1704                        l1506 16AC  
                      l1426 1A28                        l1418 19B8                        l1434 1D86  
                      l1442 1E80                        l1530 1A80                        l1610 12B4  
                      l1602 1288                        l1620 1F50                        l1700 1816  
                      l1460 1506                        l1452 14B4                        l1524 176C  
                      l1516 1724                        l1508 16B4                        l1436 1D8A  
                      l1444 1E98                        l1540 1AD6                        l1532 1A94  
                      l1604 128E                        l1612 12C4                        l1710 1866  
                      l1702 181E                        l1470 1550                        l1462 150A  
                      l1454 14D4                        l1518 1736                        l1550 1E30  
                      l1438 1E70                        l1542 1ADA                        l1534 1AA2  
                      l1606 12A0                        l1630 1336                        l1622 12EE  
                      l1616 1F66                        l1720 1DBE                        l1712 187C  
                      l1704 183C                        l1800 1BFE                        l1480 15C0  
                      l1472 155E                        l1464 1516                        l1456 14D8  
                      l1448 14A2                        l1552 1E4A                        l1544 1B08  
                      l1536 1AAE                        l1528 1A70                        l1608 12AC  
                      l1560 1074                        l1640 13FE                        l1632 135A  
                      l1624 1312                        l1618 1F6E                        l1722 1DD0  
                      l1714 1892                        l1706 1844                        l1810 1C52  
                      l1802 1C24                        l1482 15D2                        l1474 1570  
                      l1466 1534                        l1458 14E6                        l1546 1B1C  
                      l1538 1AC2                        l1570 10CE                        l1562 1084  
                      l1554 100C                        l1642 1422                        l1650 1450  
                      l1634 137E                        l1626 1320                        l1730 1C62  
                      l1740 1F7E                        l1716 189A                        l1708 185E  
                      l1804 1C2E                        l1476 159E                        l1468 153C  
                      l1484 15D8                        l1492 162A                        l1580 10F8  
                      l1572 10DC                        l1564 1086                        l1556 102C  
                      l1652 145E                        l1644 1430                        l1636 13C6  
                      l1628 1332                        l1732 1C70                        l1742 1F80  
                      l1718 1DAE                        l1806 1C46                        l1670 1F4A  
                      l1750 1CE4                        l1486 15E8                        l1478 15BE  
                      l1494 162E                        l1590 1204                        l1582 117A  
                      l1574 10E2                        l1566 10A0                        l1558 1054  
                      l1646 1444                        l1734 1C96                        l1830 1B56  
                      l1736 1F78                        l1808 1C4E                        l1672 1EA6  
                      l1680 1F1A                        l1664 1EF0                        l1760 1D0C  
                      l1752 1CFC                        l1744 1CBC                        l1488 1608  
                      l1496 163C                        l1592 1222                        l1584 1180  
                      l1576 10EA                        l1568 10BC                        l1656 146A  
                      l1728 1C5A                        l1840 1BA6                        l1832 1B5A  
                      l1824 1B36                        l1738 1F7C                        l1690 17AE  
                      l1674 1EB8                        l1682 1F20                        l1666 1F02  
                      l1762 1D10                        l1754 1D00                        l1746 1CCC  
                      l1498 165C                        l1594 123C                        l1586 1186  
                      l1578 10F2                        l1658 148E                        l1770 1D38  
                      l1842 1BB0                        l1834 1B76                        l1826 1B4A  
                      l1692 17CE                        l1780 18EC                        l1676 1EBC  
                      l1668 1F38                        l1684 1F32                        l1756 1D04  
                      l1748 1CD0                        l1596 1256                        l1588 11EA  
                      l1772 1D54                        l1764 1D16                        l1844 1BB4  
                      l1836 1B84                        l1828 1B4E                        l1694 17D6  
                      l1686 1790                        l1782 191C                        l1678 1F08  
                      l1758 1D08                        l1598 1266                        l1766 1D28  
                      l1846 1BD0                        l1838 1BA2                        l1696 17F6  
                      l1688 17A6                        l1792 1978                        l1784 1920  
                      l1776 18A2                        l1768 1D30                        l1698 17FE  
                      l1794 199C                        l1786 193C                        l1778 18AE  
                      l1788 1958                        l1798 1BE6                        ?_pad 0011  
                      STR_1 1001                        STR_2 1001                        u1000 1256  
                      u1001 1252                        u1010 1266                        u1011 1262  
                      u1100 17A6                        u1020 1278                        u1101 17A2  
                      u1021 1274                        u1030 1288                        u1031 1284  
                      u1200 1DBE                        u1120 17CE                        u1040 12A0  
                      u1201 1DBA                        u1121 17CA                        u1041 129C  
                      u1050 1312                        u1210 1CB2                        u1115 17B6  
                      u1051 130E                        u1211 1CAE                        u1140 17F6  
                      u1220 18EC                        u1060 135A                        u1300 1BA2  
                      u1141 17F2                        u1221 18E8                        u1061 1356  
                      u1301 1B9E                        u1150 1816                        u1230 193C  
                      u1070 137E                        u1151 1812                        u1135 17DE  
                      u1231 1938                        u1071 137A                        u1160 183C  
                      u1240 1958                        u1080 1422                        u1161 1838  
                      u1241 1954                        u1081 141E                        u1170 185E  
                      u1250 1974                        u1171 185A                        u1251 1970  
                      u1180 187C                        u1260 1BFE                        u1181 1878  
                      u1261 1BFA                        u1317 1CC2                        u1190 1892  
                      u1270 1C46                        _LATB 000F8A                        u1191 188E  
                      u1095 1798                        u1271 1C42                        u1327 1CD6  
                      _LATC 000F8B                        u1337 1CEE                        u1347 1EC2  
                      u1357 1F70                        _PEIE 007F96                        i2l48 003A  
          ??_initialize_LCD 0002                        _TMR0 000FD6                        abs@a 0013  
                      _dbuf 006E                        _main 1B36                        _dtoa 100C  
                      _prec 0064                        _nout 0060                        pad@i 0018  
                      pad@p 0015                        fsr1h 000FE2                        fsr2h 000FDA  
                      indf1 000FE7                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 001A                        fsr2l 000FD9                        btemp 005F  
                      prodh 000FF4                        prodl 000FF3                        start 003E  
              ___param_bank 000000               ??_Init_Timers 0001                       ??_abs 0015  
                     ??_pad 0017      __end_of_change_Message 19A6             __end_of___aodiv 162A  
                     ?_main 0001                       ?_dtoa 001C             __end_of___aomod 178E  
                     _T0CON 000FD5                       _LATB0 007C50                       _LATB1 007C51  
                     _LATB2 007C52                       _LATB3 007C53                       _LATB4 007C54  
                     _LATB5 007C55                       _LATC4 007C5C                       _LATB6 007C56  
                     _LATC5 007C5D                       _LATB7 007C57      __size_of_Write_Display 0074  
              vfpfcnvrt@fmt 0042                       _TRISB 000F93                       _TRISC 000F94  
                     _flags 0066                       _fputc 19A6                       _fputs 1D68  
                     pad@fp 0011                       _width 0062                       _putch 1F84  
                     dtoa@d 001E                       dtoa@i 003E                       dtoa@n 0036  
                     dtoa@p 0030                       dtoa@s 0034                       dtoa@w 0032  
                     tablat 000FF5                       ttemp5 0060                       ttemp6 0063  
                     ttemp7 0067                       status 000FD8                       wtemp8 0060  
           __end_of_sprintf 1D68             __initialization 1DF0                __end_of_main 1BE6  
              __end_of_dtoa 12EE             ?_change_Message 0001             change_Message@i 0008  
                    ??_main 005E                      ??_dtoa 0026       __end_of_clear_Display 1ECC  
          __end_of_Set_Line 1DF0         __end_of_Init_Timers 1F84               __activetblptr 000001  
              ?_register_EN 0001                ?_registra_RS 0001                      ?_fputc 0001  
                    ?_fputs 000A                      ?_putch 0001                      i2l1820 0030  
                    i2l1812 000A                      i2l1822 0036                      i2l1814 0018  
                    i2l1816 0026                      i2l1818 002E                      _OSCCON 000FD3  
                    _TMR0IE 007F95               _Write_Display 1BE6                vfprintf@cfmt 0056  
                 ??___aodiv 0011                   ??___aomod 0011                      clear_0 1E16  
             ?_function_Set 0001                      isa$std 000001                      pad@buf 0013  
      __size_of_display_Off 0018          change_Message@line 0007                      dtoa@fp 001C  
                    _strlen 1E70                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
   __size_of_Write_caracter 0112                      putch@c 0001            __end_of_vfprintf 1CBC  
                 ??_sprintf 005E                  __accesstop 0060     __end_of__initialization 1E1E  
            ?_Write_Display 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
              __pidataBANK0 1ECC                 _Init_Timers 1F78               __end_of_fputc 1A70  
             __end_of_fputs 1DAC               __end_of_putch 1F86              ??_function_Set 0001  
                   ??_fputc 0005                     ??_fputs 000E                     ??_putch 0001  
                __pbssBANK0 0060                   ?_Set_Line 0001                     ?_strlen 0001  
        __size_of_vfpfcnvrt 01B4        __size_of_register_EN 0012                  _display_On 1F20  
      __size_of_registra_RS 0016             ??_Write_Display 0004     __size_of_entry_mode_Set 0018  
                ??_Set_Line 0001                     __Hparam 0000            ??_change_Message 0003  
                   __Lparam 0000                     ___aodiv 14A2                     ___aomod 162A  
                 ?_vfprintf 0050                __psmallconst 1000                     __pcinit 1DF0  
                   __ramtop 1000                     __ptext0 1B36                     __ptext1 1D16  
                   __ptext2 1C5A                     __ptext3 12EE                     __ptext4 100C  
                   __ptext5 1A70                     __ptext6 1E70                     __ptext7 1D68  
                   __ptext8 19A6                     __ptext9 1F84             __size_of_strlen 0036  
              __size_of_abs 0040                __size_of_pad 00C6                     _message 008E  
            _Write_caracter 178E                     _sprintf 1D16        end_of_initialization 1E1E  
      __end_of_function_Set 1F08                     fputc@fp 0003                     fputs@fp 000C  
         __end_of_vfpfcnvrt 14A2     __size_of_initialize_LCD 005A                     postdec1 000FE5  
                   postdec2 000FDD                     postinc0 000FEE                     postinc1 000FE6  
                   postinc2 000FDE                  ??_vfprintf 0056                     strlen@a 0003  
                   strlen@s 0001      __end_of_Write_caracter 18A0                 ?_display_On 0001  
    change_Message@new_Text 0001      __size_of_clear_Display 0026                ?_Init_Timers 0001  
             ??_display_Off 0001                 vfpfcnvrt@ap 0044                 vfpfcnvrt@fp 0040  
               vfpfcnvrt@ll 0048             ?_Write_caracter 0001              __end_of_strlen 1EA6  
       start_initialization 1DF0                Set_Line@line 0001                 __end_of_abs 1E70  
               __end_of_pad 1B36              _entry_mode_Set 1F08                 vfprintf@fmt 0052  
         __size_of_Set_Line 0044         __size_of_display_On 0018                 __pdataBANK0 008E  
                  ??_strlen 0003               _clear_Display 1EA6         __end_of_display_Off 1F50  
               __pbssCOMRAM 005E               __pcstackBANK0 00B2            ___aodiv@dividend 0001  
     __size_of_function_Set 0018      __end_of_entry_mode_Set 1F20              _initialize_LCD 1CBC  
                 __pintcode 0008                    ?___aodiv 0001                    ?___aomod 0001  
           _counter_display 006A            ___aodiv@quotient 0013                _function_Set 1EF0  
         __size_of_vfprintf 0062              ?_clear_Display 0001                 __smallconst 1000  
             ??_register_EN 0001               ??_registra_RS 0001           _interruptsManager 0008  
                 _linha_LCD 005E                    ?_sprintf 0058              __size_of_fputc 00CA  
            __size_of_fputs 0044          ?_interruptsManager 0001              __size_of_putch 0002  
           ?_entry_mode_Set 0001       __end_of_Write_Display 1C5A         ??_interruptsManager 0001  
    __end_of_initialize_LCD 1D16                    i2u128_40 0018                    i2u128_41 0014  
                  i2u129_40 0026                    i2u129_41 0022                 _display_Off 1F38  
                 _vfpfcnvrt 12EE        __size_of_Init_Timers 000C   __end_of_interruptsManager 003E  
                 main@timer 00BA                ??_display_On 0001                   copy_data0 1E04  
       __end_of_register_EN 1F78         __end_of_registra_RS 1F66             ?_initialize_LCD 0001  
                  _Set_Line 1DAC                    __Hrparam 0000                  vfprintf@ap 0054  
                  __Lrparam 0000                  vfprintf@fp 0050                __Lsmallconst 1000  
           Write_caracter@c 0003            ??_Write_caracter 0001            __size_of___aodiv 0188  
          __size_of___aomod 0164          __end_of_display_On 1F38                  ?_vfpfcnvrt 0040  
           ??_clear_Display 0001             ___aodiv@divisor 0009             ___aodiv@counter 0011  
   __size_of_change_Message 0106                  sprintf@fmt 005A                    _dtoa$718 002E  
                  __ptext10 1E30                    __ptext11 162A                    __ptext20 1BE6  
                  __ptext12 14A2                    __ptext21 178E                    __ptext13 1CBC  
                  __ptext22 1F50                    __ptext14 1EF0                    __ptext23 1DAC  
                  __ptext15 1F08                    __ptext24 1F66                    __ptext16 1F20  
                  __ptext25 1F78                    __ptext17 1F38                    __ptext18 1EA6  
                  __ptext19 18A0                    _contador 0068            __size_of_sprintf 0052  
             __size_of_main 00B0               __size_of_dtoa 02E2                    isa$xinst 000000  
                  int$flags 005F                    _vfprintf 1C5A            ___aomod@dividend 0001  
__size_of_interruptsManager 0036                  _INTCONbits 000FF2                 _register_EN 1F66  
               _registra_RS 1F50                    intlevel2 0000          _status_LCD_startup 00B0  
                 sprintf@ap 00B2             _position_String 006C             ___aomod@divisor 0009  
               ??_vfpfcnvrt 0046             ___aomod@counter 0011                    sprintf@f 00B4  
                  sprintf@s 0058            ??_entry_mode_Set 0001                ___aodiv@sign 0012  
              ___aomod@sign 0012  
